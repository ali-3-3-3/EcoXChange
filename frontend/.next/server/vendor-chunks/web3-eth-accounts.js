"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-eth-accounts";
exports.ids = ["vendor-chunks/web3-eth-accounts"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/account.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/account.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decrypt: () => (/* binding */ decrypt),\n/* harmony export */   encrypt: () => (/* binding */ encrypt),\n/* harmony export */   hashMessage: () => (/* binding */ hashMessage),\n/* harmony export */   parseAndValidatePrivateKey: () => (/* binding */ parseAndValidatePrivateKey),\n/* harmony export */   privateKeyToAccount: () => (/* binding */ privateKeyToAccount),\n/* harmony export */   privateKeyToAddress: () => (/* binding */ privateKeyToAddress),\n/* harmony export */   privateKeyToPublicKey: () => (/* binding */ privateKeyToPublicKey),\n/* harmony export */   recover: () => (/* binding */ recover),\n/* harmony export */   recoverTransaction: () => (/* binding */ recoverTransaction),\n/* harmony export */   sign: () => (/* binding */ sign),\n/* harmony export */   signMessageWithPrivateKey: () => (/* binding */ signMessageWithPrivateKey),\n/* harmony export */   signRaw: () => (/* binding */ signRaw),\n/* harmony export */   signTransaction: () => (/* binding */ signTransaction)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/aes.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/aes.js\");\n/* harmony import */ var ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/pbkdf2.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/pbkdf2.js\");\n/* harmony import */ var ethereum_cryptography_scrypt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethereum-cryptography/scrypt.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/scrypt.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tx/constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./schemas.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/schemas.js\");\n/* harmony import */ var _tx_transactionFactory_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tx/transactionFactory.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * The web3 accounts package contains functions to generate Ethereum accounts and sign transactions & data.\n *\n * For using accounts functions, first install Web3 package using `npm i web3` or `yarn add web3` based on your package manager usage.\n * After that, Accounts functions will be available as mentioned in following snippet.\n * ```ts\n * import {Web3} from 'web3';\n *\n * const web3 = new Web3();\n * const account = web3.eth.accounts.create();\n * const result = web3.eth.accounts.hashMessage(\"Test Message\");\n *\n * ```\n *\n * For using individual package install `web3-eth-accounts` package using `npm i web3-eth-accounts` or `yarn add web3-eth-accounts` and only import required functions.\n * This is more efficient approach for building lightweight applications.\n * ```ts\n * import {create,hashMessage} from 'web3-eth-accounts';\n *\n * const account = create();\n * const result = hashMessage(\"Test Message\");\n *\n * ```\n * @module Accounts\n *\n */\n\n\n\n\n\n\n\n\n\n/**\n * Get the private key Uint8Array after the validation.\n * Note: This function is not exported through main web3 package, so for using it directly import from accounts package.\n * @param data - Private key\n * @param ignoreLength - Optional, ignore length check during validation\n * @returns The Uint8Array private key\n *\n * ```ts\n * parseAndValidatePrivateKey(\"0x08c673022000ece7964ea4db2d9369c50442b2869cbd8fc21baaca59e18f642c\")\n *\n * > Uint8Array(32) [\n * 186,  26, 143, 168, 235, 179,  90,  75,\n * 101,  63,  84, 221, 152, 150,  30, 203,\n *   8, 113,  94, 226,  53, 213, 216,   5,\n * 194, 159,  17,  53, 219,  97, 121, 248\n * ]\n *\n * ```\n */\nconst parseAndValidatePrivateKey = (data, ignoreLength) => {\n    let privateKeyUint8Array;\n    // To avoid the case of 1 character less in a hex string which is prefixed with '0' by using 'bytesToUint8Array'\n    if (!ignoreLength && typeof data === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isHexStrict)(data) && data.length !== 66) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.PrivateKeyLengthError();\n    }\n    try {\n        privateKeyUint8Array = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.isUint8Array)(data) ? data : (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToUint8Array)(data);\n    }\n    catch (_a) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidPrivateKeyError();\n    }\n    if (!ignoreLength && privateKeyUint8Array.byteLength !== 32) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.PrivateKeyLengthError();\n    }\n    return privateKeyUint8Array;\n};\n/**\n *\n * Hashes the given message. The data will be `UTF-8 HEX` decoded and enveloped as follows:\n * `\"\\x19Ethereum Signed Message:\\n\" + message.length + message` and hashed using keccak256.\n *\n * @param message - A message to hash, if its HEX it will be UTF8 decoded.\n * @param skipPrefix - (default: false) If true, the message will be not prefixed with \"\\x19Ethereum Signed Message:\\n\" + message.length\n * @returns The hashed message\n *\n * ```ts\n * web3.eth.accounts.hashMessage(\"Hello world\")\n *\n * > \"0x8144a6fa26be252b86456491fbcd43c1de7e022241845ffea1c3df066f7cfede\"\n *\n * web3.eth.accounts.hashMessage(web3.utils.utf8ToHex(\"Hello world\")) // Will be hex decoded in hashMessage\n *\n * > \"0x8144a6fa26be252b86456491fbcd43c1de7e022241845ffea1c3df066f7cfede\"\n *\n * web3.eth.accounts.hashMessage(\"Hello world\", true)\n *\n * > \"0xed6c11b0b5b808960df26f5bfc471d04c1995b0ffd2055925ad1be28d6baadfd\"\n * ```\n */\nconst hashMessage = (message, skipPrefix = false) => {\n    const messageHex = (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isHexStrict)(message) ? message : (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(message);\n    const messageBytes = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(messageHex);\n    const preamble = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.fromUtf8)(`\\x19Ethereum Signed Message:\\n${messageBytes.byteLength}`));\n    const ethMessage = skipPrefix ? messageBytes : (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayConcat)(preamble, messageBytes);\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)(ethMessage); // using keccak in web3-utils.sha3Raw instead of SHA3 (NIST Standard) as both are different\n};\n/**\n * Takes a hash of a message and a private key, signs the message using the SECP256k1 elliptic curve algorithm, and returns the signature components.\n * @param hash - The hash of the message to be signed, represented as a hexadecimal string.\n * @param privateKey - The private key used to sign the message, represented as a byte array.\n * @returns - The signature Object containing the message, messageHash, signature r, s, v\n */\nconst signMessageWithPrivateKey = (hash, privateKey) => {\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n    const signature = _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.sign(hash.substring(2), privateKeyUint8Array);\n    const signatureBytes = signature.toCompactRawBytes();\n    const r = signature.r.toString(16).padStart(64, '0');\n    const s = signature.s.toString(16).padStart(64, '0');\n    const v = signature.recovery + 27;\n    return {\n        messageHash: hash,\n        v: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(v),\n        r: `0x${r}`,\n        s: `0x${s}`,\n        signature: `${(0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(signatureBytes)}${v.toString(16)}`,\n    };\n};\n/**\n * Signs arbitrary data with a given private key.\n * :::info\n * The value passed as the data parameter will be UTF-8 HEX decoded and wrapped as follows: \"\\\\x19Ethereum Signed Message:\\\\n\" + message.length + message\n * :::\n\n * @param data - The data to sign\n * @param privateKey - The 32 byte private key to sign with\n * @returns The signature Object containing the message, messageHash, signature r, s, v\n *\n * ```ts\n * web3.eth.accounts.sign('Some data', '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')\n * > {\n * message: 'Some data',\n * messageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',\n * v: '0x1c',\n * r: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd',\n * s: '0x6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a029',\n * signature: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a0291c'\n * }\n * ```\n */\nconst sign = (data, privateKey) => {\n    const hash = hashMessage(data);\n    const { messageHash, v, r, s, signature } = signMessageWithPrivateKey(hash, privateKey);\n    return {\n        message: data,\n        messageHash,\n        v,\n        r,\n        s,\n        signature,\n    };\n};\n/**\n * Signs raw data with a given private key without adding the Ethereum-specific prefix.\n *\n * @param data - The raw data to sign. If it's a hex string, it will be used as-is. Otherwise, it will be UTF-8 encoded.\n * @param privateKey - The 32 byte private key to sign with\n * @returns The signature Object containing the message, messageHash, signature r, s, v\n *\n * ```ts\n * web3.eth.accounts.signRaw('Some data', '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')\n * > {\n *   message: 'Some data',\n *   messageHash: '0x43a26051362b8040b289abe93334a5e3662751aa691185ae9e9a2e1e0c169350',\n *   v: '0x1b',\n *   r: '0x93da7e2ddd6b2ff1f5af0c752f052ed0d7d5bff19257db547a69cd9a879b37d4',\n *   s: '0x334485e42b33815fd2cf8a245a5393b282214060844a9681495df2257140e75c',\n *   signature: '0x93da7e2ddd6b2ff1f5af0c752f052ed0d7d5bff19257db547a69cd9a879b37d4334485e42b33815fd2cf8a245a5393b282214060844a9681495df2257140e75c1b'\n * }\n * ```\n */\nconst signRaw = (data, privateKey) => {\n    // Hash the message without the Ethereum-specific prefix\n    const hash = hashMessage(data, true);\n    // Sign the hash with the private key\n    const { messageHash, v, r, s, signature } = signMessageWithPrivateKey(hash, privateKey);\n    return {\n        message: data,\n        messageHash,\n        v,\n        r,\n        s,\n        signature,\n    };\n};\n/**\n * Signs an Ethereum transaction with a given private key.\n *\n * @param transaction - The transaction, must be a legacy, EIP2930 or EIP 1559 transaction type\n * @param privateKey -  The private key to import. This is 32 bytes of random data.\n * @returns A signTransactionResult object that contains message hash, r, s, v, transaction hash and raw transaction.\n *\n * This function is not stateful here. We need network access to get the account `nonce` and `chainId` to sign the transaction.\n * This function will rely on user to provide the full transaction to be signed. If you want to sign a partial transaction object\n * Use {@link Web3.eth.accounts.sign} instead.\n *\n * Signing a legacy transaction\n * ```ts\n * import {signTransaction, Transaction} from 'web3-eth-accounts';\n *\n * signTransaction(new Transaction({\n *\tto: '0x118C2E5F57FD62C2B5b46a5ae9216F4FF4011a07',\n *\tvalue: '0x186A0',\n *\tgasLimit: '0x520812',\n *\tgasPrice: '0x09184e72a000',\n *\tdata: '',\n *\tchainId: 1,\n *\tnonce: 0 }),\n * '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')\n *\n * > {\n * messageHash: '0x28b7b75f7ba48d588a902c1ff4d5d13cc0ca9ac0aaa39562368146923fb853bf',\n * v: '0x25',\n * r: '0x601b0017b0e20dd0eeda4b895fbc1a9e8968990953482214f880bae593e71b5',\n * s: '0x690d984493560552e3ebdcc19a65b9c301ea9ddc82d3ab8cfde60485fd5722ce',\n * rawTransaction: '0xf869808609184e72a0008352081294118c2e5f57fd62c2b5b46a5ae9216f4ff4011a07830186a08025a00601b0017b0e20dd0eeda4b895fbc1a9e8968990953482214f880bae593e71b5a0690d984493560552e3ebdcc19a65b9c301ea9ddc82d3ab8cfde60485fd5722ce',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * ```\n *\n * Signing an eip 1559 transaction\n * ```ts\n * import {signTransaction, Transaction} from 'web3-eth-accounts';\n *\n * signTransaction(new Transaction({\n *\tto: '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',\n *\tmaxPriorityFeePerGas: '0x3B9ACA00',\n *\tmaxFeePerGas: '0xB2D05E00',\n *\tgasLimit: '0x6A4012',\n *\tvalue: '0x186A0',\n *\tdata: '',\n *\tchainId: 1,\n *\tnonce: 0}),\n * \"0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318\")\n * > {\n *  messageHash: '0x5744f24d5f0aff6c70487c8e85adf07d8564e50b08558788f00479611d7bae5f',\n * v: '0x25',\n * r: '0x78a5a6b2876c3985f90f82073d18d57ac299b608cc76a4ba697b8bb085048347',\n * s: '0x9cfcb40cc7d505ed17ff2d3337b51b066648f10c6b7e746117de69b2eb6358d',\n * rawTransaction: '0xf8638080836a401294f0109fc8df283027b6285cc889f5aa624eac1f55830186a08025a078a5a6b2876c3985f90f82073d18d57ac299b608cc76a4ba697b8bb085048347a009cfcb40cc7d505ed17ff2d3337b51b066648f10c6b7e746117de69b2eb6358d',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * }\n * ```\n *\n * Signing an eip 2930 transaction\n * ```ts\n * import {signTransaction, Transaction} from 'web3-eth-accounts';\n *\n * signTransaction(new Transaction ({\n *\tchainId: 1,\n *\tnonce: 0,\n *\tgasPrice: '0x09184e72a000',\n *\tgasLimit: '0x2710321',\n *\tto: '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',\n *\tvalue: '0x186A0',\n *\tdata: '',\n *\taccessList: [\n *\t\t{\n *\t\t\taddress: '0x0000000000000000000000000000000000000101',\n *\t\t\tstorageKeys: [\n *\t\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000000',\n *\t\t\t\t'0x00000000000000000000000000000000000000000000000000000000000060a7',\n *\t\t\t],\n *\t\t},\n *\t],\n * }),\"0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318\")\n *\n * > {\n * messageHash: '0xc55ea24bdb4c379550a7c9a6818ac39ca33e75bc78ddb862bd82c31cc1c7a073',\n * v: '0x26',\n * r: '0x27344e77871c8b2068bc998bf28e0b5f9920867a69c455b2ed0c1c150fec098e',\n * s: '0x519f0130a1d662841d4a28082e9c9bb0a15e0e59bb46cfc39a52f0e285dec6b9',\n * rawTransaction: '0xf86a808609184e72a000840271032194f0109fc8df283027b6285cc889f5aa624eac1f55830186a08026a027344e77871c8b2068bc998bf28e0b5f9920867a69c455b2ed0c1c150fec098ea0519f0130a1d662841d4a28082e9c9bb0a15e0e59bb46cfc39a52f0e285dec6b9',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * }\n * ```\n */\nconst signTransaction = (transaction, privateKey) => __awaiter(void 0, void 0, void 0, function* () {\n    const signedTx = transaction.sign((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(privateKey));\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(signedTx.v) || (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(signedTx.r) || (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(signedTx.s))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.TransactionSigningError('Signer Error');\n    const validationErrors = signedTx.validate(true);\n    if (validationErrors.length > 0) {\n        let errorString = 'Signer Error ';\n        for (const validationError of validationErrors) {\n            errorString += `${errorString} ${validationError}.`;\n        }\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.TransactionSigningError(errorString);\n    }\n    const rawTx = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(signedTx.serialize());\n    const txHash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)(rawTx); // using keccak in web3-utils.sha3Raw instead of SHA3 (NIST Standard) as both are different\n    return {\n        messageHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(signedTx.getMessageToSign(true)),\n        v: `0x${signedTx.v.toString(16)}`,\n        r: `0x${signedTx.r.toString(16).padStart(64, '0')}`,\n        s: `0x${signedTx.s.toString(16).padStart(64, '0')}`,\n        rawTransaction: rawTx,\n        transactionHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(txHash),\n    };\n});\n/**\n * Recovers the Ethereum address which was used to sign the given RLP encoded transaction.\n *\n * @param rawTransaction - The hex string having RLP encoded transaction\n * @returns The Ethereum address used to sign this transaction\n * ```ts\n * web3.eth.accounts.recoverTransaction('0xf869808504e3b29200831e848094f0109fc8df283027b6285cc889f5aa624eac1f55843b9aca008025a0c9cf86333bcb065d140032ecaab5d9281bde80f21b9687b3e94161de42d51895a0727a108a0b8d101465414033c3f705a9c7b826e596766046ee1183dbc8aeaa68');\n * > \"0x2c7536E3605D9C16a7a3D7b1898e529396a65c23\"\n * ```\n */\nconst recoverTransaction = (rawTransaction) => {\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(rawTransaction))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.UndefinedRawTransactionError();\n    const tx = _tx_transactionFactory_js__WEBPACK_IMPORTED_MODULE_8__.TransactionFactory.fromSerializedData((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(rawTransaction));\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.toChecksumAddress)(tx.getSenderAddress().toString());\n};\n/**\n * Recovers the Ethereum address which was used to sign the given data\n *\n * @param data - Either a signed message, hash, or the {@link signatureObject}\n * @param signature - The raw RLP encoded signature\n * @param signatureOrV - signature or V\n * @param prefixedOrR - prefixed or R\n * @param s - S value in signature\n * @param prefixed - (default: false) If the last parameter is true, the given message will NOT automatically be prefixed with `\"\\\\x19Ethereum Signed Message:\\\\n\" + message.length + message`, and assumed to be already prefixed and hashed.\n * @returns The Ethereum address used to sign this data\n *\n * ```ts\n * const data = 'Some data';\n * const sigObj = web3.eth.accounts.sign(data, '0xbe6383dad004f233317e46ddb46ad31b16064d14447a95cc1d8c8d4bc61c3728')\n *\n * > {\n *   message: 'Some data',\n *   messageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',\n *   v: '0x1b',\n *   r: '0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f9',\n *   s: '0x53e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb150',\n *   signature: '0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f953e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb1501b'\n * }\n *\n * // now recover\n * web3.eth.accounts.recover(data, sigObj.v, sigObj.r, sigObj.s)\n *\n * > 0xEB014f8c8B418Db6b45774c326A0E64C78914dC0\n * ```\n */\nconst recover = (data, signatureOrV, prefixedOrR, s, prefixed) => {\n    if (typeof data === 'object') {\n        const signatureStr = `${data.r}${data.s.slice(2)}${data.v.slice(2)}`;\n        return recover(data.messageHash, signatureStr, prefixedOrR);\n    }\n    if (typeof signatureOrV === 'string' && typeof prefixedOrR === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(s)) {\n        const signatureStr = `${prefixedOrR}${s.slice(2)}${signatureOrV.slice(2)}`;\n        return recover(data, signatureStr, prefixed);\n    }\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(signatureOrV))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidSignatureError('signature string undefined');\n    const V_INDEX = 130; // r = first 32 bytes, s = second 32 bytes, v = last byte of signature\n    const hashedMessage = prefixedOrR ? data : hashMessage(data);\n    let v = parseInt(signatureOrV.substring(V_INDEX), 16); // 0x + r + s + v\n    if (v > 26) {\n        v -= 27;\n    }\n    const ecPublicKey = _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.Signature.fromCompact(signatureOrV.slice(2, V_INDEX))\n        .addRecoveryBit(v)\n        .recoverPublicKey(hashedMessage.replace('0x', ''))\n        .toRawBytes(false);\n    const publicHash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)(ecPublicKey.subarray(1));\n    const address = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.toChecksumAddress)(`0x${publicHash.slice(-40)}`);\n    return address;\n};\n/**\n * Get the ethereum Address from a private key\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param ignoreLength - if true, will not error check length\n * @returns The Ethereum address\n * @example\n * ```ts\n * web3.eth.accounts.privateKeyToAddress(\"0xbe6383dad004f233317e46ddb46ad31b16064d14447a95cc1d8c8d4bc61c3728\")\n *\n * > \"0xEB014f8c8B418Db6b45774c326A0E64C78914dC0\"\n * ```\n */\nconst privateKeyToAddress = (privateKey) => {\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n    // Get public key from private key in compressed format\n    const publicKey = _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.getPublicKey(privateKeyUint8Array, false);\n    // Uncompressed ECDSA public key contains the prefix `0x04` which is not used in the Ethereum public key\n    const publicKeyHash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)(publicKey.slice(1));\n    // The hash is returned as 256 bits (32 bytes) or 64 hex characters\n    // To get the address, take the last 20 bytes of the public hash\n    const address = publicKeyHash.slice(-40);\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.toChecksumAddress)(`0x${address}`);\n};\n/**\n * Get the public key from a private key\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param isCompressed - if true, will generate a 33 byte compressed public key instead of a 65 byte public key\n * @returns The public key\n * @example\n * ```ts\n * web3.eth.accounts.privateKeyToPublicKey(\"0x1e046a882bb38236b646c9f135cf90ad90a140810f439875f2a6dd8e50fa261f\", true)\n *\n * > \"0x42beb65f179720abaa3ec9a70a539629cbbc5ec65bb57e7fc78977796837e537662dd17042e6449dc843c281067a4d6d8d1a1775a13c41901670d5de7ee6503a\" // uncompressed public key\n * ```\n */\nconst privateKeyToPublicKey = (privateKey, isCompressed) => {\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n    // Get public key from private key in compressed format\n    return `0x${(0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(_tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.getPublicKey(privateKeyUint8Array, isCompressed)).slice(4)}`; // 0x and removing compression byte\n};\n/**\n * encrypt a private key with a password, returns a V3 JSON Keystore\n *\n * Read more: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n *\n * @param privateKey - The private key to encrypt, 32 bytes.\n * @param password - The password used for encryption.\n * @param options - Options to configure to encrypt the keystore either scrypt or pbkdf2\n * @returns Returns a V3 JSON Keystore\n *\n * Encrypt using scrypt options:\n * ```ts\n *\n * web3.eth.accounts.encrypt(\n *    '0x67f476289210e3bef3c1c75e4de993ff0a00663df00def84e73aa7411eac18a6',\n *    '123',\n *    {\n *        n: 8192,\n *\t    iv: web3.utils.hexToBytes('0xbfb43120ae00e9de110f8325143a2709'),\n *\t    salt: web3.utils.hexToBytes('0x210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'),\n *\t}).then(console.log)\n *\n * > {\n * version: 3,\n * id: 'c0cb0a94-4702-4492-b6e6-eb2ac404344a',\n * address: 'cda9a91875fc35c8ac1320e098e584495d66e47c',\n * crypto: {\n *   ciphertext: 'cb3e13e3281ff3861a3f0257fad4c9a51b0eb046f9c7821825c46b210f040b8f',\n *   cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *   cipher: 'aes-128-ctr',\n *   kdf: 'scrypt',\n *   kdfparams: {\n *     n: 8192,\n *     r: 8,\n *     p: 1,\n *     dklen: 32,\n *     salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'\n *   },\n *   mac: 'efbf6d3409f37c0084a79d5fdf9a6f5d97d11447517ef1ea8374f51e581b7efd'\n * }\n *}\n *```\n *\n * Encrypting using pbkdf2 options:\n * ```ts\n * web3.eth.accounts.encrypt('0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709',\n *'123',\n *{\n *\tiv: 'bfb43120ae00e9de110f8325143a2709',\n *\tsalt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd',\n *\tc: 262144,\n *\tkdf: 'pbkdf2',\n *}).then(console.log)\n *\n * >\n * {\n *   version: 3,\n *   id: '77381417-0973-4e4b-b590-8eb3ace0fe2d',\n *   address: 'b8ce9ab6943e0eced004cde8e3bbed6568b2fa01',\n *   crypto: {\n *     ciphertext: '76512156a34105fa6473ad040c666ae7b917d14c06543accc0d2dc28e6073b12',\n *     cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *     cipher: 'aes-128-ctr',\n *     kdf: 'pbkdf2',\n *     kdfparams: {\n *       dklen: 32,\n *       salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd',\n *       c: 262144,\n *       prf: 'hmac-sha256'\n *     },\n *   mac: '46eb4884e82dc43b5aa415faba53cc653b7038e9d61cc32fd643cf8c396189b7'\n *   }\n * }\n *```\n */\nconst encrypt = (privateKey, password, options) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n    // if given salt or iv is a string, convert it to a Uint8Array\n    let salt;\n    if (options === null || options === void 0 ? void 0 : options.salt) {\n        salt = typeof options.salt === 'string' ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(options.salt) : options.salt;\n    }\n    else {\n        salt = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.randomBytes)(32);\n    }\n    if (!((0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isString)(password) || (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.isUint8Array)(password))) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidPasswordError();\n    }\n    const uint8ArrayPassword = typeof password === 'string' ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(password)) : password;\n    let initializationVector;\n    if (options === null || options === void 0 ? void 0 : options.iv) {\n        initializationVector = typeof options.iv === 'string' ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(options.iv) : options.iv;\n        if (initializationVector.length !== 16) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.IVLengthError();\n        }\n    }\n    else {\n        initializationVector = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.randomBytes)(16);\n    }\n    const kdf = (_a = options === null || options === void 0 ? void 0 : options.kdf) !== null && _a !== void 0 ? _a : 'scrypt';\n    let derivedKey;\n    let kdfparams;\n    // derive key from key derivation function\n    if (kdf === 'pbkdf2') {\n        kdfparams = {\n            dklen: (_b = options === null || options === void 0 ? void 0 : options.dklen) !== null && _b !== void 0 ? _b : 32,\n            salt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(salt).replace('0x', ''),\n            c: (_c = options === null || options === void 0 ? void 0 : options.c) !== null && _c !== void 0 ? _c : 262144,\n            prf: 'hmac-sha256',\n        };\n        if (kdfparams.c < 1000) {\n            // error when c < 1000, pbkdf2 is less secure with less iterations\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.PBKDF2IterationsError();\n        }\n        derivedKey = (0,ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_1__.pbkdf2Sync)(uint8ArrayPassword, salt, kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else if (kdf === 'scrypt') {\n        kdfparams = {\n            n: (_d = options === null || options === void 0 ? void 0 : options.n) !== null && _d !== void 0 ? _d : 8192,\n            r: (_e = options === null || options === void 0 ? void 0 : options.r) !== null && _e !== void 0 ? _e : 8,\n            p: (_f = options === null || options === void 0 ? void 0 : options.p) !== null && _f !== void 0 ? _f : 1,\n            dklen: (_g = options === null || options === void 0 ? void 0 : options.dklen) !== null && _g !== void 0 ? _g : 32,\n            salt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(salt).replace('0x', ''),\n        };\n        derivedKey = (0,ethereum_cryptography_scrypt_js__WEBPACK_IMPORTED_MODULE_2__.scryptSync)(uint8ArrayPassword, salt, kdfparams.n, kdfparams.p, kdfparams.r, kdfparams.dklen);\n    }\n    else {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidKdfError();\n    }\n    const cipher = yield (0,ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_0__.encrypt)(privateKeyUint8Array, derivedKey.slice(0, 16), initializationVector, 'aes-128-ctr');\n    const ciphertext = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(cipher).slice(2);\n    const mac = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayConcat)(derivedKey.slice(16, 32), cipher)).replace('0x', '');\n    return {\n        version: 3,\n        id: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.uuidV4)(),\n        address: privateKeyToAddress(privateKeyUint8Array).toLowerCase().replace('0x', ''),\n        crypto: {\n            ciphertext,\n            cipherparams: {\n                iv: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(initializationVector).replace('0x', ''),\n            },\n            cipher: 'aes-128-ctr',\n            kdf,\n            kdfparams,\n            mac,\n        },\n    };\n});\n/**\n * Get an Account object from the privateKey\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param ignoreLength - if true, will not error check length\n * @returns A Web3Account object\n *\n * :::info\n * The `Web3Account.signTransaction` is not stateful if directly imported from accounts package and used. Network access is required to get the account `nonce` and `chainId` to sign the transaction, so use {@link Web3.eth.accounts.signTransaction} for signing transactions.\n * ::::\n *\n * ```ts\n * web3.eth.accounts.privateKeyToAccount(\"0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709\");\n *\n * >    {\n * \t\t\taddress: '0xb8CE9ab6943e0eCED004cDe8e3bBed6568B2Fa01',\n * \t\t\tprivateKey: '0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709',\n * \t\t\tsign,\n * \t\t\tsignTransaction,\n * \t\t\tencrypt,\n * \t}\n * ```\n */\nconst privateKeyToAccount = (privateKey, ignoreLength) => {\n    const privateKeyUint8Array = parseAndValidatePrivateKey(privateKey, ignoreLength);\n    return {\n        address: privateKeyToAddress(privateKeyUint8Array),\n        privateKey: (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(privateKeyUint8Array),\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        signTransaction: (_tx) => {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.TransactionSigningError('Do not have network access to sign the transaction');\n        },\n        sign: (data) => sign(typeof data === 'string' ? data : JSON.stringify(data), privateKeyUint8Array),\n        encrypt: (password, options) => __awaiter(void 0, void 0, void 0, function* () { return encrypt(privateKeyUint8Array, password, options); }),\n    };\n};\n/**\n *\n * Generates and returns a Web3Account object that includes the private and public key\n * For creation of private key, it uses an audited package ethereum-cryptography/secp256k1\n * that is cryptographically secure random number with certain characteristics.\n * Read more: https://www.npmjs.com/package/ethereum-cryptography#secp256k1-curve\n *\n * @returns A Web3Account object\n * ```ts\n * web3.eth.accounts.create();\n * {\n * address: '0xbD504f977021b5E5DdccD8741A368b147B3B38bB',\n * privateKey: '0x964ced1c69ad27a311c432fdc0d8211e987595f7eb34ab405a5f16bdc9563ec5',\n * signTransaction: [Function: signTransaction],\n * sign: [Function: sign],\n * encrypt: [AsyncFunction: encrypt]\n * }\n * ```\n */\nconst create = () => {\n    const privateKey = _tx_constants_js__WEBPACK_IMPORTED_MODULE_6__.secp256k1.utils.randomPrivateKey();\n    return privateKeyToAccount(`${(0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)(privateKey)}`);\n};\n/**\n * Decrypts a v3 keystore JSON, and creates the account.\n *\n * @param keystore - the encrypted Keystore object or string to decrypt\n * @param password - The password that was used for encryption\n * @param nonStrict - if true and given a json string, the keystore will be parsed as lowercase.\n * @returns Returns the decrypted Web3Account object\n * Decrypting scrypt\n *\n * ```ts\n * web3.eth.accounts.decrypt({\n *   version: 3,\n *   id: 'c0cb0a94-4702-4492-b6e6-eb2ac404344a',\n *   address: 'cda9a91875fc35c8ac1320e098e584495d66e47c',\n *   crypto: {\n *   ciphertext: 'cb3e13e3281ff3861a3f0257fad4c9a51b0eb046f9c7821825c46b210f040b8f',\n *      cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *      cipher: 'aes-128-ctr',\n *      kdf: 'scrypt',\n *      kdfparams: {\n *        n: 8192,\n *        r: 8,\n *        p: 1,\n *        dklen: 32,\n *        salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'\n *      },\n *      mac: 'efbf6d3409f37c0084a79d5fdf9a6f5d97d11447517ef1ea8374f51e581b7efd'\n *    }\n *   }, '123').then(console.log);\n *\n *\n * > {\n * address: '0xcdA9A91875fc35c8Ac1320E098e584495d66e47c',\n * privateKey: '67f476289210e3bef3c1c75e4de993ff0a00663df00def84e73aa7411eac18a6',\n * signTransaction: [Function: signTransaction],\n * sign: [Function: sign],\n * encrypt: [AsyncFunction: encrypt]\n * }\n * ```\n */\nconst decrypt = (keystore, password, nonStrict) => __awaiter(void 0, void 0, void 0, function* () {\n    const json = typeof keystore === 'object'\n        ? keystore\n        : JSON.parse(nonStrict ? keystore.toLowerCase() : keystore);\n    web3_validator__WEBPACK_IMPORTED_MODULE_5__.validator.validateJSONSchema(_schemas_js__WEBPACK_IMPORTED_MODULE_7__.keyStoreSchema, json);\n    if (json.version !== 3)\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.KeyStoreVersionError();\n    const uint8ArrayPassword = typeof password === 'string' ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(password)) : password;\n    web3_validator__WEBPACK_IMPORTED_MODULE_5__.validator.validate(['bytes'], [uint8ArrayPassword]);\n    let derivedKey;\n    if (json.crypto.kdf === 'scrypt') {\n        const kdfparams = json.crypto.kdfparams;\n        const uint8ArraySalt = typeof kdfparams.salt === 'string' ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(kdfparams.salt) : kdfparams.salt;\n        derivedKey = (0,ethereum_cryptography_scrypt_js__WEBPACK_IMPORTED_MODULE_2__.scryptSync)(uint8ArrayPassword, uint8ArraySalt, kdfparams.n, kdfparams.p, kdfparams.r, kdfparams.dklen);\n    }\n    else if (json.crypto.kdf === 'pbkdf2') {\n        const kdfparams = json.crypto.kdfparams;\n        const uint8ArraySalt = typeof kdfparams.salt === 'string' ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(kdfparams.salt) : kdfparams.salt;\n        derivedKey = (0,ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_1__.pbkdf2Sync)(uint8ArrayPassword, uint8ArraySalt, kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidKdfError();\n    }\n    const ciphertext = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(json.crypto.ciphertext);\n    const mac = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.sha3Raw)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayConcat)(derivedKey.slice(16, 32), ciphertext)).replace('0x', '');\n    if (mac !== json.crypto.mac) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.KeyDerivationError();\n    }\n    const seed = yield (0,ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_0__.decrypt)((0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(json.crypto.ciphertext), derivedKey.slice(0, 16), (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(json.crypto.cipherparams.iv));\n    return privateKeyToAccount(seed);\n});\n//# sourceMappingURL=account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/account.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/goerli.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/chains/goerli.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'goerli',\n    chainId: 5,\n    networkId: 5,\n    defaultHardfork: 'merge',\n    consensus: {\n        type: 'poa',\n        algorithm: 'clique',\n        clique: {\n            period: 15,\n            epoch: 30000,\n        },\n    },\n    comment: 'Cross-client PoA test network',\n    url: 'https://github.com/goerli/testnet',\n    genesis: {\n        timestamp: '0x5c51a607',\n        gasLimit: 10485760,\n        difficulty: 1,\n        nonce: '0x0000000000000000',\n        extraData: '0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n    },\n    hardforks: [\n        {\n            name: 'chainstart',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'homestead',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'tangerineWhistle',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'spuriousDragon',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'byzantium',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'constantinople',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'petersburg',\n            block: 0,\n            forkHash: '0xa3f5ab08',\n        },\n        {\n            name: 'istanbul',\n            block: 1561651,\n            forkHash: '0xc25efa5c',\n        },\n        {\n            name: 'berlin',\n            block: 4460644,\n            forkHash: '0x757a1c47',\n        },\n        {\n            name: 'london',\n            block: 5062605,\n            forkHash: '0xb8c6299d',\n        },\n        {\n            '//_comment': 'The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://goerli.etherscan.io/block/7382818',\n            name: 'merge',\n            ttd: '10790000',\n            block: 7382819,\n            forkHash: '0xb8c6299d',\n        },\n        {\n            name: 'mergeForkIdTransition',\n            block: null,\n            forkHash: null,\n        },\n        {\n            name: 'shanghai',\n            block: null,\n            forkHash: null,\n        },\n    ],\n    bootstrapNodes: [],\n    dnsNetworks: [\n        'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net',\n    ],\n});\n//# sourceMappingURL=goerli.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vY2hhaW5zL2dvZXJsaS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFxjb21tb25cXGNoYWluc1xcZ29lcmxpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnZ29lcmxpJyxcbiAgICBjaGFpbklkOiA1LFxuICAgIG5ldHdvcmtJZDogNSxcbiAgICBkZWZhdWx0SGFyZGZvcms6ICdtZXJnZScsXG4gICAgY29uc2Vuc3VzOiB7XG4gICAgICAgIHR5cGU6ICdwb2EnLFxuICAgICAgICBhbGdvcml0aG06ICdjbGlxdWUnLFxuICAgICAgICBjbGlxdWU6IHtcbiAgICAgICAgICAgIHBlcmlvZDogMTUsXG4gICAgICAgICAgICBlcG9jaDogMzAwMDAsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBjb21tZW50OiAnQ3Jvc3MtY2xpZW50IFBvQSB0ZXN0IG5ldHdvcmsnLFxuICAgIHVybDogJ2h0dHBzOi8vZ2l0aHViLmNvbS9nb2VybGkvdGVzdG5ldCcsXG4gICAgZ2VuZXNpczoge1xuICAgICAgICB0aW1lc3RhbXA6ICcweDVjNTFhNjA3JyxcbiAgICAgICAgZ2FzTGltaXQ6IDEwNDg1NzYwLFxuICAgICAgICBkaWZmaWN1bHR5OiAxLFxuICAgICAgICBub25jZTogJzB4MDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgICAgIGV4dHJhRGF0YTogJzB4MjI0NjZjNjU3ODY5MjA2OTczMjA2MTIwNzQ2ODY5NmU2NzIyMjAyZDIwNDE2NjcyNjkwMDAwMDAwMDAwMDAwMGUwYTJiZDQyNThkMjc2ODgzN2JhYTI2YTI4ZmU3MWRjMDc5Zjg0YzcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJyxcbiAgICB9LFxuICAgIGhhcmRmb3JrczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnY2hhaW5zdGFydCcsXG4gICAgICAgICAgICBibG9jazogMCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHhhM2Y1YWIwOCcsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdob21lc3RlYWQnLFxuICAgICAgICAgICAgYmxvY2s6IDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4YTNmNWFiMDgnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAndGFuZ2VyaW5lV2hpc3RsZScsXG4gICAgICAgICAgICBibG9jazogMCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHhhM2Y1YWIwOCcsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdzcHVyaW91c0RyYWdvbicsXG4gICAgICAgICAgICBibG9jazogMCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHhhM2Y1YWIwOCcsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdieXphbnRpdW0nLFxuICAgICAgICAgICAgYmxvY2s6IDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4YTNmNWFiMDgnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnY29uc3RhbnRpbm9wbGUnLFxuICAgICAgICAgICAgYmxvY2s6IDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4YTNmNWFiMDgnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAncGV0ZXJzYnVyZycsXG4gICAgICAgICAgICBibG9jazogMCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHhhM2Y1YWIwOCcsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdpc3RhbmJ1bCcsXG4gICAgICAgICAgICBibG9jazogMTU2MTY1MSxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHhjMjVlZmE1YycsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdiZXJsaW4nLFxuICAgICAgICAgICAgYmxvY2s6IDQ0NjA2NDQsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4NzU3YTFjNDcnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnbG9uZG9uJyxcbiAgICAgICAgICAgIGJsb2NrOiA1MDYyNjA1LFxuICAgICAgICAgICAgZm9ya0hhc2g6ICcweGI4YzYyOTlkJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgJy8vX2NvbW1lbnQnOiAnVGhlIGZvcmtIYXNoIHdpbGwgcmVtYWluIHNhbWUgYXMgbWVyZ2VGb3JrSWRUcmFuc2l0aW9uIGlzIHBvc3QgbWVyZ2UsIHRlcm1pbmFsIGJsb2NrOiBodHRwczovL2dvZXJsaS5ldGhlcnNjYW4uaW8vYmxvY2svNzM4MjgxOCcsXG4gICAgICAgICAgICBuYW1lOiAnbWVyZ2UnLFxuICAgICAgICAgICAgdHRkOiAnMTA3OTAwMDAnLFxuICAgICAgICAgICAgYmxvY2s6IDczODI4MTksXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4YjhjNjI5OWQnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnbWVyZ2VGb3JrSWRUcmFuc2l0aW9uJyxcbiAgICAgICAgICAgIGJsb2NrOiBudWxsLFxuICAgICAgICAgICAgZm9ya0hhc2g6IG51bGwsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdzaGFuZ2hhaScsXG4gICAgICAgICAgICBibG9jazogbnVsbCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiBudWxsLFxuICAgICAgICB9LFxuICAgIF0sXG4gICAgYm9vdHN0cmFwTm9kZXM6IFtdLFxuICAgIGRuc05ldHdvcmtzOiBbXG4gICAgICAgICdlbnJ0cmVlOi8vQUtBM0FNNkxQQllFVURNVk5VM0JTVlFKNUFENDVZN1lQT0hKTEVGNlcyNlFPRTRWVFVEUEVAYWxsLmdvZXJsaS5ldGhkaXNjby5uZXQnLFxuICAgIF0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z29lcmxpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/goerli.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/mainnet.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/chains/mainnet.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'mainnet',\n    chainId: 1,\n    networkId: 1,\n    defaultHardfork: 'merge',\n    consensus: {\n        type: 'pow',\n        algorithm: 'ethash',\n        ethash: {},\n    },\n    comment: 'The Ethereum main chain',\n    url: 'https://ethstats.net/',\n    genesis: {\n        gasLimit: 5000,\n        difficulty: 17179869184,\n        nonce: '0x0000000000000042',\n        extraData: '0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa',\n    },\n    hardforks: [\n        {\n            name: 'chainstart',\n            block: 0,\n            forkHash: '0xfc64ec04',\n        },\n        {\n            name: 'homestead',\n            block: 1150000,\n            forkHash: '0x97c2c34c',\n        },\n        {\n            name: 'dao',\n            block: 1920000,\n            forkHash: '0x91d1f948',\n        },\n        {\n            name: 'tangerineWhistle',\n            block: 2463000,\n            forkHash: '0x7a64da13',\n        },\n        {\n            name: 'spuriousDragon',\n            block: 2675000,\n            forkHash: '0x3edd5b10',\n        },\n        {\n            name: 'byzantium',\n            block: 4370000,\n            forkHash: '0xa00bc324',\n        },\n        {\n            name: 'constantinople',\n            block: 7280000,\n            forkHash: '0x668db0af',\n        },\n        {\n            name: 'petersburg',\n            block: 7280000,\n            forkHash: '0x668db0af',\n        },\n        {\n            name: 'istanbul',\n            block: 9069000,\n            forkHash: '0x879d6e30',\n        },\n        {\n            name: 'muirGlacier',\n            block: 9200000,\n            forkHash: '0xe029e991',\n        },\n        {\n            name: 'berlin',\n            block: 12244000,\n            forkHash: '0x0eb440f6',\n        },\n        {\n            name: 'london',\n            block: 12965000,\n            forkHash: '0xb715077d',\n        },\n        {\n            name: 'arrowGlacier',\n            block: 13773000,\n            forkHash: '0x20c327fc',\n        },\n        {\n            name: 'grayGlacier',\n            block: 15050000,\n            forkHash: '0xf0afd0e3',\n        },\n        {\n            '//_comment': 'The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://etherscan.io/block/15537393',\n            name: 'merge',\n            ttd: '58750000000000000000000',\n            block: 15537394,\n            forkHash: '0xf0afd0e3',\n        },\n        {\n            name: 'mergeForkIdTransition',\n            block: null,\n            forkHash: null,\n        },\n        {\n            name: 'shanghai',\n            block: null,\n            forkHash: null,\n        },\n    ],\n    bootstrapNodes: [],\n    dnsNetworks: [\n        'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net',\n    ],\n});\n//# sourceMappingURL=mainnet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vY2hhaW5zL21haW5uZXQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcY2hhaW5zXFxtYWlubmV0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnbWFpbm5ldCcsXG4gICAgY2hhaW5JZDogMSxcbiAgICBuZXR3b3JrSWQ6IDEsXG4gICAgZGVmYXVsdEhhcmRmb3JrOiAnbWVyZ2UnLFxuICAgIGNvbnNlbnN1czoge1xuICAgICAgICB0eXBlOiAncG93JyxcbiAgICAgICAgYWxnb3JpdGhtOiAnZXRoYXNoJyxcbiAgICAgICAgZXRoYXNoOiB7fSxcbiAgICB9LFxuICAgIGNvbW1lbnQ6ICdUaGUgRXRoZXJldW0gbWFpbiBjaGFpbicsXG4gICAgdXJsOiAnaHR0cHM6Ly9ldGhzdGF0cy5uZXQvJyxcbiAgICBnZW5lc2lzOiB7XG4gICAgICAgIGdhc0xpbWl0OiA1MDAwLFxuICAgICAgICBkaWZmaWN1bHR5OiAxNzE3OTg2OTE4NCxcbiAgICAgICAgbm9uY2U6ICcweDAwMDAwMDAwMDAwMDAwNDInLFxuICAgICAgICBleHRyYURhdGE6ICcweDExYmJlOGRiNGUzNDdiNGU4YzkzN2MxYzgzNzBlNGI1ZWQzM2FkYjNkYjY5Y2JkYjdhMzhlMWU1MGIxYjgyZmEnLFxuICAgIH0sXG4gICAgaGFyZGZvcmtzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdjaGFpbnN0YXJ0JyxcbiAgICAgICAgICAgIGJsb2NrOiAwLFxuICAgICAgICAgICAgZm9ya0hhc2g6ICcweGZjNjRlYzA0JyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ2hvbWVzdGVhZCcsXG4gICAgICAgICAgICBibG9jazogMTE1MDAwMCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHg5N2MyYzM0YycsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdkYW8nLFxuICAgICAgICAgICAgYmxvY2s6IDE5MjAwMDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4OTFkMWY5NDgnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAndGFuZ2VyaW5lV2hpc3RsZScsXG4gICAgICAgICAgICBibG9jazogMjQ2MzAwMCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHg3YTY0ZGExMycsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdzcHVyaW91c0RyYWdvbicsXG4gICAgICAgICAgICBibG9jazogMjY3NTAwMCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHgzZWRkNWIxMCcsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdieXphbnRpdW0nLFxuICAgICAgICAgICAgYmxvY2s6IDQzNzAwMDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4YTAwYmMzMjQnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnY29uc3RhbnRpbm9wbGUnLFxuICAgICAgICAgICAgYmxvY2s6IDcyODAwMDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4NjY4ZGIwYWYnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAncGV0ZXJzYnVyZycsXG4gICAgICAgICAgICBibG9jazogNzI4MDAwMCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHg2NjhkYjBhZicsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdpc3RhbmJ1bCcsXG4gICAgICAgICAgICBibG9jazogOTA2OTAwMCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHg4NzlkNmUzMCcsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdtdWlyR2xhY2llcicsXG4gICAgICAgICAgICBibG9jazogOTIwMDAwMCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHhlMDI5ZTk5MScsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdiZXJsaW4nLFxuICAgICAgICAgICAgYmxvY2s6IDEyMjQ0MDAwLFxuICAgICAgICAgICAgZm9ya0hhc2g6ICcweDBlYjQ0MGY2JyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ2xvbmRvbicsXG4gICAgICAgICAgICBibG9jazogMTI5NjUwMDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4YjcxNTA3N2QnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnYXJyb3dHbGFjaWVyJyxcbiAgICAgICAgICAgIGJsb2NrOiAxMzc3MzAwMCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHgyMGMzMjdmYycsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdncmF5R2xhY2llcicsXG4gICAgICAgICAgICBibG9jazogMTUwNTAwMDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4ZjBhZmQwZTMnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICAnLy9fY29tbWVudCc6ICdUaGUgZm9ya0hhc2ggd2lsbCByZW1haW4gc2FtZSBhcyBtZXJnZUZvcmtJZFRyYW5zaXRpb24gaXMgcG9zdCBtZXJnZSwgdGVybWluYWwgYmxvY2s6IGh0dHBzOi8vZXRoZXJzY2FuLmlvL2Jsb2NrLzE1NTM3MzkzJyxcbiAgICAgICAgICAgIG5hbWU6ICdtZXJnZScsXG4gICAgICAgICAgICB0dGQ6ICc1ODc1MDAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgICAgICAgICBibG9jazogMTU1MzczOTQsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4ZjBhZmQwZTMnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnbWVyZ2VGb3JrSWRUcmFuc2l0aW9uJyxcbiAgICAgICAgICAgIGJsb2NrOiBudWxsLFxuICAgICAgICAgICAgZm9ya0hhc2g6IG51bGwsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdzaGFuZ2hhaScsXG4gICAgICAgICAgICBibG9jazogbnVsbCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiBudWxsLFxuICAgICAgICB9LFxuICAgIF0sXG4gICAgYm9vdHN0cmFwTm9kZXM6IFtdLFxuICAgIGRuc05ldHdvcmtzOiBbXG4gICAgICAgICdlbnJ0cmVlOi8vQUtBM0FNNkxQQllFVURNVk5VM0JTVlFKNUFENDVZN1lQT0hKTEVGNlcyNlFPRTRWVFVEUEVAYWxsLm1haW5uZXQuZXRoZGlzY28ubmV0JyxcbiAgICBdLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1haW5uZXQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/mainnet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/sepolia.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/chains/sepolia.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'sepolia',\n    chainId: 11155111,\n    networkId: 11155111,\n    defaultHardfork: 'merge',\n    consensus: {\n        type: 'pow',\n        algorithm: 'ethash',\n        ethash: {},\n    },\n    comment: 'PoW test network to replace Ropsten',\n    url: 'https://github.com/ethereum/go-ethereum/pull/23730',\n    genesis: {\n        timestamp: '0x6159af19',\n        gasLimit: 30000000,\n        difficulty: 131072,\n        nonce: '0x0000000000000000',\n        extraData: '0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521',\n    },\n    hardforks: [\n        {\n            name: 'chainstart',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'homestead',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'tangerineWhistle',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'spuriousDragon',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'byzantium',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'constantinople',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'petersburg',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'istanbul',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'muirGlacier',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'berlin',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'london',\n            block: 0,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            '//_comment': 'The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://sepolia.etherscan.io/block/1450408',\n            name: 'merge',\n            ttd: '17000000000000000',\n            block: 1450409,\n            forkHash: '0xfe3366e7',\n        },\n        {\n            name: 'mergeForkIdTransition',\n            block: 1735371,\n            forkHash: '0xb96cbd13',\n        },\n        {\n            name: 'shanghai',\n            block: null,\n            timestamp: '1677557088',\n            forkHash: '0xf7f9bc08',\n        },\n    ],\n    bootstrapNodes: [],\n    dnsNetworks: [\n        'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net',\n    ],\n});\n//# sourceMappingURL=sepolia.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vY2hhaW5zL3NlcG9saWEuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFxjb21tb25cXGNoYWluc1xcc2Vwb2xpYS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ3NlcG9saWEnLFxuICAgIGNoYWluSWQ6IDExMTU1MTExLFxuICAgIG5ldHdvcmtJZDogMTExNTUxMTEsXG4gICAgZGVmYXVsdEhhcmRmb3JrOiAnbWVyZ2UnLFxuICAgIGNvbnNlbnN1czoge1xuICAgICAgICB0eXBlOiAncG93JyxcbiAgICAgICAgYWxnb3JpdGhtOiAnZXRoYXNoJyxcbiAgICAgICAgZXRoYXNoOiB7fSxcbiAgICB9LFxuICAgIGNvbW1lbnQ6ICdQb1cgdGVzdCBuZXR3b3JrIHRvIHJlcGxhY2UgUm9wc3RlbicsXG4gICAgdXJsOiAnaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL2dvLWV0aGVyZXVtL3B1bGwvMjM3MzAnLFxuICAgIGdlbmVzaXM6IHtcbiAgICAgICAgdGltZXN0YW1wOiAnMHg2MTU5YWYxOScsXG4gICAgICAgIGdhc0xpbWl0OiAzMDAwMDAwMCxcbiAgICAgICAgZGlmZmljdWx0eTogMTMxMDcyLFxuICAgICAgICBub25jZTogJzB4MDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgICAgIGV4dHJhRGF0YTogJzB4NTM2NTcwNmY2YzY5NjEyYzIwNDE3NDY4NjU2ZTczMmMyMDQxNzQ3NDY5NjM2MTJjMjA0NzcyNjU2NTYzNjUyMScsXG4gICAgfSxcbiAgICBoYXJkZm9ya3M6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ2NoYWluc3RhcnQnLFxuICAgICAgICAgICAgYmxvY2s6IDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4ZmUzMzY2ZTcnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnaG9tZXN0ZWFkJyxcbiAgICAgICAgICAgIGJsb2NrOiAwLFxuICAgICAgICAgICAgZm9ya0hhc2g6ICcweGZlMzM2NmU3JyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ3RhbmdlcmluZVdoaXN0bGUnLFxuICAgICAgICAgICAgYmxvY2s6IDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4ZmUzMzY2ZTcnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnc3B1cmlvdXNEcmFnb24nLFxuICAgICAgICAgICAgYmxvY2s6IDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4ZmUzMzY2ZTcnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnYnl6YW50aXVtJyxcbiAgICAgICAgICAgIGJsb2NrOiAwLFxuICAgICAgICAgICAgZm9ya0hhc2g6ICcweGZlMzM2NmU3JyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ2NvbnN0YW50aW5vcGxlJyxcbiAgICAgICAgICAgIGJsb2NrOiAwLFxuICAgICAgICAgICAgZm9ya0hhc2g6ICcweGZlMzM2NmU3JyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ3BldGVyc2J1cmcnLFxuICAgICAgICAgICAgYmxvY2s6IDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4ZmUzMzY2ZTcnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnaXN0YW5idWwnLFxuICAgICAgICAgICAgYmxvY2s6IDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4ZmUzMzY2ZTcnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnbXVpckdsYWNpZXInLFxuICAgICAgICAgICAgYmxvY2s6IDAsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4ZmUzMzY2ZTcnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnYmVybGluJyxcbiAgICAgICAgICAgIGJsb2NrOiAwLFxuICAgICAgICAgICAgZm9ya0hhc2g6ICcweGZlMzM2NmU3JyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ2xvbmRvbicsXG4gICAgICAgICAgICBibG9jazogMCxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHhmZTMzNjZlNycsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgICcvL19jb21tZW50JzogJ1RoZSBmb3JrSGFzaCB3aWxsIHJlbWFpbiBzYW1lIGFzIG1lcmdlRm9ya0lkVHJhbnNpdGlvbiBpcyBwb3N0IG1lcmdlLCB0ZXJtaW5hbCBibG9jazogaHR0cHM6Ly9zZXBvbGlhLmV0aGVyc2Nhbi5pby9ibG9jay8xNDUwNDA4JyxcbiAgICAgICAgICAgIG5hbWU6ICdtZXJnZScsXG4gICAgICAgICAgICB0dGQ6ICcxNzAwMDAwMDAwMDAwMDAwMCcsXG4gICAgICAgICAgICBibG9jazogMTQ1MDQwOSxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHhmZTMzNjZlNycsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6ICdtZXJnZUZvcmtJZFRyYW5zaXRpb24nLFxuICAgICAgICAgICAgYmxvY2s6IDE3MzUzNzEsXG4gICAgICAgICAgICBmb3JrSGFzaDogJzB4Yjk2Y2JkMTMnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAnc2hhbmdoYWknLFxuICAgICAgICAgICAgYmxvY2s6IG51bGwsXG4gICAgICAgICAgICB0aW1lc3RhbXA6ICcxNjc3NTU3MDg4JyxcbiAgICAgICAgICAgIGZvcmtIYXNoOiAnMHhmN2Y5YmMwOCcsXG4gICAgICAgIH0sXG4gICAgXSxcbiAgICBib290c3RyYXBOb2RlczogW10sXG4gICAgZG5zTmV0d29ya3M6IFtcbiAgICAgICAgJ2VucnRyZWU6Ly9BS0EzQU02TFBCWUVVRE1WTlUzQlNWUUo1QUQ0NVk3WVBPSEpMRUY2VzI2UU9FNFZUVURQRUBhbGwuc2Vwb2xpYS5ldGhkaXNjby5uZXQnLFxuICAgIF0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2Vwb2xpYS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/sepolia.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/common.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/common.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Common: () => (/* binding */ Common)\n/* harmony export */ });\n/* harmony import */ var crc_32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crc-32 */ \"(ssr)/./node_modules/crc-32/crc32.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/types.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/* harmony import */ var _chains_goerli_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chains/goerli.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/goerli.js\");\n/* harmony import */ var _chains_mainnet_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chains/mainnet.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/mainnet.js\");\n/* harmony import */ var _chains_sepolia_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chains/sepolia.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/chains/sepolia.js\");\n/* harmony import */ var _eips_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./eips/index.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/index.js\");\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./enums.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/enums.js\");\n/* harmony import */ var _hardforks_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./hardforks/index.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n\n\n\n\n\nconst { buf: crc32Uint8Array } = crc_32__WEBPACK_IMPORTED_MODULE_0__;\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nclass Common extends web3_utils__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one.\n     *\n     * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n     * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n     *\n     * ```javascript\n     * Common.custom({chainId: 123})\n     * ```\n     *\n     * There are also selected supported custom chains which can be initialized by using one of the\n     * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n     *\n     * ```javascript\n     * Common.custom(CustomChains.MaticMumbai)\n     * ```\n     *\n     * Note that these supported custom chains only provide some base parameters (usually the chain and\n     * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n     * the `web3-utils/tx` library to a Layer-2 chain).\n     *\n     * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n     * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n     */\n    static custom(chainParamsOrName, opts = {}) {\n        var _a;\n        const baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n        const standardChainParams = Object.assign({}, Common._getChainParams(baseChain));\n        standardChainParams.name = 'custom-chain';\n        if (typeof chainParamsOrName !== 'string') {\n            return new Common(Object.assign({ chain: Object.assign(Object.assign({}, standardChainParams), chainParamsOrName) }, opts));\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.PolygonMainnet) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.PolygonMainnet,\n                chainId: 137,\n                networkId: 137,\n            }, opts);\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.PolygonMumbai) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.PolygonMumbai,\n                chainId: 80001,\n                networkId: 80001,\n            }, opts);\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.ArbitrumRinkebyTestnet) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.ArbitrumRinkebyTestnet,\n                chainId: 421611,\n                networkId: 421611,\n            }, opts);\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.ArbitrumOne) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.ArbitrumOne,\n                chainId: 42161,\n                networkId: 42161,\n            }, opts);\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.xDaiChain) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.xDaiChain,\n                chainId: 100,\n                networkId: 100,\n            }, opts);\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.OptimisticKovan) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.OptimisticKovan,\n                chainId: 69,\n                networkId: 69,\n            }, Object.assign({ hardfork: _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Berlin }, opts));\n        }\n        if (chainParamsOrName === _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.OptimisticEthereum) {\n            return Common.custom({\n                name: _enums_js__WEBPACK_IMPORTED_MODULE_8__.CustomChain.OptimisticEthereum,\n                chainId: 10,\n                networkId: 10,\n            }, Object.assign({ hardfork: _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Berlin }, opts));\n        }\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        throw new Error(`Custom chain ${chainParamsOrName} not supported`);\n    }\n    /**\n     * Static method to load and set common from a geth genesis json\n     * @param genesisJson json of geth configuration\n     * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n     * @returns Common\n     */\n    static fromGethGenesis(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    genesisJson, { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge }) {\n        var _a;\n        const genesisParams = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.parseGethGenesis)(genesisJson, chain, mergeForkIdPostMerge);\n        const common = new Common({\n            chain: (_a = genesisParams.name) !== null && _a !== void 0 ? _a : 'custom',\n            customChains: [genesisParams],\n            eips,\n            hardfork: hardfork !== null && hardfork !== void 0 ? hardfork : genesisParams.hardfork,\n        });\n        if (genesisHash !== undefined) {\n            common.setForkHashes(genesisHash);\n        }\n        return common;\n    }\n    /**\n     * Static method to determine if a {@link chainId} is supported as a standard chain\n     * @param chainId bigint id (`1`) of a standard chain\n     * @returns boolean\n     */\n    static isSupportedChainId(chainId) {\n        const initializedChains = this._getInitializedChains();\n        return Boolean(initializedChains.names[chainId.toString()]);\n    }\n    static _getChainParams(_chain, customChains) {\n        let chain = _chain;\n        const initializedChains = this._getInitializedChains(customChains);\n        if (typeof chain === 'number' || typeof chain === 'bigint') {\n            chain = chain.toString();\n            if (initializedChains.names[chain]) {\n                const name = initializedChains.names[chain];\n                return initializedChains[name];\n            }\n            throw new Error(`Chain with ID ${chain} not supported`);\n        }\n        if (initializedChains[chain] !== undefined) {\n            return initializedChains[chain];\n        }\n        throw new Error(`Chain with name ${chain} not supported`);\n    }\n    constructor(opts) {\n        var _a, _b;\n        super();\n        this._eips = [];\n        this._customChains = (_a = opts.customChains) !== null && _a !== void 0 ? _a : [];\n        this._chainParams = this.setChain(opts.chain);\n        this.DEFAULT_HARDFORK = (_b = this._chainParams.defaultHardfork) !== null && _b !== void 0 ? _b : _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge;\n        // Assign hardfork changes in the sequence of the applied hardforks\n        this.HARDFORK_CHANGES = this.hardforks().map(hf => [\n            hf.name,\n            _hardforks_index_js__WEBPACK_IMPORTED_MODULE_9__.hardforks[hf.name],\n        ]);\n        this._hardfork = this.DEFAULT_HARDFORK;\n        if (opts.hardfork !== undefined) {\n            this.setHardfork(opts.hardfork);\n        }\n        if (opts.eips) {\n            this.setEIPs(opts.eips);\n        }\n    }\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain representation.\n     *              Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    setChain(chain) {\n        if (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n            this._chainParams = Common._getChainParams(chain, this._customChains);\n        }\n        else if (typeof chain === 'object') {\n            if (this._customChains.length > 0) {\n                throw new Error('Chain must be a string, number, or bigint when initialized with customChains passed in');\n            }\n            const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            for (const param of required) {\n                if (!(param in chain)) {\n                    throw new Error(`Missing required chain parameter: ${param}`);\n                }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        for (const hf of this.hardforks()) {\n            if (hf.block === undefined) {\n                throw new Error(`Hardfork cannot have undefined block number`);\n            }\n        }\n        return this._chainParams;\n    }\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n     */\n    setHardfork(hardfork) {\n        let existing = false;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            if (hfChanges[0] === hardfork) {\n                if (this._hardfork !== hardfork) {\n                    this._hardfork = hardfork;\n                    this.emit('hardforkChanged', hardfork);\n                }\n                existing = true;\n            }\n        }\n        if (!existing) {\n            throw new Error(`Hardfork with name ${hardfork} not supported`);\n        }\n    }\n    /**\n     * Returns the hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td : total difficulty of the parent block (for block hf) OR of the chain latest (for chain hf)\n     * @param timestamp: timestamp in seconds at which block was/is to be minted\n     * @returns The name of the HF\n     */\n    getHardforkByBlockNumber(_blockNumber, _td, _timestamp) {\n        const blockNumber = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_blockNumber, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);\n        const td = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_td, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);\n        const timestamp = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_timestamp, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.Number);\n        // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n        const hfs = this.hardforks().filter(hf => \n        // eslint-disable-next-line no-null/no-null\n        hf.block !== null ||\n            // eslint-disable-next-line no-null/no-null\n            (hf.ttd !== null && hf.ttd !== undefined) ||\n            hf.timestamp !== undefined);\n        // eslint-disable-next-line no-null/no-null\n        const mergeIndex = hfs.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n        const doubleTTDHF = hfs\n            .slice(mergeIndex + 1)\n            // eslint-disable-next-line no-null/no-null\n            .findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n        if (doubleTTDHF >= 0) {\n            throw Error(`More than one merge hardforks found with ttd specified`);\n        }\n        // Find the first hardfork that has a block number greater than `blockNumber`\n        // (skips the merge hardfork since it cannot have a block number specified).\n        // If timestamp is not provided, it also skips timestamps hardforks to continue\n        // discovering/checking number hardforks.\n        let hfIndex = hfs.findIndex(hf => \n        // eslint-disable-next-line no-null/no-null\n        (hf.block !== null && hf.block > blockNumber) ||\n            (timestamp !== undefined && Number(hf.timestamp) > timestamp));\n        if (hfIndex === -1) {\n            // all hardforks apply, set hfIndex to the last one as that's the candidate\n            hfIndex = hfs.length;\n        }\n        else if (hfIndex === 0) {\n            // cannot have a case where a block number is before all applied hardforks\n            // since the chain has to start with a hardfork\n            throw Error('Must have at least one hardfork at block 0');\n        }\n        // If timestamp is not provided, we need to rollback to the last hf with block or ttd\n        if (timestamp === undefined) {\n            const stepBack = hfs\n                .slice(0, hfIndex)\n                .reverse()\n                // eslint-disable-next-line no-null/no-null\n                .findIndex(hf => hf.block !== null || hf.ttd !== undefined);\n            hfIndex -= stepBack;\n        }\n        // Move hfIndex one back to arrive at candidate hardfork\n        hfIndex -= 1;\n        // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n        // hardforks. so it will now be needed to rollback\n        // eslint-disable-next-line no-null/no-null\n        if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n            // We're on the merge hardfork.  Let's check the TTD\n            // eslint-disable-next-line no-null/no-null\n            if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd) > td) {\n                // Merge ttd greater than current td so we're on hardfork before merge\n                hfIndex -= 1;\n            }\n            // eslint-disable-next-line no-null/no-null\n        }\n        else if (mergeIndex >= 0 && td !== undefined && td !== null) {\n            if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd) > td) {\n                throw Error('Maximum HF determined by total difficulty is lower than the block number HF');\n            }\n            else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd) <= td) {\n                throw Error('HF determined by block number is lower than the minimum total difficulty HF');\n            }\n        }\n        const hfStartIndex = hfIndex;\n        // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n        // This won't anyway be the case with Merge hfs\n        for (; hfIndex < hfs.length - 1; hfIndex += 1) {\n            // break out if hfIndex + 1 is not scheduled at hfIndex\n            if (hfs[hfIndex].block !== hfs[hfIndex + 1].block ||\n                hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp) {\n                break;\n            }\n        }\n        if (timestamp) {\n            const minTimeStamp = hfs\n                .slice(0, hfStartIndex)\n                .reduce((acc, hf) => { var _a; return Math.max(Number((_a = hf.timestamp) !== null && _a !== void 0 ? _a : '0'), acc); }, 0);\n            if (minTimeStamp > timestamp) {\n                throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`);\n            }\n            const maxTimeStamp = hfs\n                .slice(hfIndex + 1)\n                .reduce((acc, hf) => { var _a; return Math.min(Number((_a = hf.timestamp) !== null && _a !== void 0 ? _a : timestamp), acc); }, timestamp);\n            if (maxTimeStamp < timestamp) {\n                throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`);\n            }\n        }\n        const hardfork = hfs[hfIndex];\n        return hardfork.name;\n    }\n    /**\n     * Sets a new hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @param timestamp\n     * @returns The name of the HF set\n     */\n    setHardforkByBlockNumber(blockNumber, td, timestamp) {\n        const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);\n        this.setHardfork(hardfork);\n        return hardfork;\n    }\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params or null if hardfork not on chain\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    _getHardfork(hardfork) {\n        const hfs = this.hardforks();\n        for (const hf of hfs) {\n            if (hf.name === hardfork)\n                return hf;\n        }\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n    /**\n     * Sets the active EIPs\n     * @param eips\n     */\n    setEIPs(eips = []) {\n        for (const eip of eips) {\n            if (!(eip in _eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs)) {\n                throw new Error(`${eip} not supported`);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n            const minHF = this.gteHardfork(_eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs[eip].minimumHardfork);\n            if (!minHF) {\n                throw new Error(\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (_eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs[eip].requiredEIPs !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                for (const elem of _eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs[eip].requiredEIPs) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n                        throw new Error(\n                        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                        `${eip} requires EIP ${elem}, but is not included in the EIP list`);\n                    }\n                }\n            }\n        }\n        this._eips = eips;\n    }\n    /**\n     * Returns a parameter for the current chain setup\n     *\n     * If the parameter is present in an EIP, the EIP always takes precedence.\n     * Otherwise the parameter if taken from the latest applied HF with\n     * a change on the respective parameter.\n     *\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @returns The value requested or `BigInt(0)` if not found\n     */\n    param(topic, name) {\n        // TODO: consider the case that different active EIPs\n        // can change the same parameter\n        let value;\n        for (const eip of this._eips) {\n            value = this.paramByEIP(topic, name, eip);\n            if (value !== undefined)\n                return value;\n        }\n        return this.paramByHardfork(topic, name, this._hardfork);\n    }\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name\n     * @returns The value requested or `BigInt(0)` if not found\n     */\n    paramByHardfork(topic, name, hardfork) {\n        // eslint-disable-next-line no-null/no-null\n        let value = null;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            // EIP-referencing HF file (e.g. berlin.json)\n            if ('eips' in hfChanges[1]) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                const hfEIPs = hfChanges[1].eips;\n                for (const eip of hfEIPs) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    const valueEIP = this.paramByEIP(topic, name, eip);\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    value = typeof valueEIP === 'bigint' ? valueEIP : value;\n                }\n                // Parameter-inlining HF file (e.g. istanbul.json)\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                if (hfChanges[1][topic] === undefined) {\n                    throw new Error(`Topic ${topic} not defined`);\n                }\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                if (hfChanges[1][topic][name] !== undefined) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                    value = hfChanges[1][topic][name].v;\n                }\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return BigInt(value !== null && value !== void 0 ? value : 0);\n    }\n    /**\n     * Returns a parameter corresponding to an EIP\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param eip Number of the EIP\n     * @returns The value requested or `undefined` if not found\n     */\n    // eslint-disable-next-line class-methods-use-this\n    paramByEIP(topic, name, eip) {\n        if (!(eip in _eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs)) {\n            throw new Error(`${eip} not supported`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const eipParams = _eips_index_js__WEBPACK_IMPORTED_MODULE_7__.EIPs[eip];\n        if (!(topic in eipParams)) {\n            throw new Error(`Topic ${topic} not defined`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (eipParams[topic][name] === undefined) {\n            return undefined;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n        const value = eipParams[topic][name].v;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return BigInt(value);\n    }\n    /**\n     * Returns a parameter for the hardfork active on block number or\n     * optional provided total difficulty (Merge HF)\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     * @param td Total difficulty\n     *    * @returns The value requested or `BigInt(0)` if not found\n     */\n    paramByBlock(topic, name, blockNumber, td, timestamp) {\n        const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);\n        return this.paramByHardfork(topic, name, hardfork);\n    }\n    /**\n     * Checks if an EIP is activated by either being included in the EIPs\n     * manually passed in with the {@link CommonOpts.eips} or in a\n     * hardfork currently being active\n     *\n     * Note: this method only works for EIPs being supported\n     * by the {@link CommonOpts.eips} constructor option\n     * @param eip\n     */\n    isActivatedEIP(eip) {\n        if (this.eips().includes(eip)) {\n            return true;\n        }\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const hf = hfChanges[1];\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n            if (this.gteHardfork(hf.name) && 'eips' in hf) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                if (hf.eips.includes(eip)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @returns True if HF is active on block number\n     */\n    hardforkIsActiveOnBlock(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    _hardfork, _blockNumber) {\n        const blockNumber = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_blockNumber, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const hfBlock = this.hardforkBlock(hardfork);\n        if (typeof hfBlock === 'bigint' && hfBlock !== BigInt(0) && blockNumber >= hfBlock) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @returns True if HF is active on block number\n     */\n    activeOnBlock(blockNumber) {\n        // eslint-disable-next-line no-null/no-null\n        return this.hardforkIsActiveOnBlock(null, blockNumber);\n    }\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    hardforkGteHardfork(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    _hardfork1, hardfork2) {\n        const hardfork1 = _hardfork1 !== null && _hardfork1 !== void 0 ? _hardfork1 : this._hardfork;\n        const hardforks = this.hardforks();\n        let posHf1 = -1;\n        let posHf2 = -1;\n        let index = 0;\n        for (const hf of hardforks) {\n            if (hf.name === hardfork1)\n                posHf1 = index;\n            if (hf.name === hardfork2)\n                posHf2 = index;\n            index += 1;\n        }\n        return posHf1 >= posHf2 && posHf2 !== -1;\n    }\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    gteHardfork(hardfork) {\n        // eslint-disable-next-line no-null/no-null\n        return this.hardforkGteHardfork(null, hardfork);\n    }\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    hardforkBlock(_hardfork) {\n        var _a;\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const block = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.block;\n        // eslint-disable-next-line no-null/no-null\n        if (block === undefined || block === null) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return BigInt(block);\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    hardforkTimestamp(_hardfork) {\n        var _a;\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const timestamp = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.timestamp;\n        // eslint-disable-next-line no-null/no-null\n        if (timestamp === undefined || timestamp === null) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return BigInt(timestamp);\n    }\n    /**\n     * Returns the hardfork change block for eip\n     * @param eip EIP number\n     * @returns Block number or null if unscheduled\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    eipBlock(eip) {\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const hf = hfChanges[1];\n            if ('eips' in hf) {\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n                if (hf.eips.includes(eip)) {\n                    return this.hardforkBlock(typeof hfChanges[0] === 'number' ? String(hfChanges[0]) : hfChanges[0]);\n                }\n            }\n        }\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n    /**\n     * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Total difficulty or null if no set\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    hardforkTTD(_hardfork) {\n        var _a;\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const ttd = (_a = this._getHardfork(hardfork)) === null || _a === void 0 ? void 0 : _a.ttd;\n        // eslint-disable-next-line no-null/no-null\n        if (ttd === undefined || ttd === null) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return BigInt(ttd);\n    }\n    /**\n     * True if block number provided is the hardfork (given or set) change block\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     * @deprecated\n     */\n    isHardforkBlock(_blockNumber, _hardfork) {\n        const blockNumber = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_blockNumber, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const block = this.hardforkBlock(hardfork);\n        return typeof block === 'bigint' && block !== BigInt(0) ? block === blockNumber : false;\n    }\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block timestamp, number or null if not available\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    nextHardforkBlockOrTimestamp(_hardfork) {\n        var _a, _b, _c;\n        const hardfork = (_a = _hardfork) !== null && _a !== void 0 ? _a : this._hardfork;\n        const hfs = this.hardforks();\n        let hfIndex = hfs.findIndex(hf => hf.name === hardfork);\n        // If the current hardfork is merge, go one behind as merge hf is not part of these\n        // calcs even if the merge hf block is set\n        if (hardfork === _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge) {\n            hfIndex -= 1;\n        }\n        // Hardfork not found\n        if (hfIndex < 0) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        let currHfTimeOrBlock = (_b = hfs[hfIndex].timestamp) !== null && _b !== void 0 ? _b : hfs[hfIndex].block;\n        currHfTimeOrBlock =\n            // eslint-disable-next-line no-null/no-null\n            currHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined\n                ? Number(currHfTimeOrBlock)\n                : // eslint-disable-next-line no-null/no-null\n                    null;\n        const nextHf = hfs.slice(hfIndex + 1).find(hf => {\n            var _a;\n            let hfTimeOrBlock = (_a = hf.timestamp) !== null && _a !== void 0 ? _a : hf.block;\n            hfTimeOrBlock =\n                // eslint-disable-next-line no-null/no-null\n                hfTimeOrBlock !== null && hfTimeOrBlock !== undefined\n                    ? Number(hfTimeOrBlock)\n                    : // eslint-disable-next-line no-null/no-null\n                        null;\n            return (hf.name !== _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge &&\n                // eslint-disable-next-line no-null/no-null\n                hfTimeOrBlock !== null &&\n                hfTimeOrBlock !== undefined &&\n                hfTimeOrBlock !== currHfTimeOrBlock);\n        });\n        // If no next hf found with valid block or timestamp return null\n        if (nextHf === undefined) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        const nextHfBlock = (_c = nextHf.timestamp) !== null && _c !== void 0 ? _c : nextHf.block;\n        // eslint-disable-next-line no-null/no-null\n        if (nextHfBlock === null || nextHfBlock === undefined) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return BigInt(nextHfBlock);\n    }\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     * @deprecated\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    nextHardforkBlock(_hardfork) {\n        var _a;\n        const hardfork = (_a = _hardfork) !== null && _a !== void 0 ? _a : this._hardfork;\n        let hfBlock = this.hardforkBlock(hardfork);\n        // If this is a merge hardfork with block not set, then we fallback to previous hardfork\n        // to find the nextHardforkBlock\n        // eslint-disable-next-line no-null/no-null\n        if (hfBlock === null && hardfork === _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge) {\n            const hfs = this.hardforks();\n            // eslint-disable-next-line no-null/no-null\n            const mergeIndex = hfs.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n            if (mergeIndex < 0) {\n                throw Error(`Merge hardfork should have been found`);\n            }\n            hfBlock = this.hardforkBlock(hfs[mergeIndex - 1].name);\n        }\n        // eslint-disable-next-line no-null/no-null\n        if (hfBlock === null) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        // Next fork block number or null if none available\n        // Logic: if accumulator is still null and on the first occurrence of\n        // a block greater than the current hfBlock set the accumulator,\n        // pass on the accumulator as the final result from this time on\n        // eslint-disable-next-line no-null/no-null, @typescript-eslint/ban-types\n        const nextHfBlock = this.hardforks().reduce((acc, hf) => {\n            // We need to ignore the merge block in our next hardfork calc\n            const block = BigInt(\n            // eslint-disable-next-line no-null/no-null\n            hf.block === null || (hf.ttd !== undefined && hf.ttd !== null) ? 0 : hf.block);\n            // TypeScript can't seem to follow that the hfBlock is not null at this point\n            // eslint-disable-next-line no-null/no-null\n            return block > hfBlock && acc === null ? block : acc;\n            // eslint-disable-next-line no-null/no-null\n        }, null);\n        return nextHfBlock;\n    }\n    /**\n     * True if block number provided is the hardfork change block following the hardfork given or set\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     * @deprecated\n     */\n    isNextHardforkBlock(_blockNumber, _hardfork) {\n        const blockNumber = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toType)(_blockNumber, _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput.BigInt);\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        // eslint-disable-next-line deprecation/deprecation\n        const nextHardforkBlock = this.nextHardforkBlock(hardfork);\n        // eslint-disable-next-line no-null/no-null\n        return nextHardforkBlock === null ? false : nextHardforkBlock === blockNumber;\n    }\n    /**\n     * Internal helper function to calculate a fork hash\n     * @param hardfork Hardfork name\n     * @param genesisHash Genesis block hash of the chain\n     * @returns Fork hash as hex string\n     */\n    _calcForkHash(hardfork, genesisHash) {\n        let hfUint8Array = new Uint8Array();\n        let prevBlockOrTime = 0;\n        for (const hf of this.hardforks()) {\n            const { block, timestamp, name } = hf;\n            // Timestamp to be used for timestamp based hfs even if we may bundle\n            // block number with them retrospectively\n            let blockOrTime = timestamp !== null && timestamp !== void 0 ? timestamp : block;\n            // eslint-disable-next-line no-null/no-null\n            blockOrTime = blockOrTime !== null ? Number(blockOrTime) : null;\n            // Skip for chainstart (0), not applied HFs (null) and\n            // when already applied on same blockOrTime HFs\n            // and on the merge since forkhash doesn't change on merge hf\n            if (typeof blockOrTime === 'number' &&\n                blockOrTime !== 0 &&\n                blockOrTime !== prevBlockOrTime &&\n                name !== _enums_js__WEBPACK_IMPORTED_MODULE_8__.Hardfork.Merge) {\n                const hfBlockUint8Array = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(blockOrTime.toString(16).padStart(16, '0'));\n                hfUint8Array = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(hfUint8Array, hfBlockUint8Array);\n                prevBlockOrTime = blockOrTime;\n            }\n            if (hf.name === hardfork)\n                break;\n        }\n        const inputUint8Array = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(genesisHash, hfUint8Array);\n        // CRC32 delivers result as signed (negative) 32-bit integer,\n        // convert to hex string\n        // eslint-disable-next-line no-bitwise\n        const forkhash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.intToUint8Array)(crc32Uint8Array(inputUint8Array) >>> 0));\n        return forkhash;\n    }\n    /**\n     * Returns an eth/64 compliant fork hash (EIP-2124)\n     * @param hardfork Hardfork name, optional if HF set\n     * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n     */\n    forkHash(_hardfork, genesisHash) {\n        const hardfork = _hardfork !== null && _hardfork !== void 0 ? _hardfork : this._hardfork;\n        const data = this._getHardfork(hardfork);\n        if (\n        // eslint-disable-next-line no-null/no-null\n        data === null ||\n            // eslint-disable-next-line no-null/no-null\n            ((data === null || data === void 0 ? void 0 : data.block) === null && (data === null || data === void 0 ? void 0 : data.timestamp) === undefined && (data === null || data === void 0 ? void 0 : data.ttd) === undefined)) {\n            const msg = 'No fork hash calculation possible for future hardfork';\n            throw new Error(msg);\n        }\n        // eslint-disable-next-line no-null/no-null\n        if ((data === null || data === void 0 ? void 0 : data.forkHash) !== null && (data === null || data === void 0 ? void 0 : data.forkHash) !== undefined) {\n            return data.forkHash;\n        }\n        if (!genesisHash)\n            throw new Error('genesisHash required for forkHash calculation');\n        return this._calcForkHash(hardfork, genesisHash);\n    }\n    /**\n     *\n     * @param forkHash Fork hash as a hex string\n     * @returns Array with hardfork data (name, block, forkHash)\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    hardforkForForkHash(forkHash) {\n        const resArray = this.hardforks().filter((hf) => hf.forkHash === forkHash);\n        // eslint-disable-next-line no-null/no-null\n        return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n    }\n    /**\n     * Sets any missing forkHashes on the passed-in {@link Common} instance\n     * @param common The {@link Common} to set the forkHashes for\n     * @param genesisHash The genesis block hash\n     */\n    setForkHashes(genesisHash) {\n        var _a;\n        for (const hf of this.hardforks()) {\n            const blockOrTime = (_a = hf.timestamp) !== null && _a !== void 0 ? _a : hf.block;\n            if (\n            // eslint-disable-next-line no-null/no-null\n            (hf.forkHash === null || hf.forkHash === undefined) &&\n                // eslint-disable-next-line no-null/no-null\n                ((blockOrTime !== null && blockOrTime !== undefined) ||\n                    typeof hf.ttd !== 'undefined')) {\n                hf.forkHash = this.forkHash(hf.name, genesisHash);\n            }\n        }\n    }\n    /**\n     * Returns the Genesis parameters of the current chain\n     * @returns Genesis dictionary\n     */\n    genesis() {\n        return this._chainParams.genesis;\n    }\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    hardforks() {\n        return this._chainParams.hardforks;\n    }\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    bootstrapNodes() {\n        return this._chainParams.bootstrapNodes;\n    }\n    /**\n     * Returns DNS networks for the current chain\n     * @returns {String[]} Array of DNS ENR urls\n     */\n    dnsNetworks() {\n        return this._chainParams.dnsNetworks;\n    }\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    hardfork() {\n        return this._hardfork;\n    }\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    chainId() {\n        return BigInt(this._chainParams.chainId);\n    }\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    chainName() {\n        return this._chainParams.name;\n    }\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    networkId() {\n        return BigInt(this._chainParams.networkId);\n    }\n    /**\n     * Returns the active EIPs\n     * @returns List of EIPs\n     */\n    eips() {\n        return this._eips;\n    }\n    /**\n     * Returns the consensus type of the network\n     * Possible values: \"pow\"|\"poa\"|\"pos\"\n     *\n     * Note: This value can update along a Hardfork.\n     */\n    consensusType() {\n        const hardfork = this.hardfork();\n        let value;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            if ('consensus' in hfChanges[1]) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                value = hfChanges[1].consensus.type;\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return value !== null && value !== void 0 ? value : this._chainParams.consensus.type;\n    }\n    /**\n     * Returns the concrete consensus implementation\n     * algorithm or protocol for the network\n     * e.g. \"ethash\" for \"pow\" consensus type,\n     * \"clique\" for \"poa\" consensus type or\n     * \"casper\" for \"pos\" consensus type.\n     *\n     * Note: This value can update along a Hardfork.\n     */\n    consensusAlgorithm() {\n        const hardfork = this.hardfork();\n        let value;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            if ('consensus' in hfChanges[1]) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                value = hfChanges[1].consensus.algorithm;\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return value !== null && value !== void 0 ? value : this._chainParams.consensus.algorithm;\n    }\n    /**\n     * Returns a dictionary with consensus configuration\n     * parameters based on the consensus algorithm\n     *\n     * Expected returns (parameters must be present in\n     * the respective chain json files):\n     *\n     * ethash: empty object\n     * clique: period, epoch\n     * casper: empty object\n     *\n     * Note: This value can update along a Hardfork.\n     */\n    consensusConfig() {\n        var _a;\n        const hardfork = this.hardfork();\n        let value;\n        for (const hfChanges of this.HARDFORK_CHANGES) {\n            if ('consensus' in hfChanges[1]) {\n                // The config parameter is named after the respective consensus algorithm\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                value = hfChanges[1].consensus[hfChanges[1].consensus.algorithm];\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return ((_a = value !== null && value !== void 0 ? value : this._chainParams.consensus[this.consensusAlgorithm()]) !== null && _a !== void 0 ? _a : {});\n    }\n    /**\n     * Returns a deep copy of this {@link Common} instance.\n     */\n    copy() {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment\n        const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        copy.removeAllListeners();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return copy;\n    }\n    static _getInitializedChains(customChains) {\n        const names = {};\n        for (const [name, id] of Object.entries(_enums_js__WEBPACK_IMPORTED_MODULE_8__.Chain)) {\n            names[id] = name.toLowerCase();\n        }\n        const chains = { mainnet: _chains_mainnet_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"], goerli: _chains_goerli_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"], sepolia: _chains_sepolia_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"] };\n        if (customChains) {\n            for (const chain of customChains) {\n                const { name } = chain;\n                names[chain.chainId.toString()] = name;\n                chains[name] = chain;\n            }\n        }\n        chains.names = names;\n        return chains;\n    }\n}\n//# sourceMappingURL=common.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/1153.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/1153.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-1153',\n    number: 1153,\n    comment: 'Transient Storage',\n    url: 'https://eips.ethereum.org/EIPS/eip-1153',\n    status: 'Review',\n    minimumHardfork: 'chainstart',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {\n        tstore: {\n            v: 100,\n            d: 'Base fee of the TSTORE opcode',\n        },\n        tload: {\n            v: 100,\n            d: 'Base fee of the TLOAD opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=1153.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8xMTUzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsVUFBVTtBQUNWLFdBQVc7QUFDWCxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcZWlwc1xcMTE1My5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ0VJUC0xMTUzJyxcbiAgICBudW1iZXI6IDExNTMsXG4gICAgY29tbWVudDogJ1RyYW5zaWVudCBTdG9yYWdlJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTExNTMnLFxuICAgIHN0YXR1czogJ1JldmlldycsXG4gICAgbWluaW11bUhhcmRmb3JrOiAnY2hhaW5zdGFydCcsXG4gICAgcmVxdWlyZWRFSVBzOiBbXSxcbiAgICBnYXNDb25maWc6IHt9LFxuICAgIGdhc1ByaWNlczoge1xuICAgICAgICB0c3RvcmU6IHtcbiAgICAgICAgICAgIHY6IDEwMCxcbiAgICAgICAgICAgIGQ6ICdCYXNlIGZlZSBvZiB0aGUgVFNUT1JFIG9wY29kZScsXG4gICAgICAgIH0sXG4gICAgICAgIHRsb2FkOiB7XG4gICAgICAgICAgICB2OiAxMDAsXG4gICAgICAgICAgICBkOiAnQmFzZSBmZWUgb2YgdGhlIFRMT0FEIG9wY29kZScsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICB2bToge30sXG4gICAgcG93OiB7fSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0xMTUzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/1153.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/1559.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/1559.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-1559',\n    number: 1559,\n    comment: 'Fee market change for ETH 1.0 chain',\n    url: 'https://eips.ethereum.org/EIPS/eip-1559',\n    status: 'Final',\n    minimumHardfork: 'berlin',\n    requiredEIPs: [2930],\n    gasConfig: {\n        baseFeeMaxChangeDenominator: {\n            v: 8,\n            d: 'Maximum base fee change denominator',\n        },\n        elasticityMultiplier: {\n            v: 2,\n            d: 'Maximum block gas target elasticity',\n        },\n        initialBaseFee: {\n            v: 1000000000,\n            d: 'Initial base fee on first EIP1559 block',\n        },\n    },\n    gasPrices: {},\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=1559.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8xNTU5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsaUJBQWlCO0FBQ2pCLFVBQVU7QUFDVixXQUFXO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFxjb21tb25cXGVpcHNcXDE1NTkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIG5hbWU6ICdFSVAtMTU1OScsXG4gICAgbnVtYmVyOiAxNTU5LFxuICAgIGNvbW1lbnQ6ICdGZWUgbWFya2V0IGNoYW5nZSBmb3IgRVRIIDEuMCBjaGFpbicsXG4gICAgdXJsOiAnaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0xNTU5JyxcbiAgICBzdGF0dXM6ICdGaW5hbCcsXG4gICAgbWluaW11bUhhcmRmb3JrOiAnYmVybGluJyxcbiAgICByZXF1aXJlZEVJUHM6IFsyOTMwXSxcbiAgICBnYXNDb25maWc6IHtcbiAgICAgICAgYmFzZUZlZU1heENoYW5nZURlbm9taW5hdG9yOiB7XG4gICAgICAgICAgICB2OiA4LFxuICAgICAgICAgICAgZDogJ01heGltdW0gYmFzZSBmZWUgY2hhbmdlIGRlbm9taW5hdG9yJyxcbiAgICAgICAgfSxcbiAgICAgICAgZWxhc3RpY2l0eU11bHRpcGxpZXI6IHtcbiAgICAgICAgICAgIHY6IDIsXG4gICAgICAgICAgICBkOiAnTWF4aW11bSBibG9jayBnYXMgdGFyZ2V0IGVsYXN0aWNpdHknLFxuICAgICAgICB9LFxuICAgICAgICBpbml0aWFsQmFzZUZlZToge1xuICAgICAgICAgICAgdjogMTAwMDAwMDAwMCxcbiAgICAgICAgICAgIGQ6ICdJbml0aWFsIGJhc2UgZmVlIG9uIGZpcnN0IEVJUDE1NTkgYmxvY2snLFxuICAgICAgICB9LFxuICAgIH0sXG4gICAgZ2FzUHJpY2VzOiB7fSxcbiAgICB2bToge30sXG4gICAgcG93OiB7fSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0xNTU5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/1559.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2315.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2315.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-2315',\n    number: 2315,\n    comment: 'Simple subroutines for the EVM',\n    url: 'https://eips.ethereum.org/EIPS/eip-2315',\n    status: 'Draft',\n    minimumHardfork: 'istanbul',\n    gasConfig: {},\n    gasPrices: {\n        beginsub: {\n            v: 2,\n            d: 'Base fee of the BEGINSUB opcode',\n        },\n        returnsub: {\n            v: 5,\n            d: 'Base fee of the RETURNSUB opcode',\n        },\n        jumpsub: {\n            v: 10,\n            d: 'Base fee of the JUMPSUB opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=2315.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8yMzE1LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxVQUFVO0FBQ1YsV0FBVztBQUNYLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxlaXBzXFwyMzE1LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnRUlQLTIzMTUnLFxuICAgIG51bWJlcjogMjMxNSxcbiAgICBjb21tZW50OiAnU2ltcGxlIHN1YnJvdXRpbmVzIGZvciB0aGUgRVZNJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTIzMTUnLFxuICAgIHN0YXR1czogJ0RyYWZ0JyxcbiAgICBtaW5pbXVtSGFyZGZvcms6ICdpc3RhbmJ1bCcsXG4gICAgZ2FzQ29uZmlnOiB7fSxcbiAgICBnYXNQcmljZXM6IHtcbiAgICAgICAgYmVnaW5zdWI6IHtcbiAgICAgICAgICAgIHY6IDIsXG4gICAgICAgICAgICBkOiAnQmFzZSBmZWUgb2YgdGhlIEJFR0lOU1VCIG9wY29kZScsXG4gICAgICAgIH0sXG4gICAgICAgIHJldHVybnN1Yjoge1xuICAgICAgICAgICAgdjogNSxcbiAgICAgICAgICAgIGQ6ICdCYXNlIGZlZSBvZiB0aGUgUkVUVVJOU1VCIG9wY29kZScsXG4gICAgICAgIH0sXG4gICAgICAgIGp1bXBzdWI6IHtcbiAgICAgICAgICAgIHY6IDEwLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBKVU1QU1VCIG9wY29kZScsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICB2bToge30sXG4gICAgcG93OiB7fSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0yMzE1LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2315.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2537.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2537.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-2537',\n    number: 2537,\n    comment: 'BLS12-381 precompiles',\n    url: 'https://eips.ethereum.org/EIPS/eip-2537',\n    status: 'Draft',\n    minimumHardfork: 'chainstart',\n    gasConfig: {},\n    gasPrices: {\n        Bls12381G1AddGas: {\n            v: 600,\n            d: 'Gas cost of a single BLS12-381 G1 addition precompile-call',\n        },\n        Bls12381G1MulGas: {\n            v: 12000,\n            d: 'Gas cost of a single BLS12-381 G1 multiplication precompile-call',\n        },\n        Bls12381G2AddGas: {\n            v: 4500,\n            d: 'Gas cost of a single BLS12-381 G2 addition precompile-call',\n        },\n        Bls12381G2MulGas: {\n            v: 55000,\n            d: 'Gas cost of a single BLS12-381 G2 multiplication precompile-call',\n        },\n        Bls12381PairingBaseGas: {\n            v: 115000,\n            d: 'Base gas cost of BLS12-381 pairing check',\n        },\n        Bls12381PairingPerPairGas: {\n            v: 23000,\n            d: 'Per-pair gas cost of BLS12-381 pairing check',\n        },\n        Bls12381MapG1Gas: {\n            v: 5500,\n            d: 'Gas cost of BLS12-381 map field element to G1',\n        },\n        Bls12381MapG2Gas: {\n            v: 110000,\n            d: 'Gas cost of BLS12-381 map field element to G2',\n        },\n        Bls12381MultiExpGasDiscount: {\n            v: [\n                [1, 1200],\n                [2, 888],\n                [3, 764],\n                [4, 641],\n                [5, 594],\n                [6, 547],\n                [7, 500],\n                [8, 453],\n                [9, 438],\n                [10, 423],\n                [11, 408],\n                [12, 394],\n                [13, 379],\n                [14, 364],\n                [15, 349],\n                [16, 334],\n                [17, 330],\n                [18, 326],\n                [19, 322],\n                [20, 318],\n                [21, 314],\n                [22, 310],\n                [23, 306],\n                [24, 302],\n                [25, 298],\n                [26, 294],\n                [27, 289],\n                [28, 285],\n                [29, 281],\n                [30, 277],\n                [31, 273],\n                [32, 269],\n                [33, 268],\n                [34, 266],\n                [35, 265],\n                [36, 263],\n                [37, 262],\n                [38, 260],\n                [39, 259],\n                [40, 257],\n                [41, 256],\n                [42, 254],\n                [43, 253],\n                [44, 251],\n                [45, 250],\n                [46, 248],\n                [47, 247],\n                [48, 245],\n                [49, 244],\n                [50, 242],\n                [51, 241],\n                [52, 239],\n                [53, 238],\n                [54, 236],\n                [55, 235],\n                [56, 233],\n                [57, 232],\n                [58, 231],\n                [59, 229],\n                [60, 228],\n                [61, 226],\n                [62, 225],\n                [63, 223],\n                [64, 222],\n                [65, 221],\n                [66, 220],\n                [67, 219],\n                [68, 219],\n                [69, 218],\n                [70, 217],\n                [71, 216],\n                [72, 216],\n                [73, 215],\n                [74, 214],\n                [75, 213],\n                [76, 213],\n                [77, 212],\n                [78, 211],\n                [79, 211],\n                [80, 210],\n                [81, 209],\n                [82, 208],\n                [83, 208],\n                [84, 207],\n                [85, 206],\n                [86, 205],\n                [87, 205],\n                [88, 204],\n                [89, 203],\n                [90, 202],\n                [91, 202],\n                [92, 201],\n                [93, 200],\n                [94, 199],\n                [95, 199],\n                [96, 198],\n                [97, 197],\n                [98, 196],\n                [99, 196],\n                [100, 195],\n                [101, 194],\n                [102, 193],\n                [103, 193],\n                [104, 192],\n                [105, 191],\n                [106, 191],\n                [107, 190],\n                [108, 189],\n                [109, 188],\n                [110, 188],\n                [111, 187],\n                [112, 186],\n                [113, 185],\n                [114, 185],\n                [115, 184],\n                [116, 183],\n                [117, 182],\n                [118, 182],\n                [119, 181],\n                [120, 180],\n                [121, 179],\n                [122, 179],\n                [123, 178],\n                [124, 177],\n                [125, 176],\n                [126, 176],\n                [127, 175],\n                [128, 174],\n            ],\n            d: 'Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair',\n        },\n    },\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=2537.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2537.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2565.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2565.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-2565',\n    number: 2565,\n    comment: 'ModExp gas cost',\n    url: 'https://eips.ethereum.org/EIPS/eip-2565',\n    status: 'Final',\n    minimumHardfork: 'byzantium',\n    gasConfig: {},\n    gasPrices: {\n        modexpGquaddivisor: {\n            v: 3,\n            d: 'Gquaddivisor from modexp precompile for gas calculation',\n        },\n    },\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=2565.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8yNTY1LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsVUFBVTtBQUNWLFdBQVc7QUFDWCxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcZWlwc1xcMjU2NS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ0VJUC0yNTY1JyxcbiAgICBudW1iZXI6IDI1NjUsXG4gICAgY29tbWVudDogJ01vZEV4cCBnYXMgY29zdCcsXG4gICAgdXJsOiAnaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0yNTY1JyxcbiAgICBzdGF0dXM6ICdGaW5hbCcsXG4gICAgbWluaW11bUhhcmRmb3JrOiAnYnl6YW50aXVtJyxcbiAgICBnYXNDb25maWc6IHt9LFxuICAgIGdhc1ByaWNlczoge1xuICAgICAgICBtb2RleHBHcXVhZGRpdmlzb3I6IHtcbiAgICAgICAgICAgIHY6IDMsXG4gICAgICAgICAgICBkOiAnR3F1YWRkaXZpc29yIGZyb20gbW9kZXhwIHByZWNvbXBpbGUgZm9yIGdhcyBjYWxjdWxhdGlvbicsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICB2bToge30sXG4gICAgcG93OiB7fSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0yNTY1LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2565.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2718.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2718.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-2718',\n    comment: 'Typed Transaction Envelope',\n    url: 'https://eips.ethereum.org/EIPS/eip-2718',\n    status: 'Final',\n    minimumHardfork: 'chainstart',\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=2718.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8yNzE4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsaUJBQWlCO0FBQ2pCLFVBQVU7QUFDVixXQUFXO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFxjb21tb25cXGVpcHNcXDI3MTguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIG5hbWU6ICdFSVAtMjcxOCcsXG4gICAgY29tbWVudDogJ1R5cGVkIFRyYW5zYWN0aW9uIEVudmVsb3BlJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTI3MTgnLFxuICAgIHN0YXR1czogJ0ZpbmFsJyxcbiAgICBtaW5pbXVtSGFyZGZvcms6ICdjaGFpbnN0YXJ0JyxcbiAgICBnYXNDb25maWc6IHt9LFxuICAgIGdhc1ByaWNlczoge30sXG4gICAgdm06IHt9LFxuICAgIHBvdzoge30sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9MjcxOC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2718.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2929.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2929.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-2929',\n    comment: 'Gas cost increases for state access opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-2929',\n    status: 'Final',\n    minimumHardfork: 'chainstart',\n    gasConfig: {},\n    gasPrices: {\n        coldsload: {\n            v: 2100,\n            d: 'Gas cost of the first read of storage from a given location (per transaction)',\n        },\n        coldaccountaccess: {\n            v: 2600,\n            d: 'Gas cost of the first read of a given address (per transaction)',\n        },\n        warmstorageread: {\n            v: 100,\n            d: \"Gas cost of reading storage locations which have already loaded 'cold'\",\n        },\n        sstoreCleanGasEIP2200: {\n            v: 2900,\n            d: 'Once per SSTORE operation from clean non-zero to something else',\n        },\n        sstoreNoopGasEIP2200: {\n            v: 100,\n            d: \"Once per SSTORE operation if the value doesn't change\",\n        },\n        sstoreDirtyGasEIP2200: {\n            v: 100,\n            d: 'Once per SSTORE operation if a dirty value is changed',\n        },\n        sstoreInitRefundEIP2200: {\n            v: 19900,\n            d: 'Once per SSTORE operation for resetting to the original zero value',\n        },\n        sstoreCleanRefundEIP2200: {\n            v: 4900,\n            d: 'Once per SSTORE operation for resetting to the original non-zero value',\n        },\n        call: {\n            v: 0,\n            d: 'Base fee of the CALL opcode',\n        },\n        callcode: {\n            v: 0,\n            d: 'Base fee of the CALLCODE opcode',\n        },\n        delegatecall: {\n            v: 0,\n            d: 'Base fee of the DELEGATECALL opcode',\n        },\n        staticcall: {\n            v: 0,\n            d: 'Base fee of the STATICCALL opcode',\n        },\n        balance: {\n            v: 0,\n            d: 'Base fee of the BALANCE opcode',\n        },\n        extcodesize: {\n            v: 0,\n            d: 'Base fee of the EXTCODESIZE opcode',\n        },\n        extcodecopy: {\n            v: 0,\n            d: 'Base fee of the EXTCODECOPY opcode',\n        },\n        extcodehash: {\n            v: 0,\n            d: 'Base fee of the EXTCODEHASH opcode',\n        },\n        sload: {\n            v: 0,\n            d: 'Base fee of the SLOAD opcode',\n        },\n        sstore: {\n            v: 0,\n            d: 'Base fee of the SSTORE opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=2929.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8yOTI5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsVUFBVTtBQUNWLFdBQVc7QUFDWCxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcZWlwc1xcMjkyOS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ0VJUC0yOTI5JyxcbiAgICBjb21tZW50OiAnR2FzIGNvc3QgaW5jcmVhc2VzIGZvciBzdGF0ZSBhY2Nlc3Mgb3Bjb2RlcycsXG4gICAgdXJsOiAnaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0yOTI5JyxcbiAgICBzdGF0dXM6ICdGaW5hbCcsXG4gICAgbWluaW11bUhhcmRmb3JrOiAnY2hhaW5zdGFydCcsXG4gICAgZ2FzQ29uZmlnOiB7fSxcbiAgICBnYXNQcmljZXM6IHtcbiAgICAgICAgY29sZHNsb2FkOiB7XG4gICAgICAgICAgICB2OiAyMTAwLFxuICAgICAgICAgICAgZDogJ0dhcyBjb3N0IG9mIHRoZSBmaXJzdCByZWFkIG9mIHN0b3JhZ2UgZnJvbSBhIGdpdmVuIGxvY2F0aW9uIChwZXIgdHJhbnNhY3Rpb24pJyxcbiAgICAgICAgfSxcbiAgICAgICAgY29sZGFjY291bnRhY2Nlc3M6IHtcbiAgICAgICAgICAgIHY6IDI2MDAsXG4gICAgICAgICAgICBkOiAnR2FzIGNvc3Qgb2YgdGhlIGZpcnN0IHJlYWQgb2YgYSBnaXZlbiBhZGRyZXNzIChwZXIgdHJhbnNhY3Rpb24pJyxcbiAgICAgICAgfSxcbiAgICAgICAgd2FybXN0b3JhZ2VyZWFkOiB7XG4gICAgICAgICAgICB2OiAxMDAsXG4gICAgICAgICAgICBkOiBcIkdhcyBjb3N0IG9mIHJlYWRpbmcgc3RvcmFnZSBsb2NhdGlvbnMgd2hpY2ggaGF2ZSBhbHJlYWR5IGxvYWRlZCAnY29sZCdcIixcbiAgICAgICAgfSxcbiAgICAgICAgc3N0b3JlQ2xlYW5HYXNFSVAyMjAwOiB7XG4gICAgICAgICAgICB2OiAyOTAwLFxuICAgICAgICAgICAgZDogJ09uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gZnJvbSBjbGVhbiBub24temVybyB0byBzb21ldGhpbmcgZWxzZScsXG4gICAgICAgIH0sXG4gICAgICAgIHNzdG9yZU5vb3BHYXNFSVAyMjAwOiB7XG4gICAgICAgICAgICB2OiAxMDAsXG4gICAgICAgICAgICBkOiBcIk9uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gaWYgdGhlIHZhbHVlIGRvZXNuJ3QgY2hhbmdlXCIsXG4gICAgICAgIH0sXG4gICAgICAgIHNzdG9yZURpcnR5R2FzRUlQMjIwMDoge1xuICAgICAgICAgICAgdjogMTAwLFxuICAgICAgICAgICAgZDogJ09uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gaWYgYSBkaXJ0eSB2YWx1ZSBpcyBjaGFuZ2VkJyxcbiAgICAgICAgfSxcbiAgICAgICAgc3N0b3JlSW5pdFJlZnVuZEVJUDIyMDA6IHtcbiAgICAgICAgICAgIHY6IDE5OTAwLFxuICAgICAgICAgICAgZDogJ09uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gZm9yIHJlc2V0dGluZyB0byB0aGUgb3JpZ2luYWwgemVybyB2YWx1ZScsXG4gICAgICAgIH0sXG4gICAgICAgIHNzdG9yZUNsZWFuUmVmdW5kRUlQMjIwMDoge1xuICAgICAgICAgICAgdjogNDkwMCxcbiAgICAgICAgICAgIGQ6ICdPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGZvciByZXNldHRpbmcgdG8gdGhlIG9yaWdpbmFsIG5vbi16ZXJvIHZhbHVlJyxcbiAgICAgICAgfSxcbiAgICAgICAgY2FsbDoge1xuICAgICAgICAgICAgdjogMCxcbiAgICAgICAgICAgIGQ6ICdCYXNlIGZlZSBvZiB0aGUgQ0FMTCBvcGNvZGUnLFxuICAgICAgICB9LFxuICAgICAgICBjYWxsY29kZToge1xuICAgICAgICAgICAgdjogMCxcbiAgICAgICAgICAgIGQ6ICdCYXNlIGZlZSBvZiB0aGUgQ0FMTENPREUgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICAgICAgZGVsZWdhdGVjYWxsOiB7XG4gICAgICAgICAgICB2OiAwLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBERUxFR0FURUNBTEwgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICAgICAgc3RhdGljY2FsbDoge1xuICAgICAgICAgICAgdjogMCxcbiAgICAgICAgICAgIGQ6ICdCYXNlIGZlZSBvZiB0aGUgU1RBVElDQ0FMTCBvcGNvZGUnLFxuICAgICAgICB9LFxuICAgICAgICBiYWxhbmNlOiB7XG4gICAgICAgICAgICB2OiAwLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBCQUxBTkNFIG9wY29kZScsXG4gICAgICAgIH0sXG4gICAgICAgIGV4dGNvZGVzaXplOiB7XG4gICAgICAgICAgICB2OiAwLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBFWFRDT0RFU0laRSBvcGNvZGUnLFxuICAgICAgICB9LFxuICAgICAgICBleHRjb2RlY29weToge1xuICAgICAgICAgICAgdjogMCxcbiAgICAgICAgICAgIGQ6ICdCYXNlIGZlZSBvZiB0aGUgRVhUQ09ERUNPUFkgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICAgICAgZXh0Y29kZWhhc2g6IHtcbiAgICAgICAgICAgIHY6IDAsXG4gICAgICAgICAgICBkOiAnQmFzZSBmZWUgb2YgdGhlIEVYVENPREVIQVNIIG9wY29kZScsXG4gICAgICAgIH0sXG4gICAgICAgIHNsb2FkOiB7XG4gICAgICAgICAgICB2OiAwLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBTTE9BRCBvcGNvZGUnLFxuICAgICAgICB9LFxuICAgICAgICBzc3RvcmU6IHtcbiAgICAgICAgICAgIHY6IDAsXG4gICAgICAgICAgICBkOiAnQmFzZSBmZWUgb2YgdGhlIFNTVE9SRSBvcGNvZGUnLFxuICAgICAgICB9LFxuICAgIH0sXG4gICAgdm06IHt9LFxuICAgIHBvdzoge30sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9MjkyOS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2929.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2930.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/2930.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-2930',\n    comment: 'Optional access lists',\n    url: 'https://eips.ethereum.org/EIPS/eip-2930',\n    status: 'Final',\n    minimumHardfork: 'istanbul',\n    requiredEIPs: [2718, 2929],\n    gasConfig: {},\n    gasPrices: {\n        accessListStorageKeyCost: {\n            v: 1900,\n            d: 'Gas cost per storage key in an Access List transaction',\n        },\n        accessListAddressCost: {\n            v: 2400,\n            d: 'Gas cost per storage key in an Access List transaction',\n        },\n    },\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=2930.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8yOTMwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLFVBQVU7QUFDVixXQUFXO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFxjb21tb25cXGVpcHNcXDI5MzAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIG5hbWU6ICdFSVAtMjkzMCcsXG4gICAgY29tbWVudDogJ09wdGlvbmFsIGFjY2VzcyBsaXN0cycsXG4gICAgdXJsOiAnaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0yOTMwJyxcbiAgICBzdGF0dXM6ICdGaW5hbCcsXG4gICAgbWluaW11bUhhcmRmb3JrOiAnaXN0YW5idWwnLFxuICAgIHJlcXVpcmVkRUlQczogWzI3MTgsIDI5MjldLFxuICAgIGdhc0NvbmZpZzoge30sXG4gICAgZ2FzUHJpY2VzOiB7XG4gICAgICAgIGFjY2Vzc0xpc3RTdG9yYWdlS2V5Q29zdDoge1xuICAgICAgICAgICAgdjogMTkwMCxcbiAgICAgICAgICAgIGQ6ICdHYXMgY29zdCBwZXIgc3RvcmFnZSBrZXkgaW4gYW4gQWNjZXNzIExpc3QgdHJhbnNhY3Rpb24nLFxuICAgICAgICB9LFxuICAgICAgICBhY2Nlc3NMaXN0QWRkcmVzc0Nvc3Q6IHtcbiAgICAgICAgICAgIHY6IDI0MDAsXG4gICAgICAgICAgICBkOiAnR2FzIGNvc3QgcGVyIHN0b3JhZ2Uga2V5IGluIGFuIEFjY2VzcyBMaXN0IHRyYW5zYWN0aW9uJyxcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIHZtOiB7fSxcbiAgICBwb3c6IHt9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPTI5MzAuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2930.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3198.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3198.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-3198',\n    number: 3198,\n    comment: 'BASEFEE opcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-3198',\n    status: 'Final',\n    minimumHardfork: 'london',\n    gasConfig: {},\n    gasPrices: {\n        basefee: {\n            v: 2,\n            d: 'Gas cost of the BASEFEE opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=3198.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zMTk4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsVUFBVTtBQUNWLFdBQVc7QUFDWCxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcZWlwc1xcMzE5OC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ0VJUC0zMTk4JyxcbiAgICBudW1iZXI6IDMxOTgsXG4gICAgY29tbWVudDogJ0JBU0VGRUUgb3Bjb2RlJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTMxOTgnLFxuICAgIHN0YXR1czogJ0ZpbmFsJyxcbiAgICBtaW5pbXVtSGFyZGZvcms6ICdsb25kb24nLFxuICAgIGdhc0NvbmZpZzoge30sXG4gICAgZ2FzUHJpY2VzOiB7XG4gICAgICAgIGJhc2VmZWU6IHtcbiAgICAgICAgICAgIHY6IDIsXG4gICAgICAgICAgICBkOiAnR2FzIGNvc3Qgb2YgdGhlIEJBU0VGRUUgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIHZtOiB7fSxcbiAgICBwb3c6IHt9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPTMxOTguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3198.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3529.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3529.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-3529',\n    comment: 'Reduction in refunds',\n    url: 'https://eips.ethereum.org/EIPS/eip-3529',\n    status: 'Final',\n    minimumHardfork: 'berlin',\n    requiredEIPs: [2929],\n    gasConfig: {\n        maxRefundQuotient: {\n            v: 5,\n            d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n        },\n    },\n    gasPrices: {\n        selfdestructRefund: {\n            v: 0,\n            d: 'Refunded following a selfdestruct operation',\n        },\n        sstoreClearRefundEIP2200: {\n            v: 4800,\n            d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n        },\n    },\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=3529.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNTI5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QztBQUN6QyxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsVUFBVTtBQUNWLFdBQVc7QUFDWCxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcZWlwc1xcMzUyOS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ0VJUC0zNTI5JyxcbiAgICBjb21tZW50OiAnUmVkdWN0aW9uIGluIHJlZnVuZHMnLFxuICAgIHVybDogJ2h0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMzUyOScsXG4gICAgc3RhdHVzOiAnRmluYWwnLFxuICAgIG1pbmltdW1IYXJkZm9yazogJ2JlcmxpbicsXG4gICAgcmVxdWlyZWRFSVBzOiBbMjkyOV0sXG4gICAgZ2FzQ29uZmlnOiB7XG4gICAgICAgIG1heFJlZnVuZFF1b3RpZW50OiB7XG4gICAgICAgICAgICB2OiA1LFxuICAgICAgICAgICAgZDogJ01heGltdW0gcmVmdW5kIHF1b3RpZW50OyBtYXggdHggcmVmdW5kIGlzIG1pbih0eC5nYXNVc2VkL21heFJlZnVuZFF1b3RpZW50LCB0eC5nYXNSZWZ1bmQpJyxcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIGdhc1ByaWNlczoge1xuICAgICAgICBzZWxmZGVzdHJ1Y3RSZWZ1bmQ6IHtcbiAgICAgICAgICAgIHY6IDAsXG4gICAgICAgICAgICBkOiAnUmVmdW5kZWQgZm9sbG93aW5nIGEgc2VsZmRlc3RydWN0IG9wZXJhdGlvbicsXG4gICAgICAgIH0sXG4gICAgICAgIHNzdG9yZUNsZWFyUmVmdW5kRUlQMjIwMDoge1xuICAgICAgICAgICAgdjogNDgwMCxcbiAgICAgICAgICAgIGQ6ICdPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGZvciBjbGVhcmluZyBhbiBvcmlnaW5hbGx5IGV4aXN0aW5nIHN0b3JhZ2Ugc2xvdCcsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICB2bToge30sXG4gICAgcG93OiB7fSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0zNTI5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3529.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3540.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3540.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-3540',\n    number: 3540,\n    comment: 'EVM Object Format (EOF) v1',\n    url: 'https://eips.ethereum.org/EIPS/eip-3540',\n    status: 'Review',\n    minimumHardfork: 'london',\n    requiredEIPs: [3541],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=3540.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNTQwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGlCQUFpQjtBQUNqQixVQUFVO0FBQ1YsV0FBVztBQUNYLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxlaXBzXFwzNTQwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnRUlQLTM1NDAnLFxuICAgIG51bWJlcjogMzU0MCxcbiAgICBjb21tZW50OiAnRVZNIE9iamVjdCBGb3JtYXQgKEVPRikgdjEnLFxuICAgIHVybDogJ2h0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMzU0MCcsXG4gICAgc3RhdHVzOiAnUmV2aWV3JyxcbiAgICBtaW5pbXVtSGFyZGZvcms6ICdsb25kb24nLFxuICAgIHJlcXVpcmVkRUlQczogWzM1NDFdLFxuICAgIGdhc0NvbmZpZzoge30sXG4gICAgZ2FzUHJpY2VzOiB7fSxcbiAgICB2bToge30sXG4gICAgcG93OiB7fSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0zNTQwLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3540.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3541.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3541.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-3541',\n    comment: 'Reject new contracts starting with the 0xEF byte',\n    url: 'https://eips.ethereum.org/EIPS/eip-3541',\n    status: 'Final',\n    minimumHardfork: 'berlin',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=3541.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNTQxLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixpQkFBaUI7QUFDakIsVUFBVTtBQUNWLFdBQVc7QUFDWCxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcZWlwc1xcMzU0MS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ0VJUC0zNTQxJyxcbiAgICBjb21tZW50OiAnUmVqZWN0IG5ldyBjb250cmFjdHMgc3RhcnRpbmcgd2l0aCB0aGUgMHhFRiBieXRlJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTM1NDEnLFxuICAgIHN0YXR1czogJ0ZpbmFsJyxcbiAgICBtaW5pbXVtSGFyZGZvcms6ICdiZXJsaW4nLFxuICAgIHJlcXVpcmVkRUlQczogW10sXG4gICAgZ2FzQ29uZmlnOiB7fSxcbiAgICBnYXNQcmljZXM6IHt9LFxuICAgIHZtOiB7fSxcbiAgICBwb3c6IHt9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPTM1NDEuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3541.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3554.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3554.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-3554',\n    comment: 'Reduction in refunds',\n    url: 'Difficulty Bomb Delay to December 1st 2021',\n    status: 'Final',\n    minimumHardfork: 'muirGlacier',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {\n        difficultyBombDelay: {\n            v: 9500000,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n});\n//# sourceMappingURL=3554.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNTU0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixpQkFBaUI7QUFDakIsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcZWlwc1xcMzU1NC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ0VJUC0zNTU0JyxcbiAgICBjb21tZW50OiAnUmVkdWN0aW9uIGluIHJlZnVuZHMnLFxuICAgIHVybDogJ0RpZmZpY3VsdHkgQm9tYiBEZWxheSB0byBEZWNlbWJlciAxc3QgMjAyMScsXG4gICAgc3RhdHVzOiAnRmluYWwnLFxuICAgIG1pbmltdW1IYXJkZm9yazogJ211aXJHbGFjaWVyJyxcbiAgICByZXF1aXJlZEVJUHM6IFtdLFxuICAgIGdhc0NvbmZpZzoge30sXG4gICAgZ2FzUHJpY2VzOiB7fSxcbiAgICB2bToge30sXG4gICAgcG93OiB7XG4gICAgICAgIGRpZmZpY3VsdHlCb21iRGVsYXk6IHtcbiAgICAgICAgICAgIHY6IDk1MDAwMDAsXG4gICAgICAgICAgICBkOiAndGhlIGFtb3VudCBvZiBibG9ja3MgdG8gZGVsYXkgdGhlIGRpZmZpY3VsdHkgYm9tYiB3aXRoJyxcbiAgICAgICAgfSxcbiAgICB9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPTM1NTQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3554.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3607.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3607.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-3607',\n    number: 3607,\n    comment: 'Reject transactions from senders with deployed code',\n    url: 'https://eips.ethereum.org/EIPS/eip-3607',\n    status: 'Final',\n    minimumHardfork: 'chainstart',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=3607.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNjA3LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGlCQUFpQjtBQUNqQixVQUFVO0FBQ1YsV0FBVztBQUNYLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxlaXBzXFwzNjA3LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnRUlQLTM2MDcnLFxuICAgIG51bWJlcjogMzYwNyxcbiAgICBjb21tZW50OiAnUmVqZWN0IHRyYW5zYWN0aW9ucyBmcm9tIHNlbmRlcnMgd2l0aCBkZXBsb3llZCBjb2RlJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTM2MDcnLFxuICAgIHN0YXR1czogJ0ZpbmFsJyxcbiAgICBtaW5pbXVtSGFyZGZvcms6ICdjaGFpbnN0YXJ0JyxcbiAgICByZXF1aXJlZEVJUHM6IFtdLFxuICAgIGdhc0NvbmZpZzoge30sXG4gICAgZ2FzUHJpY2VzOiB7fSxcbiAgICB2bToge30sXG4gICAgcG93OiB7fSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD0zNjA3LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3607.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3651.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3651.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-3651',\n    number: 3198,\n    comment: 'Warm COINBASE',\n    url: 'https://eips.ethereum.org/EIPS/eip-3651',\n    status: 'Review',\n    minimumHardfork: 'london',\n    requiredEIPs: [2929],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=3651.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNjUxLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGlCQUFpQjtBQUNqQixVQUFVO0FBQ1YsV0FBVztBQUNYLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxlaXBzXFwzNjUxLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnRUlQLTM2NTEnLFxuICAgIG51bWJlcjogMzE5OCxcbiAgICBjb21tZW50OiAnV2FybSBDT0lOQkFTRScsXG4gICAgdXJsOiAnaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0zNjUxJyxcbiAgICBzdGF0dXM6ICdSZXZpZXcnLFxuICAgIG1pbmltdW1IYXJkZm9yazogJ2xvbmRvbicsXG4gICAgcmVxdWlyZWRFSVBzOiBbMjkyOV0sXG4gICAgZ2FzQ29uZmlnOiB7fSxcbiAgICBnYXNQcmljZXM6IHt9LFxuICAgIHZtOiB7fSxcbiAgICBwb3c6IHt9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPTM2NTEuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3651.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3670.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3670.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-3670',\n    number: 3670,\n    comment: 'EOF - Code Validation',\n    url: 'https://eips.ethereum.org/EIPS/eip-3670',\n    status: 'Review',\n    minimumHardfork: 'london',\n    requiredEIPs: [3540],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=3670.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNjcwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGlCQUFpQjtBQUNqQixVQUFVO0FBQ1YsV0FBVztBQUNYLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxlaXBzXFwzNjcwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnRUlQLTM2NzAnLFxuICAgIG51bWJlcjogMzY3MCxcbiAgICBjb21tZW50OiAnRU9GIC0gQ29kZSBWYWxpZGF0aW9uJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTM2NzAnLFxuICAgIHN0YXR1czogJ1JldmlldycsXG4gICAgbWluaW11bUhhcmRmb3JrOiAnbG9uZG9uJyxcbiAgICByZXF1aXJlZEVJUHM6IFszNTQwXSxcbiAgICBnYXNDb25maWc6IHt9LFxuICAgIGdhc1ByaWNlczoge30sXG4gICAgdm06IHt9LFxuICAgIHBvdzoge30sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9MzY3MC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3670.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3675.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3675.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-3675',\n    number: 3675,\n    comment: 'Upgrade consensus to Proof-of-Stake',\n    url: 'https://eips.ethereum.org/EIPS/eip-3675',\n    status: 'Final',\n    minimumHardfork: 'london',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=3675.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zNjc1LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGlCQUFpQjtBQUNqQixVQUFVO0FBQ1YsV0FBVztBQUNYLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxlaXBzXFwzNjc1LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnRUlQLTM2NzUnLFxuICAgIG51bWJlcjogMzY3NSxcbiAgICBjb21tZW50OiAnVXBncmFkZSBjb25zZW5zdXMgdG8gUHJvb2Ytb2YtU3Rha2UnLFxuICAgIHVybDogJ2h0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMzY3NScsXG4gICAgc3RhdHVzOiAnRmluYWwnLFxuICAgIG1pbmltdW1IYXJkZm9yazogJ2xvbmRvbicsXG4gICAgcmVxdWlyZWRFSVBzOiBbXSxcbiAgICBnYXNDb25maWc6IHt9LFxuICAgIGdhc1ByaWNlczoge30sXG4gICAgdm06IHt9LFxuICAgIHBvdzoge30sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9MzY3NS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3675.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3855.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3855.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-3855',\n    number: 3855,\n    comment: 'PUSH0 instruction',\n    url: 'https://eips.ethereum.org/EIPS/eip-3855',\n    status: 'Review',\n    minimumHardfork: 'chainstart',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {\n        push0: {\n            v: 2,\n            d: 'Base fee of the PUSH0 opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=3855.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zODU1LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxVQUFVO0FBQ1YsV0FBVztBQUNYLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxlaXBzXFwzODU1LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnRUlQLTM4NTUnLFxuICAgIG51bWJlcjogMzg1NSxcbiAgICBjb21tZW50OiAnUFVTSDAgaW5zdHJ1Y3Rpb24nLFxuICAgIHVybDogJ2h0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMzg1NScsXG4gICAgc3RhdHVzOiAnUmV2aWV3JyxcbiAgICBtaW5pbXVtSGFyZGZvcms6ICdjaGFpbnN0YXJ0JyxcbiAgICByZXF1aXJlZEVJUHM6IFtdLFxuICAgIGdhc0NvbmZpZzoge30sXG4gICAgZ2FzUHJpY2VzOiB7XG4gICAgICAgIHB1c2gwOiB7XG4gICAgICAgICAgICB2OiAyLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBQVVNIMCBvcGNvZGUnLFxuICAgICAgICB9LFxuICAgIH0sXG4gICAgdm06IHt9LFxuICAgIHBvdzoge30sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Mzg1NS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3855.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3860.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/3860.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-3860',\n    number: 3860,\n    comment: 'Limit and meter initcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-3860',\n    status: 'Review',\n    minimumHardfork: 'spuriousDragon',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {\n        initCodeWordCost: {\n            v: 2,\n            d: 'Gas to pay for each word (32 bytes) of initcode when creating a contract',\n        },\n    },\n    vm: {\n        maxInitCodeSize: {\n            v: 49152,\n            d: 'Maximum length of initialization code when creating a contract',\n        },\n    },\n    pow: {},\n});\n//# sourceMappingURL=3860.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy8zODYwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsV0FBVztBQUNYLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxlaXBzXFwzODYwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnRUlQLTM4NjAnLFxuICAgIG51bWJlcjogMzg2MCxcbiAgICBjb21tZW50OiAnTGltaXQgYW5kIG1ldGVyIGluaXRjb2RlJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTM4NjAnLFxuICAgIHN0YXR1czogJ1JldmlldycsXG4gICAgbWluaW11bUhhcmRmb3JrOiAnc3B1cmlvdXNEcmFnb24nLFxuICAgIHJlcXVpcmVkRUlQczogW10sXG4gICAgZ2FzQ29uZmlnOiB7fSxcbiAgICBnYXNQcmljZXM6IHtcbiAgICAgICAgaW5pdENvZGVXb3JkQ29zdDoge1xuICAgICAgICAgICAgdjogMixcbiAgICAgICAgICAgIGQ6ICdHYXMgdG8gcGF5IGZvciBlYWNoIHdvcmQgKDMyIGJ5dGVzKSBvZiBpbml0Y29kZSB3aGVuIGNyZWF0aW5nIGEgY29udHJhY3QnLFxuICAgICAgICB9LFxuICAgIH0sXG4gICAgdm06IHtcbiAgICAgICAgbWF4SW5pdENvZGVTaXplOiB7XG4gICAgICAgICAgICB2OiA0OTE1MixcbiAgICAgICAgICAgIGQ6ICdNYXhpbXVtIGxlbmd0aCBvZiBpbml0aWFsaXphdGlvbiBjb2RlIHdoZW4gY3JlYXRpbmcgYSBjb250cmFjdCcsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBwb3c6IHt9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPTM4NjAuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3860.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/4345.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/4345.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-4345',\n    number: 4345,\n    comment: 'Difficulty Bomb Delay to June 2022',\n    url: 'https://eips.ethereum.org/EIPS/eip-4345',\n    status: 'Final',\n    minimumHardfork: 'london',\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {\n        difficultyBombDelay: {\n            v: 10700000,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n});\n//# sourceMappingURL=4345.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy80MzQ1LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixpQkFBaUI7QUFDakIsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcZWlwc1xcNDM0NS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ0VJUC00MzQ1JyxcbiAgICBudW1iZXI6IDQzNDUsXG4gICAgY29tbWVudDogJ0RpZmZpY3VsdHkgQm9tYiBEZWxheSB0byBKdW5lIDIwMjInLFxuICAgIHVybDogJ2h0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtNDM0NScsXG4gICAgc3RhdHVzOiAnRmluYWwnLFxuICAgIG1pbmltdW1IYXJkZm9yazogJ2xvbmRvbicsXG4gICAgZ2FzQ29uZmlnOiB7fSxcbiAgICBnYXNQcmljZXM6IHt9LFxuICAgIHZtOiB7fSxcbiAgICBwb3c6IHtcbiAgICAgICAgZGlmZmljdWx0eUJvbWJEZWxheToge1xuICAgICAgICAgICAgdjogMTA3MDAwMDAsXG4gICAgICAgICAgICBkOiAndGhlIGFtb3VudCBvZiBibG9ja3MgdG8gZGVsYXkgdGhlIGRpZmZpY3VsdHkgYm9tYiB3aXRoJyxcbiAgICAgICAgfSxcbiAgICB9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPTQzNDUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/4345.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/4399.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/4399.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-4399',\n    number: 4399,\n    comment: 'Supplant DIFFICULTY opcode with PREVRANDAO',\n    url: 'https://eips.ethereum.org/EIPS/eip-4399',\n    status: 'Review',\n    minimumHardfork: 'london',\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=4399.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy80Mzk5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGlCQUFpQjtBQUNqQixVQUFVO0FBQ1YsV0FBVztBQUNYLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxlaXBzXFw0Mzk5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnRUlQLTQzOTknLFxuICAgIG51bWJlcjogNDM5OSxcbiAgICBjb21tZW50OiAnU3VwcGxhbnQgRElGRklDVUxUWSBvcGNvZGUgd2l0aCBQUkVWUkFOREFPJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTQzOTknLFxuICAgIHN0YXR1czogJ1JldmlldycsXG4gICAgbWluaW11bUhhcmRmb3JrOiAnbG9uZG9uJyxcbiAgICByZXF1aXJlZEVJUHM6IFtdLFxuICAgIGdhc0NvbmZpZzoge30sXG4gICAgZ2FzUHJpY2VzOiB7fSxcbiAgICB2bToge30sXG4gICAgcG93OiB7fSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD00Mzk5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/4399.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/5133.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/5133.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'EIP-5133',\n    number: 5133,\n    comment: 'Delaying Difficulty Bomb to mid-September 2022',\n    url: 'https://eips.ethereum.org/EIPS/eip-5133',\n    status: 'Draft',\n    minimumHardfork: 'grayGlacier',\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {\n        difficultyBombDelay: {\n            v: 11400000,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n});\n//# sourceMappingURL=5133.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy81MTMzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixpQkFBaUI7QUFDakIsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcZWlwc1xcNTEzMy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ0VJUC01MTMzJyxcbiAgICBudW1iZXI6IDUxMzMsXG4gICAgY29tbWVudDogJ0RlbGF5aW5nIERpZmZpY3VsdHkgQm9tYiB0byBtaWQtU2VwdGVtYmVyIDIwMjInLFxuICAgIHVybDogJ2h0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtNTEzMycsXG4gICAgc3RhdHVzOiAnRHJhZnQnLFxuICAgIG1pbmltdW1IYXJkZm9yazogJ2dyYXlHbGFjaWVyJyxcbiAgICBnYXNDb25maWc6IHt9LFxuICAgIGdhc1ByaWNlczoge30sXG4gICAgdm06IHt9LFxuICAgIHBvdzoge1xuICAgICAgICBkaWZmaWN1bHR5Qm9tYkRlbGF5OiB7XG4gICAgICAgICAgICB2OiAxMTQwMDAwMCxcbiAgICAgICAgICAgIGQ6ICd0aGUgYW1vdW50IG9mIGJsb2NrcyB0byBkZWxheSB0aGUgZGlmZmljdWx0eSBib21iIHdpdGgnLFxuICAgICAgICB9LFxuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9NTEzMy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/5133.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/eips/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EIPs: () => (/* binding */ EIPs)\n/* harmony export */ });\n/* harmony import */ var _1153_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./1153.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/1153.js\");\n/* harmony import */ var _1559_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./1559.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/1559.js\");\n/* harmony import */ var _2315_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./2315.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2315.js\");\n/* harmony import */ var _2537_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2537.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2537.js\");\n/* harmony import */ var _2565_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./2565.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2565.js\");\n/* harmony import */ var _2718_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./2718.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2718.js\");\n/* harmony import */ var _2929_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./2929.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2929.js\");\n/* harmony import */ var _2930_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./2930.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/2930.js\");\n/* harmony import */ var _3198_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./3198.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3198.js\");\n/* harmony import */ var _3529_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./3529.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3529.js\");\n/* harmony import */ var _3540_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./3540.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3540.js\");\n/* harmony import */ var _3541_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./3541.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3541.js\");\n/* harmony import */ var _3554_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./3554.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3554.js\");\n/* harmony import */ var _3607_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./3607.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3607.js\");\n/* harmony import */ var _3651_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./3651.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3651.js\");\n/* harmony import */ var _3670_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./3670.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3670.js\");\n/* harmony import */ var _3675_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./3675.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3675.js\");\n/* harmony import */ var _3855_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./3855.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3855.js\");\n/* harmony import */ var _3860_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./3860.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/3860.js\");\n/* harmony import */ var _4345_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./4345.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/4345.js\");\n/* harmony import */ var _4399_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./4399.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/4399.js\");\n/* harmony import */ var _5133_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./5133.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/5133.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst EIPs = {\n    1153: _1153_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    1559: _1559_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    2315: _2315_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    2537: _2537_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    2565: _2565_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    2718: _2718_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    2929: _2929_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    2930: _2930_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n    3198: _3198_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n    3529: _3529_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n    3540: _3540_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n    3541: _3541_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n    3554: _3554_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n    3607: _3607_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n    3651: _3651_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n    3670: _3670_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n    3675: _3675_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\n    3855: _3855_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"],\n    3860: _3860_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"],\n    4345: _4345_js__WEBPACK_IMPORTED_MODULE_19__[\"default\"],\n    4399: _4399_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"],\n    5133: _5133_js__WEBPACK_IMPORTED_MODULE_21__[\"default\"],\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZWlwcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDOEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDdkI7QUFDUCxVQUFVLGdEQUFLO0FBQ2YsVUFBVSxnREFBSztBQUNmLFVBQVUsZ0RBQUs7QUFDZixVQUFVLGdEQUFLO0FBQ2YsVUFBVSxnREFBSztBQUNmLFVBQVUsZ0RBQUs7QUFDZixVQUFVLGdEQUFLO0FBQ2YsVUFBVSxnREFBSztBQUNmLFVBQVUsZ0RBQUs7QUFDZixVQUFVLGdEQUFLO0FBQ2YsVUFBVSxpREFBSztBQUNmLFVBQVUsaURBQUs7QUFDZixVQUFVLGlEQUFLO0FBQ2YsVUFBVSxpREFBSztBQUNmLFVBQVUsaURBQUs7QUFDZixVQUFVLGlEQUFLO0FBQ2YsVUFBVSxpREFBSztBQUNmLFVBQVUsaURBQUs7QUFDZixVQUFVLGlEQUFLO0FBQ2YsVUFBVSxpREFBSztBQUNmLFVBQVUsaURBQUs7QUFDZixVQUFVLGlEQUFLO0FBQ2Y7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcZWlwc1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgZTExNTMgZnJvbSAnLi8xMTUzLmpzJztcbmltcG9ydCBlMTU1OSBmcm9tICcuLzE1NTkuanMnO1xuaW1wb3J0IGUyMzE1IGZyb20gJy4vMjMxNS5qcyc7XG5pbXBvcnQgZTI1MzcgZnJvbSAnLi8yNTM3LmpzJztcbmltcG9ydCBlMjU2NSBmcm9tICcuLzI1NjUuanMnO1xuaW1wb3J0IGUyNzE4IGZyb20gJy4vMjcxOC5qcyc7XG5pbXBvcnQgZTI5MjkgZnJvbSAnLi8yOTI5LmpzJztcbmltcG9ydCBlMjkzMCBmcm9tICcuLzI5MzAuanMnO1xuaW1wb3J0IGUzMTk4IGZyb20gJy4vMzE5OC5qcyc7XG5pbXBvcnQgZTM1MjkgZnJvbSAnLi8zNTI5LmpzJztcbmltcG9ydCBlMzU0MCBmcm9tICcuLzM1NDAuanMnO1xuaW1wb3J0IGUzNTQxIGZyb20gJy4vMzU0MS5qcyc7XG5pbXBvcnQgZTM1NTQgZnJvbSAnLi8zNTU0LmpzJztcbmltcG9ydCBlMzYwNyBmcm9tICcuLzM2MDcuanMnO1xuaW1wb3J0IGUzNjUxIGZyb20gJy4vMzY1MS5qcyc7XG5pbXBvcnQgZTM2NzAgZnJvbSAnLi8zNjcwLmpzJztcbmltcG9ydCBlMzY3NSBmcm9tICcuLzM2NzUuanMnO1xuaW1wb3J0IGUzODU1IGZyb20gJy4vMzg1NS5qcyc7XG5pbXBvcnQgZTM4NjAgZnJvbSAnLi8zODYwLmpzJztcbmltcG9ydCBlNDM0NSBmcm9tICcuLzQzNDUuanMnO1xuaW1wb3J0IGU0Mzk5IGZyb20gJy4vNDM5OS5qcyc7XG5pbXBvcnQgZTUxMzMgZnJvbSAnLi81MTMzLmpzJztcbmV4cG9ydCBjb25zdCBFSVBzID0ge1xuICAgIDExNTM6IGUxMTUzLFxuICAgIDE1NTk6IGUxNTU5LFxuICAgIDIzMTU6IGUyMzE1LFxuICAgIDI1Mzc6IGUyNTM3LFxuICAgIDI1NjU6IGUyNTY1LFxuICAgIDI3MTg6IGUyNzE4LFxuICAgIDI5Mjk6IGUyOTI5LFxuICAgIDI5MzA6IGUyOTMwLFxuICAgIDMxOTg6IGUzMTk4LFxuICAgIDM1Mjk6IGUzNTI5LFxuICAgIDM1NDA6IGUzNTQwLFxuICAgIDM1NDE6IGUzNTQxLFxuICAgIDM1NTQ6IGUzNTU0LFxuICAgIDM2MDc6IGUzNjA3LFxuICAgIDM2NTE6IGUzNjUxLFxuICAgIDM2NzA6IGUzNjcwLFxuICAgIDM2NzU6IGUzNjc1LFxuICAgIDM4NTU6IGUzODU1LFxuICAgIDM4NjA6IGUzODYwLFxuICAgIDQzNDU6IGU0MzQ1LFxuICAgIDQzOTk6IGU0Mzk5LFxuICAgIDUxMzM6IGU1MTMzLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/eips/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/enums.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/enums.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chain: () => (/* binding */ Chain),\n/* harmony export */   ConsensusAlgorithm: () => (/* binding */ ConsensusAlgorithm),\n/* harmony export */   ConsensusType: () => (/* binding */ ConsensusType),\n/* harmony export */   CustomChain: () => (/* binding */ CustomChain),\n/* harmony export */   Hardfork: () => (/* binding */ Hardfork)\n/* harmony export */ });\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar Chain;\n(function (Chain) {\n    Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n    Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n    Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain || (Chain = {}));\nvar Hardfork;\n(function (Hardfork) {\n    Hardfork[\"Chainstart\"] = \"chainstart\";\n    Hardfork[\"Homestead\"] = \"homestead\";\n    Hardfork[\"Dao\"] = \"dao\";\n    Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n    Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n    Hardfork[\"Byzantium\"] = \"byzantium\";\n    Hardfork[\"Constantinople\"] = \"constantinople\";\n    Hardfork[\"Petersburg\"] = \"petersburg\";\n    Hardfork[\"Istanbul\"] = \"istanbul\";\n    Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n    Hardfork[\"Berlin\"] = \"berlin\";\n    Hardfork[\"London\"] = \"london\";\n    Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n    Hardfork[\"GrayGlacier\"] = \"grayGlacier\";\n    Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n    Hardfork[\"Merge\"] = \"merge\";\n    Hardfork[\"Shanghai\"] = \"shanghai\";\n    Hardfork[\"ShardingForkDev\"] = \"shardingFork\";\n})(Hardfork || (Hardfork = {}));\nvar ConsensusType;\n(function (ConsensusType) {\n    ConsensusType[\"ProofOfStake\"] = \"pos\";\n    ConsensusType[\"ProofOfWork\"] = \"pow\";\n    ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType || (ConsensusType = {}));\nvar ConsensusAlgorithm;\n(function (ConsensusAlgorithm) {\n    ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n    ConsensusAlgorithm[\"Clique\"] = \"clique\";\n    ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm || (ConsensusAlgorithm = {}));\nvar CustomChain;\n(function (CustomChain) {\n    /**\n     * Polygon (Matic) Mainnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n    /**\n     * Polygon (Matic) Mumbai Testnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n    /**\n     * Arbitrum Rinkeby Testnet\n     *\n     * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n     */\n    CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n    /**\n     * Arbitrum One - mainnet for Arbitrum roll-up\n     *\n     * - [Documentation](https://developer.offchainlabs.com/public-chains)\n     */\n    CustomChain[\"ArbitrumOne\"] = \"arbitrum-one\";\n    /**\n     * xDai EVM sidechain with a native stable token\n     *\n     * - [Documentation](https://www.xdaichain.com/)\n     */\n    CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n    /**\n     * Optimistic Kovan - testnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n    /**\n     * Optimistic Ethereum - mainnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain || (CustomChain = {}));\n//# sourceMappingURL=enums.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vZW51bXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0JBQXNCO0FBQ2hCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRCQUE0QjtBQUN0QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQ0FBc0M7QUFDaEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0RBQWdEO0FBQzFDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGtDQUFrQztBQUNuQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcZW51bXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5leHBvcnQgdmFyIENoYWluO1xuKGZ1bmN0aW9uIChDaGFpbikge1xuICAgIENoYWluW0NoYWluW1wiTWFpbm5ldFwiXSA9IDFdID0gXCJNYWlubmV0XCI7XG4gICAgQ2hhaW5bQ2hhaW5bXCJHb2VybGlcIl0gPSA1XSA9IFwiR29lcmxpXCI7XG4gICAgQ2hhaW5bQ2hhaW5bXCJTZXBvbGlhXCJdID0gMTExNTUxMTFdID0gXCJTZXBvbGlhXCI7XG59KShDaGFpbiB8fCAoQ2hhaW4gPSB7fSkpO1xuZXhwb3J0IHZhciBIYXJkZm9yaztcbihmdW5jdGlvbiAoSGFyZGZvcmspIHtcbiAgICBIYXJkZm9ya1tcIkNoYWluc3RhcnRcIl0gPSBcImNoYWluc3RhcnRcIjtcbiAgICBIYXJkZm9ya1tcIkhvbWVzdGVhZFwiXSA9IFwiaG9tZXN0ZWFkXCI7XG4gICAgSGFyZGZvcmtbXCJEYW9cIl0gPSBcImRhb1wiO1xuICAgIEhhcmRmb3JrW1wiVGFuZ2VyaW5lV2hpc3RsZVwiXSA9IFwidGFuZ2VyaW5lV2hpc3RsZVwiO1xuICAgIEhhcmRmb3JrW1wiU3B1cmlvdXNEcmFnb25cIl0gPSBcInNwdXJpb3VzRHJhZ29uXCI7XG4gICAgSGFyZGZvcmtbXCJCeXphbnRpdW1cIl0gPSBcImJ5emFudGl1bVwiO1xuICAgIEhhcmRmb3JrW1wiQ29uc3RhbnRpbm9wbGVcIl0gPSBcImNvbnN0YW50aW5vcGxlXCI7XG4gICAgSGFyZGZvcmtbXCJQZXRlcnNidXJnXCJdID0gXCJwZXRlcnNidXJnXCI7XG4gICAgSGFyZGZvcmtbXCJJc3RhbmJ1bFwiXSA9IFwiaXN0YW5idWxcIjtcbiAgICBIYXJkZm9ya1tcIk11aXJHbGFjaWVyXCJdID0gXCJtdWlyR2xhY2llclwiO1xuICAgIEhhcmRmb3JrW1wiQmVybGluXCJdID0gXCJiZXJsaW5cIjtcbiAgICBIYXJkZm9ya1tcIkxvbmRvblwiXSA9IFwibG9uZG9uXCI7XG4gICAgSGFyZGZvcmtbXCJBcnJvd0dsYWNpZXJcIl0gPSBcImFycm93R2xhY2llclwiO1xuICAgIEhhcmRmb3JrW1wiR3JheUdsYWNpZXJcIl0gPSBcImdyYXlHbGFjaWVyXCI7XG4gICAgSGFyZGZvcmtbXCJNZXJnZUZvcmtJZFRyYW5zaXRpb25cIl0gPSBcIm1lcmdlRm9ya0lkVHJhbnNpdGlvblwiO1xuICAgIEhhcmRmb3JrW1wiTWVyZ2VcIl0gPSBcIm1lcmdlXCI7XG4gICAgSGFyZGZvcmtbXCJTaGFuZ2hhaVwiXSA9IFwic2hhbmdoYWlcIjtcbiAgICBIYXJkZm9ya1tcIlNoYXJkaW5nRm9ya0RldlwiXSA9IFwic2hhcmRpbmdGb3JrXCI7XG59KShIYXJkZm9yayB8fCAoSGFyZGZvcmsgPSB7fSkpO1xuZXhwb3J0IHZhciBDb25zZW5zdXNUeXBlO1xuKGZ1bmN0aW9uIChDb25zZW5zdXNUeXBlKSB7XG4gICAgQ29uc2Vuc3VzVHlwZVtcIlByb29mT2ZTdGFrZVwiXSA9IFwicG9zXCI7XG4gICAgQ29uc2Vuc3VzVHlwZVtcIlByb29mT2ZXb3JrXCJdID0gXCJwb3dcIjtcbiAgICBDb25zZW5zdXNUeXBlW1wiUHJvb2ZPZkF1dGhvcml0eVwiXSA9IFwicG9hXCI7XG59KShDb25zZW5zdXNUeXBlIHx8IChDb25zZW5zdXNUeXBlID0ge30pKTtcbmV4cG9ydCB2YXIgQ29uc2Vuc3VzQWxnb3JpdGhtO1xuKGZ1bmN0aW9uIChDb25zZW5zdXNBbGdvcml0aG0pIHtcbiAgICBDb25zZW5zdXNBbGdvcml0aG1bXCJFdGhhc2hcIl0gPSBcImV0aGFzaFwiO1xuICAgIENvbnNlbnN1c0FsZ29yaXRobVtcIkNsaXF1ZVwiXSA9IFwiY2xpcXVlXCI7XG4gICAgQ29uc2Vuc3VzQWxnb3JpdGhtW1wiQ2FzcGVyXCJdID0gXCJjYXNwZXJcIjtcbn0pKENvbnNlbnN1c0FsZ29yaXRobSB8fCAoQ29uc2Vuc3VzQWxnb3JpdGhtID0ge30pKTtcbmV4cG9ydCB2YXIgQ3VzdG9tQ2hhaW47XG4oZnVuY3Rpb24gKEN1c3RvbUNoYWluKSB7XG4gICAgLyoqXG4gICAgICogUG9seWdvbiAoTWF0aWMpIE1haW5uZXRcbiAgICAgKlxuICAgICAqIC0gW0RvY3VtZW50YXRpb25dKGh0dHBzOi8vZG9jcy5tYXRpYy5uZXR3b3JrL2RvY3MvZGV2ZWxvcC9uZXR3b3JrLWRldGFpbHMvbmV0d29yaylcbiAgICAgKi9cbiAgICBDdXN0b21DaGFpbltcIlBvbHlnb25NYWlubmV0XCJdID0gXCJwb2x5Z29uLW1haW5uZXRcIjtcbiAgICAvKipcbiAgICAgKiBQb2x5Z29uIChNYXRpYykgTXVtYmFpIFRlc3RuZXRcbiAgICAgKlxuICAgICAqIC0gW0RvY3VtZW50YXRpb25dKGh0dHBzOi8vZG9jcy5tYXRpYy5uZXR3b3JrL2RvY3MvZGV2ZWxvcC9uZXR3b3JrLWRldGFpbHMvbmV0d29yaylcbiAgICAgKi9cbiAgICBDdXN0b21DaGFpbltcIlBvbHlnb25NdW1iYWlcIl0gPSBcInBvbHlnb24tbXVtYmFpXCI7XG4gICAgLyoqXG4gICAgICogQXJiaXRydW0gUmlua2VieSBUZXN0bmV0XG4gICAgICpcbiAgICAgKiAtIFtEb2N1bWVudGF0aW9uXShodHRwczovL2RldmVsb3Blci5vZmZjaGFpbmxhYnMuY29tL2RvY3MvcHVibGljX3Rlc3RuZXQpXG4gICAgICovXG4gICAgQ3VzdG9tQ2hhaW5bXCJBcmJpdHJ1bVJpbmtlYnlUZXN0bmV0XCJdID0gXCJhcmJpdHJ1bS1yaW5rZWJ5LXRlc3RuZXRcIjtcbiAgICAvKipcbiAgICAgKiBBcmJpdHJ1bSBPbmUgLSBtYWlubmV0IGZvciBBcmJpdHJ1bSByb2xsLXVwXG4gICAgICpcbiAgICAgKiAtIFtEb2N1bWVudGF0aW9uXShodHRwczovL2RldmVsb3Blci5vZmZjaGFpbmxhYnMuY29tL3B1YmxpYy1jaGFpbnMpXG4gICAgICovXG4gICAgQ3VzdG9tQ2hhaW5bXCJBcmJpdHJ1bU9uZVwiXSA9IFwiYXJiaXRydW0tb25lXCI7XG4gICAgLyoqXG4gICAgICogeERhaSBFVk0gc2lkZWNoYWluIHdpdGggYSBuYXRpdmUgc3RhYmxlIHRva2VuXG4gICAgICpcbiAgICAgKiAtIFtEb2N1bWVudGF0aW9uXShodHRwczovL3d3dy54ZGFpY2hhaW4uY29tLylcbiAgICAgKi9cbiAgICBDdXN0b21DaGFpbltcInhEYWlDaGFpblwiXSA9IFwieC1kYWktY2hhaW5cIjtcbiAgICAvKipcbiAgICAgKiBPcHRpbWlzdGljIEtvdmFuIC0gdGVzdG5ldCBmb3IgT3B0aW1pc20gcm9sbC11cFxuICAgICAqXG4gICAgICogLSBbRG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9jb21tdW5pdHkub3B0aW1pc20uaW8vZG9jcy9kZXZlbG9wZXJzL3R1dG9yaWFscy5odG1sKVxuICAgICAqL1xuICAgIEN1c3RvbUNoYWluW1wiT3B0aW1pc3RpY0tvdmFuXCJdID0gXCJvcHRpbWlzdGljLWtvdmFuXCI7XG4gICAgLyoqXG4gICAgICogT3B0aW1pc3RpYyBFdGhlcmV1bSAtIG1haW5uZXQgZm9yIE9wdGltaXNtIHJvbGwtdXBcbiAgICAgKlxuICAgICAqIC0gW0RvY3VtZW50YXRpb25dKGh0dHBzOi8vY29tbXVuaXR5Lm9wdGltaXNtLmlvL2RvY3MvZGV2ZWxvcGVycy90dXRvcmlhbHMuaHRtbClcbiAgICAgKi9cbiAgICBDdXN0b21DaGFpbltcIk9wdGltaXN0aWNFdGhlcmV1bVwiXSA9IFwib3B0aW1pc3RpYy1ldGhlcmV1bVwiO1xufSkoQ3VzdG9tQ2hhaW4gfHwgKEN1c3RvbUNoYWluID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudW1zLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/enums.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/arrowGlacier.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/arrowGlacier.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'arrowGlacier',\n    comment: 'HF to delay the difficulty bomb',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md',\n    status: 'Final',\n    eips: [4345],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=arrowGlacier.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2Fycm93R2xhY2llci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGlCQUFpQjtBQUNqQixVQUFVO0FBQ1YsV0FBVztBQUNYLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxoYXJkZm9ya3NcXGFycm93R2xhY2llci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ2Fycm93R2xhY2llcicsXG4gICAgY29tbWVudDogJ0hGIHRvIGRlbGF5IHRoZSBkaWZmaWN1bHR5IGJvbWInLFxuICAgIHVybDogJ2h0dHBzOi8vZ2l0aHViLmNvbS9ldGhlcmV1bS9leGVjdXRpb24tc3BlY3MvYmxvYi9tYXN0ZXIvbmV0d29yay11cGdyYWRlcy9tYWlubmV0LXVwZ3JhZGVzL2Fycm93LWdsYWNpZXIubWQnLFxuICAgIHN0YXR1czogJ0ZpbmFsJyxcbiAgICBlaXBzOiBbNDM0NV0sXG4gICAgZ2FzQ29uZmlnOiB7fSxcbiAgICBnYXNQcmljZXM6IHt9LFxuICAgIHZtOiB7fSxcbiAgICBwb3c6IHt9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFycm93R2xhY2llci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/arrowGlacier.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/berlin.js":
/*!***************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/berlin.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'berlin',\n    comment: 'HF targeted for July 2020 following the Muir Glacier HF',\n    url: 'https://eips.ethereum.org/EIPS/eip-2070',\n    status: 'Final',\n    eips: [2565, 2929, 2718, 2930],\n});\n//# sourceMappingURL=berlin.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2Jlcmxpbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFxjb21tb25cXGhhcmRmb3Jrc1xcYmVybGluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnYmVybGluJyxcbiAgICBjb21tZW50OiAnSEYgdGFyZ2V0ZWQgZm9yIEp1bHkgMjAyMCBmb2xsb3dpbmcgdGhlIE11aXIgR2xhY2llciBIRicsXG4gICAgdXJsOiAnaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0yMDcwJyxcbiAgICBzdGF0dXM6ICdGaW5hbCcsXG4gICAgZWlwczogWzI1NjUsIDI5MjksIDI3MTgsIDI5MzBdLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJlcmxpbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/berlin.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/byzantium.js":
/*!******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/byzantium.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'byzantium',\n    comment: 'Hardfork with new precompiles, instructions and other protocol changes',\n    url: 'https://eips.ethereum.org/EIPS/eip-609',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        modexpGquaddivisor: {\n            v: 20,\n            d: 'Gquaddivisor from modexp precompile for gas calculation',\n        },\n        ecAdd: {\n            v: 500,\n            d: 'Gas costs for curve addition precompile',\n        },\n        ecMul: {\n            v: 40000,\n            d: 'Gas costs for curve multiplication precompile',\n        },\n        ecPairing: {\n            v: 100000,\n            d: 'Base gas costs for curve pairing precompile',\n        },\n        ecPairingWord: {\n            v: 80000,\n            d: 'Gas costs regarding curve pairing precompile input length',\n        },\n        revert: {\n            v: 0,\n            d: 'Base fee of the REVERT opcode',\n        },\n        staticcall: {\n            v: 700,\n            d: 'Base fee of the STATICCALL opcode',\n        },\n        returndatasize: {\n            v: 2,\n            d: 'Base fee of the RETURNDATASIZE opcode',\n        },\n        returndatacopy: {\n            v: 3,\n            d: 'Base fee of the RETURNDATACOPY opcode',\n        },\n    },\n    vm: {},\n    pow: {\n        minerReward: {\n            v: '3000000000000000000',\n            d: 'the amount a miner get rewarded for mining a block',\n        },\n        difficultyBombDelay: {\n            v: 3000000,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n});\n//# sourceMappingURL=byzantium.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2J5emFudGl1bS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcaGFyZGZvcmtzXFxieXphbnRpdW0uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIG5hbWU6ICdieXphbnRpdW0nLFxuICAgIGNvbW1lbnQ6ICdIYXJkZm9yayB3aXRoIG5ldyBwcmVjb21waWxlcywgaW5zdHJ1Y3Rpb25zIGFuZCBvdGhlciBwcm90b2NvbCBjaGFuZ2VzJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTYwOScsXG4gICAgc3RhdHVzOiAnRmluYWwnLFxuICAgIGdhc0NvbmZpZzoge30sXG4gICAgZ2FzUHJpY2VzOiB7XG4gICAgICAgIG1vZGV4cEdxdWFkZGl2aXNvcjoge1xuICAgICAgICAgICAgdjogMjAsXG4gICAgICAgICAgICBkOiAnR3F1YWRkaXZpc29yIGZyb20gbW9kZXhwIHByZWNvbXBpbGUgZm9yIGdhcyBjYWxjdWxhdGlvbicsXG4gICAgICAgIH0sXG4gICAgICAgIGVjQWRkOiB7XG4gICAgICAgICAgICB2OiA1MDAsXG4gICAgICAgICAgICBkOiAnR2FzIGNvc3RzIGZvciBjdXJ2ZSBhZGRpdGlvbiBwcmVjb21waWxlJyxcbiAgICAgICAgfSxcbiAgICAgICAgZWNNdWw6IHtcbiAgICAgICAgICAgIHY6IDQwMDAwLFxuICAgICAgICAgICAgZDogJ0dhcyBjb3N0cyBmb3IgY3VydmUgbXVsdGlwbGljYXRpb24gcHJlY29tcGlsZScsXG4gICAgICAgIH0sXG4gICAgICAgIGVjUGFpcmluZzoge1xuICAgICAgICAgICAgdjogMTAwMDAwLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZ2FzIGNvc3RzIGZvciBjdXJ2ZSBwYWlyaW5nIHByZWNvbXBpbGUnLFxuICAgICAgICB9LFxuICAgICAgICBlY1BhaXJpbmdXb3JkOiB7XG4gICAgICAgICAgICB2OiA4MDAwMCxcbiAgICAgICAgICAgIGQ6ICdHYXMgY29zdHMgcmVnYXJkaW5nIGN1cnZlIHBhaXJpbmcgcHJlY29tcGlsZSBpbnB1dCBsZW5ndGgnLFxuICAgICAgICB9LFxuICAgICAgICByZXZlcnQ6IHtcbiAgICAgICAgICAgIHY6IDAsXG4gICAgICAgICAgICBkOiAnQmFzZSBmZWUgb2YgdGhlIFJFVkVSVCBvcGNvZGUnLFxuICAgICAgICB9LFxuICAgICAgICBzdGF0aWNjYWxsOiB7XG4gICAgICAgICAgICB2OiA3MDAsXG4gICAgICAgICAgICBkOiAnQmFzZSBmZWUgb2YgdGhlIFNUQVRJQ0NBTEwgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICAgICAgcmV0dXJuZGF0YXNpemU6IHtcbiAgICAgICAgICAgIHY6IDIsXG4gICAgICAgICAgICBkOiAnQmFzZSBmZWUgb2YgdGhlIFJFVFVSTkRBVEFTSVpFIG9wY29kZScsXG4gICAgICAgIH0sXG4gICAgICAgIHJldHVybmRhdGFjb3B5OiB7XG4gICAgICAgICAgICB2OiAzLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBSRVRVUk5EQVRBQ09QWSBvcGNvZGUnLFxuICAgICAgICB9LFxuICAgIH0sXG4gICAgdm06IHt9LFxuICAgIHBvdzoge1xuICAgICAgICBtaW5lclJld2FyZDoge1xuICAgICAgICAgICAgdjogJzMwMDAwMDAwMDAwMDAwMDAwMDAnLFxuICAgICAgICAgICAgZDogJ3RoZSBhbW91bnQgYSBtaW5lciBnZXQgcmV3YXJkZWQgZm9yIG1pbmluZyBhIGJsb2NrJyxcbiAgICAgICAgfSxcbiAgICAgICAgZGlmZmljdWx0eUJvbWJEZWxheToge1xuICAgICAgICAgICAgdjogMzAwMDAwMCxcbiAgICAgICAgICAgIGQ6ICd0aGUgYW1vdW50IG9mIGJsb2NrcyB0byBkZWxheSB0aGUgZGlmZmljdWx0eSBib21iIHdpdGgnLFxuICAgICAgICB9LFxuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ynl6YW50aXVtLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/byzantium.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/chainstart.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/chainstart.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'chainstart',\n    comment: 'Start of the Ethereum main chain',\n    url: '',\n    status: '',\n    gasConfig: {\n        minGasLimit: {\n            v: 5000,\n            d: 'Minimum the gas limit may ever be',\n        },\n        gasLimitBoundDivisor: {\n            v: 1024,\n            d: 'The bound divisor of the gas limit, used in update calculations',\n        },\n        maxRefundQuotient: {\n            v: 2,\n            d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n        },\n    },\n    gasPrices: {\n        base: {\n            v: 2,\n            d: 'Gas base cost, used e.g. for ChainID opcode (Istanbul)',\n        },\n        tierStep: {\n            v: [0, 2, 3, 5, 8, 10, 20],\n            d: 'Once per operation, for a selection of them',\n        },\n        exp: {\n            v: 10,\n            d: 'Base fee of the EXP opcode',\n        },\n        expByte: {\n            v: 10,\n            d: 'Times ceil(log256(exponent)) for the EXP instruction',\n        },\n        sha3: {\n            v: 30,\n            d: 'Base fee of the SHA3 opcode',\n        },\n        sha3Word: {\n            v: 6,\n            d: \"Once per word of the SHA3 operation's data\",\n        },\n        sload: {\n            v: 50,\n            d: 'Base fee of the SLOAD opcode',\n        },\n        sstoreSet: {\n            v: 20000,\n            d: 'Once per SSTORE operation if the zeroness changes from zero',\n        },\n        sstoreReset: {\n            v: 5000,\n            d: 'Once per SSTORE operation if the zeroness does not change from zero',\n        },\n        sstoreRefund: {\n            v: 15000,\n            d: 'Once per SSTORE operation if the zeroness changes to zero',\n        },\n        jumpdest: {\n            v: 1,\n            d: 'Base fee of the JUMPDEST opcode',\n        },\n        log: {\n            v: 375,\n            d: 'Base fee of the LOG opcode',\n        },\n        logData: {\n            v: 8,\n            d: \"Per byte in a LOG* operation's data\",\n        },\n        logTopic: {\n            v: 375,\n            d: 'Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas',\n        },\n        create: {\n            v: 32000,\n            d: 'Base fee of the CREATE opcode',\n        },\n        call: {\n            v: 40,\n            d: 'Base fee of the CALL opcode',\n        },\n        callStipend: {\n            v: 2300,\n            d: 'Free gas given at beginning of call',\n        },\n        callValueTransfer: {\n            v: 9000,\n            d: 'Paid for CALL when the value transfor is non-zero',\n        },\n        callNewAccount: {\n            v: 25000,\n            d: \"Paid for CALL when the destination address didn't exist prior\",\n        },\n        selfdestructRefund: {\n            v: 24000,\n            d: 'Refunded following a selfdestruct operation',\n        },\n        memory: {\n            v: 3,\n            d: 'Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL',\n        },\n        quadCoeffDiv: {\n            v: 512,\n            d: 'Divisor for the quadratic particle of the memory cost equation',\n        },\n        createData: {\n            v: 200,\n            d: '',\n        },\n        tx: {\n            v: 21000,\n            d: 'Per transaction. NOTE: Not payable on data of calls between transactions',\n        },\n        txCreation: {\n            v: 32000,\n            d: 'The cost of creating a contract via tx',\n        },\n        txDataZero: {\n            v: 4,\n            d: 'Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions',\n        },\n        txDataNonZero: {\n            v: 68,\n            d: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',\n        },\n        copy: {\n            v: 3,\n            d: 'Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added',\n        },\n        ecRecover: {\n            v: 3000,\n            d: '',\n        },\n        sha256: {\n            v: 60,\n            d: '',\n        },\n        sha256Word: {\n            v: 12,\n            d: '',\n        },\n        ripemd160: {\n            v: 600,\n            d: '',\n        },\n        ripemd160Word: {\n            v: 120,\n            d: '',\n        },\n        identity: {\n            v: 15,\n            d: '',\n        },\n        identityWord: {\n            v: 3,\n            d: '',\n        },\n        stop: {\n            v: 0,\n            d: 'Base fee of the STOP opcode',\n        },\n        add: {\n            v: 3,\n            d: 'Base fee of the ADD opcode',\n        },\n        mul: {\n            v: 5,\n            d: 'Base fee of the MUL opcode',\n        },\n        sub: {\n            v: 3,\n            d: 'Base fee of the SUB opcode',\n        },\n        div: {\n            v: 5,\n            d: 'Base fee of the DIV opcode',\n        },\n        sdiv: {\n            v: 5,\n            d: 'Base fee of the SDIV opcode',\n        },\n        mod: {\n            v: 5,\n            d: 'Base fee of the MOD opcode',\n        },\n        smod: {\n            v: 5,\n            d: 'Base fee of the SMOD opcode',\n        },\n        addmod: {\n            v: 8,\n            d: 'Base fee of the ADDMOD opcode',\n        },\n        mulmod: {\n            v: 8,\n            d: 'Base fee of the MULMOD opcode',\n        },\n        signextend: {\n            v: 5,\n            d: 'Base fee of the SIGNEXTEND opcode',\n        },\n        lt: {\n            v: 3,\n            d: 'Base fee of the LT opcode',\n        },\n        gt: {\n            v: 3,\n            d: 'Base fee of the GT opcode',\n        },\n        slt: {\n            v: 3,\n            d: 'Base fee of the SLT opcode',\n        },\n        sgt: {\n            v: 3,\n            d: 'Base fee of the SGT opcode',\n        },\n        eq: {\n            v: 3,\n            d: 'Base fee of the EQ opcode',\n        },\n        iszero: {\n            v: 3,\n            d: 'Base fee of the ISZERO opcode',\n        },\n        and: {\n            v: 3,\n            d: 'Base fee of the AND opcode',\n        },\n        or: {\n            v: 3,\n            d: 'Base fee of the OR opcode',\n        },\n        xor: {\n            v: 3,\n            d: 'Base fee of the XOR opcode',\n        },\n        not: {\n            v: 3,\n            d: 'Base fee of the NOT opcode',\n        },\n        byte: {\n            v: 3,\n            d: 'Base fee of the BYTE opcode',\n        },\n        address: {\n            v: 2,\n            d: 'Base fee of the ADDRESS opcode',\n        },\n        balance: {\n            v: 20,\n            d: 'Base fee of the BALANCE opcode',\n        },\n        origin: {\n            v: 2,\n            d: 'Base fee of the ORIGIN opcode',\n        },\n        caller: {\n            v: 2,\n            d: 'Base fee of the CALLER opcode',\n        },\n        callvalue: {\n            v: 2,\n            d: 'Base fee of the CALLVALUE opcode',\n        },\n        calldataload: {\n            v: 3,\n            d: 'Base fee of the CALLDATALOAD opcode',\n        },\n        calldatasize: {\n            v: 2,\n            d: 'Base fee of the CALLDATASIZE opcode',\n        },\n        calldatacopy: {\n            v: 3,\n            d: 'Base fee of the CALLDATACOPY opcode',\n        },\n        codesize: {\n            v: 2,\n            d: 'Base fee of the CODESIZE opcode',\n        },\n        codecopy: {\n            v: 3,\n            d: 'Base fee of the CODECOPY opcode',\n        },\n        gasprice: {\n            v: 2,\n            d: 'Base fee of the GASPRICE opcode',\n        },\n        extcodesize: {\n            v: 20,\n            d: 'Base fee of the EXTCODESIZE opcode',\n        },\n        extcodecopy: {\n            v: 20,\n            d: 'Base fee of the EXTCODECOPY opcode',\n        },\n        blockhash: {\n            v: 20,\n            d: 'Base fee of the BLOCKHASH opcode',\n        },\n        coinbase: {\n            v: 2,\n            d: 'Base fee of the COINBASE opcode',\n        },\n        timestamp: {\n            v: 2,\n            d: 'Base fee of the TIMESTAMP opcode',\n        },\n        number: {\n            v: 2,\n            d: 'Base fee of the NUMBER opcode',\n        },\n        difficulty: {\n            v: 2,\n            d: 'Base fee of the DIFFICULTY opcode',\n        },\n        gaslimit: {\n            v: 2,\n            d: 'Base fee of the GASLIMIT opcode',\n        },\n        pop: {\n            v: 2,\n            d: 'Base fee of the POP opcode',\n        },\n        mload: {\n            v: 3,\n            d: 'Base fee of the MLOAD opcode',\n        },\n        mstore: {\n            v: 3,\n            d: 'Base fee of the MSTORE opcode',\n        },\n        mstore8: {\n            v: 3,\n            d: 'Base fee of the MSTORE8 opcode',\n        },\n        sstore: {\n            v: 0,\n            d: 'Base fee of the SSTORE opcode',\n        },\n        jump: {\n            v: 8,\n            d: 'Base fee of the JUMP opcode',\n        },\n        jumpi: {\n            v: 10,\n            d: 'Base fee of the JUMPI opcode',\n        },\n        pc: {\n            v: 2,\n            d: 'Base fee of the PC opcode',\n        },\n        msize: {\n            v: 2,\n            d: 'Base fee of the MSIZE opcode',\n        },\n        gas: {\n            v: 2,\n            d: 'Base fee of the GAS opcode',\n        },\n        push: {\n            v: 3,\n            d: 'Base fee of the PUSH opcode',\n        },\n        dup: {\n            v: 3,\n            d: 'Base fee of the DUP opcode',\n        },\n        swap: {\n            v: 3,\n            d: 'Base fee of the SWAP opcode',\n        },\n        callcode: {\n            v: 40,\n            d: 'Base fee of the CALLCODE opcode',\n        },\n        return: {\n            v: 0,\n            d: 'Base fee of the RETURN opcode',\n        },\n        invalid: {\n            v: 0,\n            d: 'Base fee of the INVALID opcode',\n        },\n        selfdestruct: {\n            v: 0,\n            d: 'Base fee of the SELFDESTRUCT opcode',\n        },\n    },\n    vm: {\n        stackLimit: {\n            v: 1024,\n            d: 'Maximum size of VM stack allowed',\n        },\n        callCreateDepth: {\n            v: 1024,\n            d: 'Maximum depth of call/create stack',\n        },\n        maxExtraDataSize: {\n            v: 32,\n            d: 'Maximum size extra data may be after Genesis',\n        },\n    },\n    pow: {\n        minimumDifficulty: {\n            v: 131072,\n            d: 'The minimum that the difficulty may ever be',\n        },\n        difficultyBoundDivisor: {\n            v: 2048,\n            d: 'The bound divisor of the difficulty, used in the update calculations',\n        },\n        durationLimit: {\n            v: 13,\n            d: 'The decision boundary on the blocktime duration used to determine whether difficulty should go up or not',\n        },\n        epochDuration: {\n            v: 30000,\n            d: 'Duration between proof-of-work epochs',\n        },\n        timebombPeriod: {\n            v: 100000,\n            d: 'Exponential difficulty timebomb period',\n        },\n        minerReward: {\n            v: '5000000000000000000',\n            d: 'the amount a miner get rewarded for mining a block',\n        },\n        difficultyBombDelay: {\n            v: 0,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n});\n//# sourceMappingURL=chainstart.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/chainstart.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/constantinople.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/constantinople.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'constantinople',\n    comment: 'Postponed hardfork including EIP-1283 (SSTORE gas metering changes)',\n    url: 'https://eips.ethereum.org/EIPS/eip-1013',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        netSstoreNoopGas: {\n            v: 200,\n            d: \"Once per SSTORE operation if the value doesn't change\",\n        },\n        netSstoreInitGas: {\n            v: 20000,\n            d: 'Once per SSTORE operation from clean zero',\n        },\n        netSstoreCleanGas: {\n            v: 5000,\n            d: 'Once per SSTORE operation from clean non-zero',\n        },\n        netSstoreDirtyGas: {\n            v: 200,\n            d: 'Once per SSTORE operation from dirty',\n        },\n        netSstoreClearRefund: {\n            v: 15000,\n            d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n        },\n        netSstoreResetRefund: {\n            v: 4800,\n            d: 'Once per SSTORE operation for resetting to the original non-zero value',\n        },\n        netSstoreResetClearRefund: {\n            v: 19800,\n            d: 'Once per SSTORE operation for resetting to the original zero value',\n        },\n        shl: {\n            v: 3,\n            d: 'Base fee of the SHL opcode',\n        },\n        shr: {\n            v: 3,\n            d: 'Base fee of the SHR opcode',\n        },\n        sar: {\n            v: 3,\n            d: 'Base fee of the SAR opcode',\n        },\n        extcodehash: {\n            v: 400,\n            d: 'Base fee of the EXTCODEHASH opcode',\n        },\n        create2: {\n            v: 32000,\n            d: 'Base fee of the CREATE2 opcode',\n        },\n    },\n    vm: {},\n    pow: {\n        minerReward: {\n            v: '2000000000000000000',\n            d: 'The amount a miner gets rewarded for mining a block',\n        },\n        difficultyBombDelay: {\n            v: 5000000,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n});\n//# sourceMappingURL=constantinople.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2NvbnN0YW50aW5vcGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxoYXJkZm9ya3NcXGNvbnN0YW50aW5vcGxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnY29uc3RhbnRpbm9wbGUnLFxuICAgIGNvbW1lbnQ6ICdQb3N0cG9uZWQgaGFyZGZvcmsgaW5jbHVkaW5nIEVJUC0xMjgzIChTU1RPUkUgZ2FzIG1ldGVyaW5nIGNoYW5nZXMpJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTEwMTMnLFxuICAgIHN0YXR1czogJ0ZpbmFsJyxcbiAgICBnYXNDb25maWc6IHt9LFxuICAgIGdhc1ByaWNlczoge1xuICAgICAgICBuZXRTc3RvcmVOb29wR2FzOiB7XG4gICAgICAgICAgICB2OiAyMDAsXG4gICAgICAgICAgICBkOiBcIk9uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gaWYgdGhlIHZhbHVlIGRvZXNuJ3QgY2hhbmdlXCIsXG4gICAgICAgIH0sXG4gICAgICAgIG5ldFNzdG9yZUluaXRHYXM6IHtcbiAgICAgICAgICAgIHY6IDIwMDAwLFxuICAgICAgICAgICAgZDogJ09uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gZnJvbSBjbGVhbiB6ZXJvJyxcbiAgICAgICAgfSxcbiAgICAgICAgbmV0U3N0b3JlQ2xlYW5HYXM6IHtcbiAgICAgICAgICAgIHY6IDUwMDAsXG4gICAgICAgICAgICBkOiAnT25jZSBwZXIgU1NUT1JFIG9wZXJhdGlvbiBmcm9tIGNsZWFuIG5vbi16ZXJvJyxcbiAgICAgICAgfSxcbiAgICAgICAgbmV0U3N0b3JlRGlydHlHYXM6IHtcbiAgICAgICAgICAgIHY6IDIwMCxcbiAgICAgICAgICAgIGQ6ICdPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGZyb20gZGlydHknLFxuICAgICAgICB9LFxuICAgICAgICBuZXRTc3RvcmVDbGVhclJlZnVuZDoge1xuICAgICAgICAgICAgdjogMTUwMDAsXG4gICAgICAgICAgICBkOiAnT25jZSBwZXIgU1NUT1JFIG9wZXJhdGlvbiBmb3IgY2xlYXJpbmcgYW4gb3JpZ2luYWxseSBleGlzdGluZyBzdG9yYWdlIHNsb3QnLFxuICAgICAgICB9LFxuICAgICAgICBuZXRTc3RvcmVSZXNldFJlZnVuZDoge1xuICAgICAgICAgICAgdjogNDgwMCxcbiAgICAgICAgICAgIGQ6ICdPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGZvciByZXNldHRpbmcgdG8gdGhlIG9yaWdpbmFsIG5vbi16ZXJvIHZhbHVlJyxcbiAgICAgICAgfSxcbiAgICAgICAgbmV0U3N0b3JlUmVzZXRDbGVhclJlZnVuZDoge1xuICAgICAgICAgICAgdjogMTk4MDAsXG4gICAgICAgICAgICBkOiAnT25jZSBwZXIgU1NUT1JFIG9wZXJhdGlvbiBmb3IgcmVzZXR0aW5nIHRvIHRoZSBvcmlnaW5hbCB6ZXJvIHZhbHVlJyxcbiAgICAgICAgfSxcbiAgICAgICAgc2hsOiB7XG4gICAgICAgICAgICB2OiAzLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBTSEwgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICAgICAgc2hyOiB7XG4gICAgICAgICAgICB2OiAzLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBTSFIgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICAgICAgc2FyOiB7XG4gICAgICAgICAgICB2OiAzLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBTQVIgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICAgICAgZXh0Y29kZWhhc2g6IHtcbiAgICAgICAgICAgIHY6IDQwMCxcbiAgICAgICAgICAgIGQ6ICdCYXNlIGZlZSBvZiB0aGUgRVhUQ09ERUhBU0ggb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICAgICAgY3JlYXRlMjoge1xuICAgICAgICAgICAgdjogMzIwMDAsXG4gICAgICAgICAgICBkOiAnQmFzZSBmZWUgb2YgdGhlIENSRUFURTIgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIHZtOiB7fSxcbiAgICBwb3c6IHtcbiAgICAgICAgbWluZXJSZXdhcmQ6IHtcbiAgICAgICAgICAgIHY6ICcyMDAwMDAwMDAwMDAwMDAwMDAwJyxcbiAgICAgICAgICAgIGQ6ICdUaGUgYW1vdW50IGEgbWluZXIgZ2V0cyByZXdhcmRlZCBmb3IgbWluaW5nIGEgYmxvY2snLFxuICAgICAgICB9LFxuICAgICAgICBkaWZmaWN1bHR5Qm9tYkRlbGF5OiB7XG4gICAgICAgICAgICB2OiA1MDAwMDAwLFxuICAgICAgICAgICAgZDogJ3RoZSBhbW91bnQgb2YgYmxvY2tzIHRvIGRlbGF5IHRoZSBkaWZmaWN1bHR5IGJvbWIgd2l0aCcsXG4gICAgICAgIH0sXG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudGlub3BsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/constantinople.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/dao.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/dao.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'dao',\n    comment: 'DAO rescue hardfork',\n    url: 'https://eips.ethereum.org/EIPS/eip-779',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=dao.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2Rhby5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixpQkFBaUI7QUFDakIsVUFBVTtBQUNWLFdBQVc7QUFDWCxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcaGFyZGZvcmtzXFxkYW8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIG5hbWU6ICdkYW8nLFxuICAgIGNvbW1lbnQ6ICdEQU8gcmVzY3VlIGhhcmRmb3JrJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTc3OScsXG4gICAgc3RhdHVzOiAnRmluYWwnLFxuICAgIGdhc0NvbmZpZzoge30sXG4gICAgZ2FzUHJpY2VzOiB7fSxcbiAgICB2bToge30sXG4gICAgcG93OiB7fSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYW8uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/dao.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/grayGlacier.js":
/*!********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/grayGlacier.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'grayGlacier',\n    comment: 'Delaying the difficulty bomb to Mid September 2022',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md',\n    status: 'Draft',\n    eips: [5133],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=grayGlacier.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2dyYXlHbGFjaWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsaUJBQWlCO0FBQ2pCLFVBQVU7QUFDVixXQUFXO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFxjb21tb25cXGhhcmRmb3Jrc1xcZ3JheUdsYWNpZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIG5hbWU6ICdncmF5R2xhY2llcicsXG4gICAgY29tbWVudDogJ0RlbGF5aW5nIHRoZSBkaWZmaWN1bHR5IGJvbWIgdG8gTWlkIFNlcHRlbWJlciAyMDIyJyxcbiAgICB1cmw6ICdodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vZXhlY3V0aW9uLXNwZWNzL2Jsb2IvbWFzdGVyL25ldHdvcmstdXBncmFkZXMvbWFpbm5ldC11cGdyYWRlcy9ncmF5LWdsYWNpZXIubWQnLFxuICAgIHN0YXR1czogJ0RyYWZ0JyxcbiAgICBlaXBzOiBbNTEzM10sXG4gICAgZ2FzQ29uZmlnOiB7fSxcbiAgICBnYXNQcmljZXM6IHt9LFxuICAgIHZtOiB7fSxcbiAgICBwb3c6IHt9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdyYXlHbGFjaWVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/grayGlacier.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/homestead.js":
/*!******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/homestead.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'homestead',\n    comment: 'Homestead hardfork with protocol and network changes',\n    url: 'https://eips.ethereum.org/EIPS/eip-606',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        delegatecall: {\n            v: 40,\n            d: 'Base fee of the DELEGATECALL opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=homestead.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2hvbWVzdGVhZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsVUFBVTtBQUNWLFdBQVc7QUFDWCxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcaGFyZGZvcmtzXFxob21lc3RlYWQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIG5hbWU6ICdob21lc3RlYWQnLFxuICAgIGNvbW1lbnQ6ICdIb21lc3RlYWQgaGFyZGZvcmsgd2l0aCBwcm90b2NvbCBhbmQgbmV0d29yayBjaGFuZ2VzJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTYwNicsXG4gICAgc3RhdHVzOiAnRmluYWwnLFxuICAgIGdhc0NvbmZpZzoge30sXG4gICAgZ2FzUHJpY2VzOiB7XG4gICAgICAgIGRlbGVnYXRlY2FsbDoge1xuICAgICAgICAgICAgdjogNDAsXG4gICAgICAgICAgICBkOiAnQmFzZSBmZWUgb2YgdGhlIERFTEVHQVRFQ0FMTCBvcGNvZGUnLFxuICAgICAgICB9LFxuICAgIH0sXG4gICAgdm06IHt9LFxuICAgIHBvdzoge30sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aG9tZXN0ZWFkLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/homestead.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hardforks: () => (/* binding */ hardforks)\n/* harmony export */ });\n/* harmony import */ var _chainstart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chainstart.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/chainstart.js\");\n/* harmony import */ var _dao_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dao.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/dao.js\");\n/* harmony import */ var _homestead_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./homestead.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/homestead.js\");\n/* harmony import */ var _tangerineWhistle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tangerineWhistle.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/tangerineWhistle.js\");\n/* harmony import */ var _spuriousDragon_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spuriousDragon.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/spuriousDragon.js\");\n/* harmony import */ var _byzantium_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./byzantium.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/byzantium.js\");\n/* harmony import */ var _constantinople_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./constantinople.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/constantinople.js\");\n/* harmony import */ var _petersburg_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./petersburg.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/petersburg.js\");\n/* harmony import */ var _istanbul_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./istanbul.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/istanbul.js\");\n/* harmony import */ var _muirGlacier_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./muirGlacier.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/muirGlacier.js\");\n/* harmony import */ var _berlin_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./berlin.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/berlin.js\");\n/* harmony import */ var _london_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./london.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/london.js\");\n/* harmony import */ var _shanghai_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./shanghai.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/shanghai.js\");\n/* harmony import */ var _arrowGlacier_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./arrowGlacier.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/arrowGlacier.js\");\n/* harmony import */ var _grayGlacier_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./grayGlacier.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/grayGlacier.js\");\n/* harmony import */ var _mergeForkIdTransition_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./mergeForkIdTransition.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/mergeForkIdTransition.js\");\n/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./merge.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/merge.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst hardforks = {\n    chainstart: _chainstart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    homestead: _homestead_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    dao: _dao_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    tangerineWhistle: _tangerineWhistle_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    spuriousDragon: _spuriousDragon_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    byzantium: _byzantium_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    constantinople: _constantinople_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    petersburg: _petersburg_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n    istanbul: _istanbul_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n    muirGlacier: _muirGlacier_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n    berlin: _berlin_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n    london: _london_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n    shanghai: _shanghai_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n    arrowGlacier: _arrowGlacier_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n    grayGlacier: _grayGlacier_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n    mergeForkIdTransition: _mergeForkIdTransition_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n    merge: _merge_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDeUM7QUFDZDtBQUNZO0FBQ2M7QUFDSjtBQUNWO0FBQ1U7QUFDUjtBQUNKO0FBQ007QUFDVjtBQUNBO0FBQ0k7QUFDUTtBQUNGO0FBQ29CO0FBQ2hDO0FBQ3hCO0FBQ1AsY0FBYztBQUNkLGFBQWE7QUFDYixPQUFPO0FBQ1Asb0JBQW9CO0FBQ3BCLGtCQUFrQjtBQUNsQixhQUFhO0FBQ2Isa0JBQWtCO0FBQ2xCLGNBQWM7QUFDZCxZQUFZO0FBQ1osZUFBZTtBQUNmLFVBQVU7QUFDVixVQUFVO0FBQ1YsWUFBWTtBQUNaLGdCQUFnQjtBQUNoQixlQUFlO0FBQ2YseUJBQXlCO0FBQ3pCLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxoYXJkZm9ya3NcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IGNoYWluc3RhcnQgZnJvbSAnLi9jaGFpbnN0YXJ0LmpzJztcbmltcG9ydCBkYW8gZnJvbSAnLi9kYW8uanMnO1xuaW1wb3J0IGhvbWVzdGVhZCBmcm9tICcuL2hvbWVzdGVhZC5qcyc7XG5pbXBvcnQgdGFuZ2VyaW5lV2hpc3RsZSBmcm9tICcuL3RhbmdlcmluZVdoaXN0bGUuanMnO1xuaW1wb3J0IHNwdXJpb3VzRHJhZ29uIGZyb20gJy4vc3B1cmlvdXNEcmFnb24uanMnO1xuaW1wb3J0IGJ5emFudGl1bSBmcm9tICcuL2J5emFudGl1bS5qcyc7XG5pbXBvcnQgY29uc3RhbnRpbm9wbGUgZnJvbSAnLi9jb25zdGFudGlub3BsZS5qcyc7XG5pbXBvcnQgcGV0ZXJzYnVyZyBmcm9tICcuL3BldGVyc2J1cmcuanMnO1xuaW1wb3J0IGlzdGFuYnVsIGZyb20gJy4vaXN0YW5idWwuanMnO1xuaW1wb3J0IG11aXJHbGFjaWVyIGZyb20gJy4vbXVpckdsYWNpZXIuanMnO1xuaW1wb3J0IGJlcmxpbiBmcm9tICcuL2Jlcmxpbi5qcyc7XG5pbXBvcnQgbG9uZG9uIGZyb20gJy4vbG9uZG9uLmpzJztcbmltcG9ydCBzaGFuZ2hhaSBmcm9tICcuL3NoYW5naGFpLmpzJztcbmltcG9ydCBhcnJvd0dsYWNpZXIgZnJvbSAnLi9hcnJvd0dsYWNpZXIuanMnO1xuaW1wb3J0IGdyYXlHbGFjaWVyIGZyb20gJy4vZ3JheUdsYWNpZXIuanMnO1xuaW1wb3J0IG1lcmdlRm9ya0lkVHJhbnNpdGlvbiBmcm9tICcuL21lcmdlRm9ya0lkVHJhbnNpdGlvbi5qcyc7XG5pbXBvcnQgbWVyZ2UgZnJvbSAnLi9tZXJnZS5qcyc7XG5leHBvcnQgY29uc3QgaGFyZGZvcmtzID0ge1xuICAgIGNoYWluc3RhcnQsXG4gICAgaG9tZXN0ZWFkLFxuICAgIGRhbyxcbiAgICB0YW5nZXJpbmVXaGlzdGxlLFxuICAgIHNwdXJpb3VzRHJhZ29uLFxuICAgIGJ5emFudGl1bSxcbiAgICBjb25zdGFudGlub3BsZSxcbiAgICBwZXRlcnNidXJnLFxuICAgIGlzdGFuYnVsLFxuICAgIG11aXJHbGFjaWVyLFxuICAgIGJlcmxpbixcbiAgICBsb25kb24sXG4gICAgc2hhbmdoYWksXG4gICAgYXJyb3dHbGFjaWVyLFxuICAgIGdyYXlHbGFjaWVyLFxuICAgIG1lcmdlRm9ya0lkVHJhbnNpdGlvbixcbiAgICBtZXJnZSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/istanbul.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/istanbul.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'istanbul',\n    comment: 'HF targeted for December 2019 following the Constantinople/Petersburg HF',\n    url: 'https://eips.ethereum.org/EIPS/eip-1679',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        blake2Round: {\n            v: 1,\n            d: 'Gas cost per round for the Blake2 F precompile',\n        },\n        ecAdd: {\n            v: 150,\n            d: 'Gas costs for curve addition precompile',\n        },\n        ecMul: {\n            v: 6000,\n            d: 'Gas costs for curve multiplication precompile',\n        },\n        ecPairing: {\n            v: 45000,\n            d: 'Base gas costs for curve pairing precompile',\n        },\n        ecPairingWord: {\n            v: 34000,\n            d: 'Gas costs regarding curve pairing precompile input length',\n        },\n        txDataNonZero: {\n            v: 16,\n            d: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',\n        },\n        sstoreSentryGasEIP2200: {\n            v: 2300,\n            d: 'Minimum gas required to be present for an SSTORE call, not consumed',\n        },\n        sstoreNoopGasEIP2200: {\n            v: 800,\n            d: \"Once per SSTORE operation if the value doesn't change\",\n        },\n        sstoreDirtyGasEIP2200: {\n            v: 800,\n            d: 'Once per SSTORE operation if a dirty value is changed',\n        },\n        sstoreInitGasEIP2200: {\n            v: 20000,\n            d: 'Once per SSTORE operation from clean zero to non-zero',\n        },\n        sstoreInitRefundEIP2200: {\n            v: 19200,\n            d: 'Once per SSTORE operation for resetting to the original zero value',\n        },\n        sstoreCleanGasEIP2200: {\n            v: 5000,\n            d: 'Once per SSTORE operation from clean non-zero to something else',\n        },\n        sstoreCleanRefundEIP2200: {\n            v: 4200,\n            d: 'Once per SSTORE operation for resetting to the original non-zero value',\n        },\n        sstoreClearRefundEIP2200: {\n            v: 15000,\n            d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n        },\n        balance: {\n            v: 700,\n            d: 'Base fee of the BALANCE opcode',\n        },\n        extcodehash: {\n            v: 700,\n            d: 'Base fee of the EXTCODEHASH opcode',\n        },\n        chainid: {\n            v: 2,\n            d: 'Base fee of the CHAINID opcode',\n        },\n        selfbalance: {\n            v: 5,\n            d: 'Base fee of the SELFBALANCE opcode',\n        },\n        sload: {\n            v: 800,\n            d: 'Base fee of the SLOAD opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=istanbul.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2lzdGFuYnVsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxVQUFVO0FBQ1YsV0FBVztBQUNYLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxoYXJkZm9ya3NcXGlzdGFuYnVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnaXN0YW5idWwnLFxuICAgIGNvbW1lbnQ6ICdIRiB0YXJnZXRlZCBmb3IgRGVjZW1iZXIgMjAxOSBmb2xsb3dpbmcgdGhlIENvbnN0YW50aW5vcGxlL1BldGVyc2J1cmcgSEYnLFxuICAgIHVybDogJ2h0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMTY3OScsXG4gICAgc3RhdHVzOiAnRmluYWwnLFxuICAgIGdhc0NvbmZpZzoge30sXG4gICAgZ2FzUHJpY2VzOiB7XG4gICAgICAgIGJsYWtlMlJvdW5kOiB7XG4gICAgICAgICAgICB2OiAxLFxuICAgICAgICAgICAgZDogJ0dhcyBjb3N0IHBlciByb3VuZCBmb3IgdGhlIEJsYWtlMiBGIHByZWNvbXBpbGUnLFxuICAgICAgICB9LFxuICAgICAgICBlY0FkZDoge1xuICAgICAgICAgICAgdjogMTUwLFxuICAgICAgICAgICAgZDogJ0dhcyBjb3N0cyBmb3IgY3VydmUgYWRkaXRpb24gcHJlY29tcGlsZScsXG4gICAgICAgIH0sXG4gICAgICAgIGVjTXVsOiB7XG4gICAgICAgICAgICB2OiA2MDAwLFxuICAgICAgICAgICAgZDogJ0dhcyBjb3N0cyBmb3IgY3VydmUgbXVsdGlwbGljYXRpb24gcHJlY29tcGlsZScsXG4gICAgICAgIH0sXG4gICAgICAgIGVjUGFpcmluZzoge1xuICAgICAgICAgICAgdjogNDUwMDAsXG4gICAgICAgICAgICBkOiAnQmFzZSBnYXMgY29zdHMgZm9yIGN1cnZlIHBhaXJpbmcgcHJlY29tcGlsZScsXG4gICAgICAgIH0sXG4gICAgICAgIGVjUGFpcmluZ1dvcmQ6IHtcbiAgICAgICAgICAgIHY6IDM0MDAwLFxuICAgICAgICAgICAgZDogJ0dhcyBjb3N0cyByZWdhcmRpbmcgY3VydmUgcGFpcmluZyBwcmVjb21waWxlIGlucHV0IGxlbmd0aCcsXG4gICAgICAgIH0sXG4gICAgICAgIHR4RGF0YU5vblplcm86IHtcbiAgICAgICAgICAgIHY6IDE2LFxuICAgICAgICAgICAgZDogJ1BlciBieXRlIG9mIGRhdGEgYXR0YWNoZWQgdG8gYSB0cmFuc2FjdGlvbiB0aGF0IGlzIG5vdCBlcXVhbCB0byB6ZXJvLiBOT1RFOiBOb3QgcGF5YWJsZSBvbiBkYXRhIG9mIGNhbGxzIGJldHdlZW4gdHJhbnNhY3Rpb25zJyxcbiAgICAgICAgfSxcbiAgICAgICAgc3N0b3JlU2VudHJ5R2FzRUlQMjIwMDoge1xuICAgICAgICAgICAgdjogMjMwMCxcbiAgICAgICAgICAgIGQ6ICdNaW5pbXVtIGdhcyByZXF1aXJlZCB0byBiZSBwcmVzZW50IGZvciBhbiBTU1RPUkUgY2FsbCwgbm90IGNvbnN1bWVkJyxcbiAgICAgICAgfSxcbiAgICAgICAgc3N0b3JlTm9vcEdhc0VJUDIyMDA6IHtcbiAgICAgICAgICAgIHY6IDgwMCxcbiAgICAgICAgICAgIGQ6IFwiT25jZSBwZXIgU1NUT1JFIG9wZXJhdGlvbiBpZiB0aGUgdmFsdWUgZG9lc24ndCBjaGFuZ2VcIixcbiAgICAgICAgfSxcbiAgICAgICAgc3N0b3JlRGlydHlHYXNFSVAyMjAwOiB7XG4gICAgICAgICAgICB2OiA4MDAsXG4gICAgICAgICAgICBkOiAnT25jZSBwZXIgU1NUT1JFIG9wZXJhdGlvbiBpZiBhIGRpcnR5IHZhbHVlIGlzIGNoYW5nZWQnLFxuICAgICAgICB9LFxuICAgICAgICBzc3RvcmVJbml0R2FzRUlQMjIwMDoge1xuICAgICAgICAgICAgdjogMjAwMDAsXG4gICAgICAgICAgICBkOiAnT25jZSBwZXIgU1NUT1JFIG9wZXJhdGlvbiBmcm9tIGNsZWFuIHplcm8gdG8gbm9uLXplcm8nLFxuICAgICAgICB9LFxuICAgICAgICBzc3RvcmVJbml0UmVmdW5kRUlQMjIwMDoge1xuICAgICAgICAgICAgdjogMTkyMDAsXG4gICAgICAgICAgICBkOiAnT25jZSBwZXIgU1NUT1JFIG9wZXJhdGlvbiBmb3IgcmVzZXR0aW5nIHRvIHRoZSBvcmlnaW5hbCB6ZXJvIHZhbHVlJyxcbiAgICAgICAgfSxcbiAgICAgICAgc3N0b3JlQ2xlYW5HYXNFSVAyMjAwOiB7XG4gICAgICAgICAgICB2OiA1MDAwLFxuICAgICAgICAgICAgZDogJ09uY2UgcGVyIFNTVE9SRSBvcGVyYXRpb24gZnJvbSBjbGVhbiBub24temVybyB0byBzb21ldGhpbmcgZWxzZScsXG4gICAgICAgIH0sXG4gICAgICAgIHNzdG9yZUNsZWFuUmVmdW5kRUlQMjIwMDoge1xuICAgICAgICAgICAgdjogNDIwMCxcbiAgICAgICAgICAgIGQ6ICdPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGZvciByZXNldHRpbmcgdG8gdGhlIG9yaWdpbmFsIG5vbi16ZXJvIHZhbHVlJyxcbiAgICAgICAgfSxcbiAgICAgICAgc3N0b3JlQ2xlYXJSZWZ1bmRFSVAyMjAwOiB7XG4gICAgICAgICAgICB2OiAxNTAwMCxcbiAgICAgICAgICAgIGQ6ICdPbmNlIHBlciBTU1RPUkUgb3BlcmF0aW9uIGZvciBjbGVhcmluZyBhbiBvcmlnaW5hbGx5IGV4aXN0aW5nIHN0b3JhZ2Ugc2xvdCcsXG4gICAgICAgIH0sXG4gICAgICAgIGJhbGFuY2U6IHtcbiAgICAgICAgICAgIHY6IDcwMCxcbiAgICAgICAgICAgIGQ6ICdCYXNlIGZlZSBvZiB0aGUgQkFMQU5DRSBvcGNvZGUnLFxuICAgICAgICB9LFxuICAgICAgICBleHRjb2RlaGFzaDoge1xuICAgICAgICAgICAgdjogNzAwLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBFWFRDT0RFSEFTSCBvcGNvZGUnLFxuICAgICAgICB9LFxuICAgICAgICBjaGFpbmlkOiB7XG4gICAgICAgICAgICB2OiAyLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBDSEFJTklEIG9wY29kZScsXG4gICAgICAgIH0sXG4gICAgICAgIHNlbGZiYWxhbmNlOiB7XG4gICAgICAgICAgICB2OiA1LFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBTRUxGQkFMQU5DRSBvcGNvZGUnLFxuICAgICAgICB9LFxuICAgICAgICBzbG9hZDoge1xuICAgICAgICAgICAgdjogODAwLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBTTE9BRCBvcGNvZGUnLFxuICAgICAgICB9LFxuICAgIH0sXG4gICAgdm06IHt9LFxuICAgIHBvdzoge30sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXN0YW5idWwuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/istanbul.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/london.js":
/*!***************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/london.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'london',\n    comment: 'HF targeted for July 2021 following the Berlin fork',\n    url: 'https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md',\n    status: 'Final',\n    eips: [1559, 3198, 3529, 3541],\n});\n//# sourceMappingURL=london.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL2xvbmRvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFxjb21tb25cXGhhcmRmb3Jrc1xcbG9uZG9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnbG9uZG9uJyxcbiAgICBjb21tZW50OiAnSEYgdGFyZ2V0ZWQgZm9yIEp1bHkgMjAyMSBmb2xsb3dpbmcgdGhlIEJlcmxpbiBmb3JrJyxcbiAgICB1cmw6ICdodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vZXRoMS4wLXNwZWNzL2Jsb2IvbWFzdGVyL25ldHdvcmstdXBncmFkZXMvbWFpbm5ldC11cGdyYWRlcy9sb25kb24ubWQnLFxuICAgIHN0YXR1czogJ0ZpbmFsJyxcbiAgICBlaXBzOiBbMTU1OSwgMzE5OCwgMzUyOSwgMzU0MV0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9uZG9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/london.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/merge.js":
/*!**************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/merge.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'merge',\n    comment: 'Hardfork to upgrade the consensus mechanism to Proof-of-Stake',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md',\n    status: 'Final',\n    consensus: {\n        type: 'pos',\n        algorithm: 'casper',\n        casper: {},\n    },\n    eips: [3675, 4399],\n});\n//# sourceMappingURL=merge.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL21lcmdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLEtBQUs7QUFDTDtBQUNBLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxoYXJkZm9ya3NcXG1lcmdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnbWVyZ2UnLFxuICAgIGNvbW1lbnQ6ICdIYXJkZm9yayB0byB1cGdyYWRlIHRoZSBjb25zZW5zdXMgbWVjaGFuaXNtIHRvIFByb29mLW9mLVN0YWtlJyxcbiAgICB1cmw6ICdodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vZXhlY3V0aW9uLXNwZWNzL2Jsb2IvbWFzdGVyL25ldHdvcmstdXBncmFkZXMvbWFpbm5ldC11cGdyYWRlcy9tZXJnZS5tZCcsXG4gICAgc3RhdHVzOiAnRmluYWwnLFxuICAgIGNvbnNlbnN1czoge1xuICAgICAgICB0eXBlOiAncG9zJyxcbiAgICAgICAgYWxnb3JpdGhtOiAnY2FzcGVyJyxcbiAgICAgICAgY2FzcGVyOiB7fSxcbiAgICB9LFxuICAgIGVpcHM6IFszNjc1LCA0Mzk5XSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXJnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/merge.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/mergeForkIdTransition.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/mergeForkIdTransition.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'mergeForkIdTransition',\n    comment: 'Pre-merge hardfork to fork off non-upgraded clients',\n    url: 'https://eips.ethereum.org/EIPS/eip-3675',\n    status: 'Draft',\n    eips: [],\n});\n//# sourceMappingURL=mergeForkIdTransition.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL21lcmdlRm9ya0lkVHJhbnNpdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFxjb21tb25cXGhhcmRmb3Jrc1xcbWVyZ2VGb3JrSWRUcmFuc2l0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnbWVyZ2VGb3JrSWRUcmFuc2l0aW9uJyxcbiAgICBjb21tZW50OiAnUHJlLW1lcmdlIGhhcmRmb3JrIHRvIGZvcmsgb2ZmIG5vbi11cGdyYWRlZCBjbGllbnRzJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTM2NzUnLFxuICAgIHN0YXR1czogJ0RyYWZ0JyxcbiAgICBlaXBzOiBbXSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXJnZUZvcmtJZFRyYW5zaXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/mergeForkIdTransition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/muirGlacier.js":
/*!********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/muirGlacier.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'muirGlacier',\n    comment: 'HF to delay the difficulty bomb',\n    url: 'https://eips.ethereum.org/EIPS/eip-2384',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {\n        difficultyBombDelay: {\n            v: 9000000,\n            d: 'the amount of blocks to delay the difficulty bomb with',\n        },\n    },\n});\n//# sourceMappingURL=muirGlacier.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL211aXJHbGFjaWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGlCQUFpQjtBQUNqQixVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxoYXJkZm9ya3NcXG11aXJHbGFjaWVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnbXVpckdsYWNpZXInLFxuICAgIGNvbW1lbnQ6ICdIRiB0byBkZWxheSB0aGUgZGlmZmljdWx0eSBib21iJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTIzODQnLFxuICAgIHN0YXR1czogJ0ZpbmFsJyxcbiAgICBnYXNDb25maWc6IHt9LFxuICAgIGdhc1ByaWNlczoge30sXG4gICAgdm06IHt9LFxuICAgIHBvdzoge1xuICAgICAgICBkaWZmaWN1bHR5Qm9tYkRlbGF5OiB7XG4gICAgICAgICAgICB2OiA5MDAwMDAwLFxuICAgICAgICAgICAgZDogJ3RoZSBhbW91bnQgb2YgYmxvY2tzIHRvIGRlbGF5IHRoZSBkaWZmaWN1bHR5IGJvbWIgd2l0aCcsXG4gICAgICAgIH0sXG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdWlyR2xhY2llci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/muirGlacier.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/petersburg.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/petersburg.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'petersburg',\n    comment: 'Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople',\n    url: 'https://eips.ethereum.org/EIPS/eip-1716',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        netSstoreNoopGas: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n        netSstoreInitGas: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n        netSstoreCleanGas: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n        netSstoreDirtyGas: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n        netSstoreClearRefund: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n        netSstoreResetRefund: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n        netSstoreResetClearRefund: {\n            v: null,\n            d: 'Removed along EIP-1283',\n        },\n    },\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=petersburg.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL3BldGVyc2J1cmcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLFVBQVU7QUFDVixXQUFXO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFxjb21tb25cXGhhcmRmb3Jrc1xccGV0ZXJzYnVyZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ3BldGVyc2J1cmcnLFxuICAgIGNvbW1lbnQ6ICdBa2EgY29uc3RhbnRpbm9wbGVGaXgsIHJlbW92ZXMgRUlQLTEyODMsIGFjdGl2YXRlIHRvZ2V0aGVyIHdpdGggb3IgYWZ0ZXIgY29uc3RhbnRpbm9wbGUnLFxuICAgIHVybDogJ2h0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMTcxNicsXG4gICAgc3RhdHVzOiAnRmluYWwnLFxuICAgIGdhc0NvbmZpZzoge30sXG4gICAgZ2FzUHJpY2VzOiB7XG4gICAgICAgIG5ldFNzdG9yZU5vb3BHYXM6IHtcbiAgICAgICAgICAgIHY6IG51bGwsXG4gICAgICAgICAgICBkOiAnUmVtb3ZlZCBhbG9uZyBFSVAtMTI4MycsXG4gICAgICAgIH0sXG4gICAgICAgIG5ldFNzdG9yZUluaXRHYXM6IHtcbiAgICAgICAgICAgIHY6IG51bGwsXG4gICAgICAgICAgICBkOiAnUmVtb3ZlZCBhbG9uZyBFSVAtMTI4MycsXG4gICAgICAgIH0sXG4gICAgICAgIG5ldFNzdG9yZUNsZWFuR2FzOiB7XG4gICAgICAgICAgICB2OiBudWxsLFxuICAgICAgICAgICAgZDogJ1JlbW92ZWQgYWxvbmcgRUlQLTEyODMnLFxuICAgICAgICB9LFxuICAgICAgICBuZXRTc3RvcmVEaXJ0eUdhczoge1xuICAgICAgICAgICAgdjogbnVsbCxcbiAgICAgICAgICAgIGQ6ICdSZW1vdmVkIGFsb25nIEVJUC0xMjgzJyxcbiAgICAgICAgfSxcbiAgICAgICAgbmV0U3N0b3JlQ2xlYXJSZWZ1bmQ6IHtcbiAgICAgICAgICAgIHY6IG51bGwsXG4gICAgICAgICAgICBkOiAnUmVtb3ZlZCBhbG9uZyBFSVAtMTI4MycsXG4gICAgICAgIH0sXG4gICAgICAgIG5ldFNzdG9yZVJlc2V0UmVmdW5kOiB7XG4gICAgICAgICAgICB2OiBudWxsLFxuICAgICAgICAgICAgZDogJ1JlbW92ZWQgYWxvbmcgRUlQLTEyODMnLFxuICAgICAgICB9LFxuICAgICAgICBuZXRTc3RvcmVSZXNldENsZWFyUmVmdW5kOiB7XG4gICAgICAgICAgICB2OiBudWxsLFxuICAgICAgICAgICAgZDogJ1JlbW92ZWQgYWxvbmcgRUlQLTEyODMnLFxuICAgICAgICB9LFxuICAgIH0sXG4gICAgdm06IHt9LFxuICAgIHBvdzoge30sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGV0ZXJzYnVyZy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/petersburg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/shanghai.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/shanghai.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'shanghai',\n    comment: 'Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md',\n    status: 'Final',\n    eips: [3651, 3855, 3860, 4895],\n});\n//# sourceMappingURL=shanghai.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL3NoYW5naGFpLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxhbGl5YVxcRG93bmxvYWRzXFxFY29YQ2hhbmdlXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFx3ZWIzLWV0aC1hY2NvdW50c1xcbGliXFxlc21cXGNvbW1vblxcaGFyZGZvcmtzXFxzaGFuZ2hhaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ3NoYW5naGFpJyxcbiAgICBjb21tZW50OiAnTmV4dCBmZWF0dXJlIGhhcmRmb3JrIGFmdGVyIHRoZSBtZXJnZSBoYXJkZm9yayBoYXZpbmcgd2l0aGRyYXdhbHMsIHdhcm0gY29pbmJhc2UsIHB1c2gwLCBsaW1pdC9tZXRlciBpbml0Y29kZScsXG4gICAgdXJsOiAnaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL2V4ZWN1dGlvbi1zcGVjcy9ibG9iL21hc3Rlci9uZXR3b3JrLXVwZ3JhZGVzL21haW5uZXQtdXBncmFkZXMvc2hhbmdoYWkubWQnLFxuICAgIHN0YXR1czogJ0ZpbmFsJyxcbiAgICBlaXBzOiBbMzY1MSwgMzg1NSwgMzg2MCwgNDg5NV0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhbmdoYWkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/shanghai.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/spuriousDragon.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/spuriousDragon.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'spuriousDragon',\n    comment: 'HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit',\n    url: 'https://eips.ethereum.org/EIPS/eip-607',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        expByte: {\n            v: 50,\n            d: 'Times ceil(log256(exponent)) for the EXP instruction',\n        },\n    },\n    vm: {\n        maxCodeSize: {\n            v: 24576,\n            d: 'Maximum length of contract code',\n        },\n    },\n    pow: {},\n});\n//# sourceMappingURL=spuriousDragon.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL3NwdXJpb3VzRHJhZ29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsV0FBVztBQUNYLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxoYXJkZm9ya3NcXHNwdXJpb3VzRHJhZ29uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnc3B1cmlvdXNEcmFnb24nLFxuICAgIGNvbW1lbnQ6ICdIRiB3aXRoIEVJUHMgZm9yIHNpbXBsZSByZXBsYXkgYXR0YWNrIHByb3RlY3Rpb24sIEVYUCBjb3N0IGluY3JlYXNlLCBzdGF0ZSB0cmllIGNsZWFyaW5nLCBjb250cmFjdCBjb2RlIHNpemUgbGltaXQnLFxuICAgIHVybDogJ2h0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtNjA3JyxcbiAgICBzdGF0dXM6ICdGaW5hbCcsXG4gICAgZ2FzQ29uZmlnOiB7fSxcbiAgICBnYXNQcmljZXM6IHtcbiAgICAgICAgZXhwQnl0ZToge1xuICAgICAgICAgICAgdjogNTAsXG4gICAgICAgICAgICBkOiAnVGltZXMgY2VpbChsb2cyNTYoZXhwb25lbnQpKSBmb3IgdGhlIEVYUCBpbnN0cnVjdGlvbicsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICB2bToge1xuICAgICAgICBtYXhDb2RlU2l6ZToge1xuICAgICAgICAgICAgdjogMjQ1NzYsXG4gICAgICAgICAgICBkOiAnTWF4aW11bSBsZW5ndGggb2YgY29udHJhY3QgY29kZScsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBwb3c6IHt9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNwdXJpb3VzRHJhZ29uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/spuriousDragon.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/tangerineWhistle.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/hardforks/tangerineWhistle.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: 'tangerineWhistle',\n    comment: 'Hardfork with gas cost changes for IO-heavy operations',\n    url: 'https://eips.ethereum.org/EIPS/eip-608',\n    status: 'Final',\n    gasConfig: {},\n    gasPrices: {\n        sload: {\n            v: 200,\n            d: 'Once per SLOAD operation',\n        },\n        call: {\n            v: 700,\n            d: 'Once per CALL operation & message call transaction',\n        },\n        extcodesize: {\n            v: 700,\n            d: 'Base fee of the EXTCODESIZE opcode',\n        },\n        extcodecopy: {\n            v: 700,\n            d: 'Base fee of the EXTCODECOPY opcode',\n        },\n        balance: {\n            v: 400,\n            d: 'Base fee of the BALANCE opcode',\n        },\n        delegatecall: {\n            v: 700,\n            d: 'Base fee of the DELEGATECALL opcode',\n        },\n        callcode: {\n            v: 700,\n            d: 'Base fee of the CALLCODE opcode',\n        },\n        selfdestruct: {\n            v: 5000,\n            d: 'Base fee of the SELFDESTRUCT opcode',\n        },\n    },\n    vm: {},\n    pow: {},\n});\n//# sourceMappingURL=tangerineWhistle.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaGFyZGZvcmtzL3RhbmdlcmluZVdoaXN0bGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxVQUFVO0FBQ1YsV0FBVztBQUNYLENBQUMsRUFBQztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxoYXJkZm9ya3NcXHRhbmdlcmluZVdoaXN0bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICAgIG5hbWU6ICd0YW5nZXJpbmVXaGlzdGxlJyxcbiAgICBjb21tZW50OiAnSGFyZGZvcmsgd2l0aCBnYXMgY29zdCBjaGFuZ2VzIGZvciBJTy1oZWF2eSBvcGVyYXRpb25zJyxcbiAgICB1cmw6ICdodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTYwOCcsXG4gICAgc3RhdHVzOiAnRmluYWwnLFxuICAgIGdhc0NvbmZpZzoge30sXG4gICAgZ2FzUHJpY2VzOiB7XG4gICAgICAgIHNsb2FkOiB7XG4gICAgICAgICAgICB2OiAyMDAsXG4gICAgICAgICAgICBkOiAnT25jZSBwZXIgU0xPQUQgb3BlcmF0aW9uJyxcbiAgICAgICAgfSxcbiAgICAgICAgY2FsbDoge1xuICAgICAgICAgICAgdjogNzAwLFxuICAgICAgICAgICAgZDogJ09uY2UgcGVyIENBTEwgb3BlcmF0aW9uICYgbWVzc2FnZSBjYWxsIHRyYW5zYWN0aW9uJyxcbiAgICAgICAgfSxcbiAgICAgICAgZXh0Y29kZXNpemU6IHtcbiAgICAgICAgICAgIHY6IDcwMCxcbiAgICAgICAgICAgIGQ6ICdCYXNlIGZlZSBvZiB0aGUgRVhUQ09ERVNJWkUgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICAgICAgZXh0Y29kZWNvcHk6IHtcbiAgICAgICAgICAgIHY6IDcwMCxcbiAgICAgICAgICAgIGQ6ICdCYXNlIGZlZSBvZiB0aGUgRVhUQ09ERUNPUFkgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICAgICAgYmFsYW5jZToge1xuICAgICAgICAgICAgdjogNDAwLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBCQUxBTkNFIG9wY29kZScsXG4gICAgICAgIH0sXG4gICAgICAgIGRlbGVnYXRlY2FsbDoge1xuICAgICAgICAgICAgdjogNzAwLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBERUxFR0FURUNBTEwgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICAgICAgY2FsbGNvZGU6IHtcbiAgICAgICAgICAgIHY6IDcwMCxcbiAgICAgICAgICAgIGQ6ICdCYXNlIGZlZSBvZiB0aGUgQ0FMTENPREUgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICAgICAgc2VsZmRlc3RydWN0OiB7XG4gICAgICAgICAgICB2OiA1MDAwLFxuICAgICAgICAgICAgZDogJ0Jhc2UgZmVlIG9mIHRoZSBTRUxGREVTVFJVQ1Qgb3Bjb2RlJyxcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIHZtOiB7fSxcbiAgICBwb3c6IHt9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRhbmdlcmluZVdoaXN0bGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/hardforks/tangerineWhistle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chain: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.Chain),\n/* harmony export */   Common: () => (/* reexport safe */ _common_js__WEBPACK_IMPORTED_MODULE_0__.Common),\n/* harmony export */   ConsensusAlgorithm: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.ConsensusAlgorithm),\n/* harmony export */   ConsensusType: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.ConsensusType),\n/* harmony export */   CustomChain: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.CustomChain),\n/* harmony export */   Hardfork: () => (/* reexport safe */ _enums_js__WEBPACK_IMPORTED_MODULE_1__.Hardfork),\n/* harmony export */   TypeOutput: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.TypeOutput),\n/* harmony export */   assertIsUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.assertIsUint8Array),\n/* harmony export */   bigIntToHex: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.bigIntToHex),\n/* harmony export */   bigIntToUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.bigIntToUint8Array),\n/* harmony export */   bigIntToUnpaddedUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.bigIntToUnpaddedUint8Array),\n/* harmony export */   ecrecover: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.ecrecover),\n/* harmony export */   intToUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.intToUint8Array),\n/* harmony export */   padToEven: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.padToEven),\n/* harmony export */   parseGethGenesis: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.parseGethGenesis),\n/* harmony export */   setLengthLeft: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.setLengthLeft),\n/* harmony export */   stripHexPrefix: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.stripHexPrefix),\n/* harmony export */   stripZeros: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.stripZeros),\n/* harmony export */   toType: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.toType),\n/* harmony export */   toUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.toUint8Array),\n/* harmony export */   uint8ArrayToBigInt: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayToBigInt),\n/* harmony export */   unpadUint8Array: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.unpadUint8Array),\n/* harmony export */   zeros: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_3__.zeros)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/common.js\");\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enums.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/enums.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/types.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// @ethereumjs/common version 3.1.1\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQzRCO0FBQ0Q7QUFDQTtBQUNBO0FBQzNCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbi8vIEBldGhlcmV1bWpzL2NvbW1vbiB2ZXJzaW9uIDMuMS4xXG5leHBvcnQgKiBmcm9tICcuL2NvbW1vbi5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2VudW1zLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdHlwZXMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi91dGlscy5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/types.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/types.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TypeOutput: () => (/* binding */ TypeOutput)\n/* harmony export */ });\n/**\n * Type output options\n */\nvar TypeOutput;\n(function (TypeOutput) {\n    TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n    TypeOutput[TypeOutput[\"BigInt\"] = 1] = \"BigInt\";\n    TypeOutput[TypeOutput[\"Uint8Array\"] = 2] = \"Uint8Array\";\n    TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput || (TypeOutput = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9jb21tb24vdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDO0FBQ2pDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcY29tbW9uXFx0eXBlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFR5cGUgb3V0cHV0IG9wdGlvbnNcbiAqL1xuZXhwb3J0IHZhciBUeXBlT3V0cHV0O1xuKGZ1bmN0aW9uIChUeXBlT3V0cHV0KSB7XG4gICAgVHlwZU91dHB1dFtUeXBlT3V0cHV0W1wiTnVtYmVyXCJdID0gMF0gPSBcIk51bWJlclwiO1xuICAgIFR5cGVPdXRwdXRbVHlwZU91dHB1dFtcIkJpZ0ludFwiXSA9IDFdID0gXCJCaWdJbnRcIjtcbiAgICBUeXBlT3V0cHV0W1R5cGVPdXRwdXRbXCJVaW50OEFycmF5XCJdID0gMl0gPSBcIlVpbnQ4QXJyYXlcIjtcbiAgICBUeXBlT3V0cHV0W1R5cGVPdXRwdXRbXCJQcmVmaXhlZEhleFN0cmluZ1wiXSA9IDNdID0gXCJQcmVmaXhlZEhleFN0cmluZ1wiO1xufSkoVHlwZU91dHB1dCB8fCAoVHlwZU91dHB1dCA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/common/utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertIsUint8Array: () => (/* binding */ assertIsUint8Array),\n/* harmony export */   bigIntToHex: () => (/* binding */ bigIntToHex),\n/* harmony export */   bigIntToUint8Array: () => (/* binding */ bigIntToUint8Array),\n/* harmony export */   bigIntToUnpaddedUint8Array: () => (/* binding */ bigIntToUnpaddedUint8Array),\n/* harmony export */   ecrecover: () => (/* binding */ ecrecover),\n/* harmony export */   intToUint8Array: () => (/* binding */ intToUint8Array),\n/* harmony export */   padToEven: () => (/* binding */ padToEven),\n/* harmony export */   parseGethGenesis: () => (/* binding */ parseGethGenesis),\n/* harmony export */   setLengthLeft: () => (/* binding */ setLengthLeft),\n/* harmony export */   stripHexPrefix: () => (/* binding */ stripHexPrefix),\n/* harmony export */   stripZeros: () => (/* binding */ stripZeros),\n/* harmony export */   toType: () => (/* binding */ toType),\n/* harmony export */   toUint8Array: () => (/* binding */ toUint8Array),\n/* harmony export */   uint8ArrayToBigInt: () => (/* binding */ uint8ArrayToBigInt),\n/* harmony export */   unpadUint8Array: () => (/* binding */ unpadUint8Array),\n/* harmony export */   zeros: () => (/* binding */ zeros)\n/* harmony export */ });\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _tx_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tx/constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enums.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/enums.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/types.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nconst stripHexPrefix = (str) => {\n    if (typeof str !== 'string')\n        throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`);\n    return (0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexPrefixed)(str) ? str.slice(2) : str;\n};\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */\nfunction formatNonce(nonce) {\n    if (!nonce || nonce === '0x0') {\n        return '0x0000000000000000';\n    }\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexPrefixed)(nonce)) {\n        return `0x${stripHexPrefix(nonce).padStart(16, '0')}`;\n    }\n    return `0x${nonce.padStart(16, '0')}`;\n}\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nconst intToHex = function (i) {\n    if (!Number.isSafeInteger(i) || i < 0) {\n        throw new Error(`Received an invalid integer type: ${i}`);\n    }\n    return `0x${i.toString(16)}`;\n};\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction parseGethParams(json, mergeForkIdPostMerge = true) {\n    var _a, _b;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const { name, config, difficulty, mixHash, gasLimit, coinbase, baseFeePerGas, } = json;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    let { extraData, timestamp, nonce } = json;\n    const genesisTimestamp = Number(timestamp);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const { chainId } = config;\n    // geth is not strictly putting empty fields with a 0x prefix\n    if (extraData === '') {\n        extraData = '0x';\n    }\n    // geth may use number for timestamp\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexPrefixed)(timestamp)) {\n        // eslint-disable-next-line radix\n        timestamp = intToHex(parseInt(timestamp));\n    }\n    // geth may not give us a nonce strictly formatted to an 8 byte hex string\n    if (nonce.length !== 18) {\n        nonce = formatNonce(nonce);\n    }\n    // EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n    // but have different configuration parameters in geth genesis parameters\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (config.eip155Block !== config.eip158Block) {\n        throw new Error('EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork');\n    }\n    const params = {\n        name,\n        chainId,\n        networkId: chainId,\n        genesis: {\n            timestamp,\n            // eslint-disable-next-line radix\n            gasLimit: parseInt(gasLimit), // geth gasLimit and difficulty are hex strings while ours are `number`s\n            // eslint-disable-next-line radix\n            difficulty: parseInt(difficulty),\n            nonce,\n            extraData,\n            mixHash,\n            coinbase,\n            baseFeePerGas,\n        },\n        hardfork: undefined,\n        hardforks: [],\n        bootstrapNodes: [],\n        consensus: \n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        config.clique !== undefined\n            ? {\n                type: 'poa',\n                algorithm: 'clique',\n                clique: {\n                    // The recent geth genesis seems to be using blockperiodseconds\n                    // and epochlength for clique specification\n                    // see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n                    period: (_a = config.clique.period) !== null && _a !== void 0 ? _a : config.clique.blockperiodseconds,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,  @typescript-eslint/no-unsafe-assignment\n                    epoch: (_b = config.clique.epoch) !== null && _b !== void 0 ? _b : config.clique.epochlength,\n                },\n            }\n            : {\n                type: 'pow',\n                algorithm: 'ethash',\n                ethash: {},\n            },\n    };\n    const forkMap = {\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Homestead]: { name: 'homesteadBlock' },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Dao]: { name: 'daoForkBlock' },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.TangerineWhistle]: { name: 'eip150Block' },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.SpuriousDragon]: { name: 'eip155Block' },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Byzantium]: { name: 'byzantiumBlock' },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Constantinople]: { name: 'constantinopleBlock' },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Petersburg]: { name: 'petersburgBlock' },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Istanbul]: { name: 'istanbulBlock' },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Berlin]: { name: 'berlinBlock' },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.London]: { name: 'londonBlock' },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.MergeForkIdTransition]: {\n            name: 'mergeForkBlock',\n            postMerge: mergeForkIdPostMerge,\n        },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },\n        [_enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.ShardingForkDev]: {\n            name: 'shardingForkTime',\n            postMerge: true,\n            isTimestamp: true,\n        },\n    };\n    // forkMapRev is the map from config field name to Hardfork\n    const forkMapRev = Object.keys(forkMap).reduce((acc, elem) => {\n        acc[forkMap[elem].name] = elem;\n        return acc;\n    }, {});\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    const configHardforkNames = Object.keys(config).filter(\n    // eslint-disable-next-line no-null/no-null, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/prefer-optional-chain\n    key => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null);\n    params.hardforks = configHardforkNames\n        .map(nameBlock => ({\n        name: forkMapRev[nameBlock],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        block: \n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true ||\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            typeof config[nameBlock] !== 'number'\n            ? // eslint-disable-next-line no-null/no-null\n                null\n            : // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                config[nameBlock],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        timestamp: \n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true &&\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            typeof config[nameBlock] === 'number'\n            ? // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                config[nameBlock]\n            : undefined,\n    }))\n        // eslint-disable-next-line no-null/no-null\n        .filter(fork => fork.block !== null || fork.timestamp !== undefined);\n    params.hardforks.sort((a, b) => { var _a, _b; return ((_a = a.block) !== null && _a !== void 0 ? _a : Infinity) - ((_b = b.block) !== null && _b !== void 0 ? _b : Infinity); });\n    params.hardforks.sort((a, b) => { var _a, _b; return ((_a = a.timestamp) !== null && _a !== void 0 ? _a : genesisTimestamp) - ((_b = b.timestamp) !== null && _b !== void 0 ? _b : genesisTimestamp); });\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (config.terminalTotalDifficulty !== undefined) {\n        // Following points need to be considered for placement of merge hf\n        // - Merge hardfork can't be placed at genesis\n        // - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n        // - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n        //   necessary for e.g. withdrawals\n        const mergeConfig = {\n            name: _enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Merge,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n            ttd: config.terminalTotalDifficulty,\n            // eslint-disable-next-line no-null/no-null\n            block: null,\n        };\n        // Merge hardfork has to be placed before first hardfork that is dependent on merge\n        const postMergeIndex = params.hardforks.findIndex(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        hf => { var _a; return ((_a = forkMap[hf.name]) === null || _a === void 0 ? void 0 : _a.postMerge) === true; });\n        if (postMergeIndex !== -1) {\n            params.hardforks.splice(postMergeIndex, 0, mergeConfig);\n        }\n        else {\n            params.hardforks.push(mergeConfig);\n        }\n    }\n    const latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined;\n    params.hardfork = latestHardfork === null || latestHardfork === void 0 ? void 0 : latestHardfork.name;\n    params.hardforks.unshift({ name: _enums_js__WEBPACK_IMPORTED_MODULE_3__.Hardfork.Chainstart, block: 0 });\n    return params;\n}\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction parseGethGenesis(json, name, mergeForkIdPostMerge) {\n    try {\n        if (['config', 'difficulty', 'gasLimit', 'alloc'].some(field => !(field in json))) {\n            throw new Error('Invalid format, expected geth genesis fields missing');\n        }\n        if (name !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-param-reassign\n            json.name = name;\n        }\n        return parseGethParams(json, mergeForkIdPostMerge);\n    }\n    catch (e) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions\n        throw new Error(`Error parsing parameters file: ${e.message}`);\n    }\n}\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nfunction padToEven(value) {\n    let a = value;\n    if (typeof a !== 'string') {\n        throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`);\n    }\n    if (a.length % 2)\n        a = `0${a}`;\n    return a;\n}\n/**\n * Converts an `Number` to a `Uint8Array`\n * @param {Number} i\n * @return {Uint8Array}\n */\nconst intToUint8Array = function (i) {\n    const hex = intToHex(i);\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(`0x${padToEven(hex.slice(2))}`);\n};\n/**\n * Attempts to turn a value into a `Uint8Array`.\n * Inputs supported: `Uint8Array` `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toUint8Array()` method.\n * @param v the value\n */\nconst toUint8Array = function (v) {\n    var _a;\n    // eslint-disable-next-line no-null/no-null\n    if (v === null || v === undefined) {\n        return new Uint8Array();\n    }\n    if (v instanceof Uint8Array) {\n        return v;\n    }\n    if (((_a = v === null || v === void 0 ? void 0 : v.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Uint8Array') {\n        return Uint8Array.from(v);\n    }\n    if (Array.isArray(v)) {\n        return Uint8Array.from(v);\n    }\n    if (typeof v === 'string') {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexString)(v)) {\n            throw new Error(`Cannot convert string to Uint8Array. only supports 0x-prefixed hex strings and this string was given: ${v}`);\n        }\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(padToEven(stripHexPrefix(v)));\n    }\n    if (typeof v === 'number') {\n        return toUint8Array((0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(v));\n    }\n    if (typeof v === 'bigint') {\n        if (v < BigInt(0)) {\n            throw new Error(`Cannot convert negative bigint to Uint8Array. Given: ${v}`);\n        }\n        let n = v.toString(16);\n        if (n.length % 2)\n            n = `0${n}`;\n        return toUint8Array(`0x${n}`);\n    }\n    if (v.toArray) {\n        // converts a BN to a Uint8Array\n        return Uint8Array.from(v.toArray());\n    }\n    throw new Error('invalid type');\n};\n/**\n * Converts a {@link Uint8Array} to a {@link bigint}\n */\nfunction uint8ArrayToBigInt(buf) {\n    const hex = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(buf);\n    if (hex === '0x') {\n        return BigInt(0);\n    }\n    return BigInt(hex);\n}\n/**\n * Converts a {@link bigint} to a {@link Uint8Array}\n */\nfunction bigIntToUint8Array(num) {\n    return toUint8Array(`0x${num.toString(16)}`);\n}\n/**\n * Returns a Uint8Array filled with 0s.\n * @param bytes the number of bytes the Uint8Array should be\n */\nconst zeros = function (bytes) {\n    return new Uint8Array(bytes).fill(0);\n};\n/**\n * Pads a `Uint8Array` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Uint8Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Uint8Array)\n */\nconst setLength = function (msg, length, right) {\n    const buf = zeros(length);\n    if (right) {\n        if (msg.length < length) {\n            buf.set(msg);\n            return buf;\n        }\n        return msg.subarray(0, length);\n    }\n    if (msg.length < length) {\n        buf.set(msg, length - msg.length);\n        return buf;\n    }\n    return msg.subarray(-length);\n};\n/**\n * Throws if input is not a Uint8Array\n * @param {Uint8Array} input value to check\n */\nfunction assertIsUint8Array(input) {\n    if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isUint8Array)(input)) {\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        const msg = `This method only supports Uint8Array but input was: ${input}`;\n        throw new Error(msg);\n    }\n}\n/**\n * Left Pads a `Uint8Array` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Uint8Array)\n * @param length the number of bytes the output should be\n * @return (Uint8Array)\n */\nconst setLengthLeft = function (msg, length) {\n    assertIsUint8Array(msg);\n    return setLength(msg, length, false);\n};\n/**\n * Trims leading zeros from a `Uint8Array`, `String` or `Number[]`.\n * @param a (Uint8Array|Array|String)\n * @return (Uint8Array|Array|String)\n */\nfunction stripZeros(a) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n    let first = a[0];\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    while (a.length > 0 && first.toString() === '0') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, prefer-destructuring, @typescript-eslint/no-unsafe-call, no-param-reassign\n        a = a.slice(1);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, prefer-destructuring, @typescript-eslint/no-unsafe-member-access\n        first = a[0];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return a;\n}\n/**\n * Trims leading zeros from a `Uint8Array`.\n * @param a (Uint8Array)\n * @return (Uint8Array)\n */\nconst unpadUint8Array = function (a) {\n    assertIsUint8Array(a);\n    return stripZeros(a);\n};\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n */\nconst bigIntToHex = (num) => `0x${num.toString(16)}`;\n/**\n * Convert value from bigint to an unpadded Uint8Array\n * (useful for RLP transport)\n * @param value value to convert\n */\nfunction bigIntToUnpaddedUint8Array(value) {\n    return unpadUint8Array(bigIntToUint8Array(value));\n}\nfunction calculateSigRecovery(v, chainId) {\n    if (v === BigInt(0) || v === BigInt(1))\n        return v;\n    if (chainId === undefined) {\n        return v - BigInt(27);\n    }\n    return v - (chainId * BigInt(2) + BigInt(35));\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === BigInt(0) || recovery === BigInt(1);\n}\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nconst ecrecover = function (msgHash, v, r, s, chainId) {\n    const recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    const senderPubKey = new _tx_constants_js__WEBPACK_IMPORTED_MODULE_2__.secp256k1.Signature(uint8ArrayToBigInt(r), uint8ArrayToBigInt(s))\n        .addRecoveryBit(Number(recovery))\n        .recoverPublicKey(msgHash)\n        .toRawBytes(false);\n    return senderPubKey.slice(1);\n};\nfunction toType(input, outputType) {\n    // eslint-disable-next-line no-null/no-null\n    if (input === null) {\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n    if (input === undefined) {\n        return undefined;\n    }\n    if (typeof input === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isHexString)(input)) {\n        throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`);\n    }\n    else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n        throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n    }\n    const output = toUint8Array(input);\n    switch (outputType) {\n        case _types_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput.Uint8Array:\n            return output;\n        case _types_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput.BigInt:\n            return uint8ArrayToBigInt(output);\n        case _types_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput.Number: {\n            const bigInt = uint8ArrayToBigInt(output);\n            if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n                throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\n            }\n            return Number(bigInt);\n        }\n        case _types_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput.PrefixedHexString:\n            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(output);\n        default:\n            throw new Error('unknown outputType');\n    }\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessListEIP2930Transaction: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.AccessListEIP2930Transaction),\n/* harmony export */   BaseTransaction: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.BaseTransaction),\n/* harmony export */   Capability: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.Capability),\n/* harmony export */   Chain: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.Chain),\n/* harmony export */   Common: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.Common),\n/* harmony export */   ConsensusAlgorithm: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusAlgorithm),\n/* harmony export */   ConsensusType: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.ConsensusType),\n/* harmony export */   CustomChain: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.CustomChain),\n/* harmony export */   FeeMarketEIP1559Transaction: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.FeeMarketEIP1559Transaction),\n/* harmony export */   Hardfork: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.Hardfork),\n/* harmony export */   Transaction: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.Transaction),\n/* harmony export */   TransactionFactory: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.TransactionFactory),\n/* harmony export */   TypeOutput: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.TypeOutput),\n/* harmony export */   Wallet: () => (/* reexport safe */ _wallet_js__WEBPACK_IMPORTED_MODULE_0__.Wallet),\n/* harmony export */   assertIsUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.assertIsUint8Array),\n/* harmony export */   bigIntToHex: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex),\n/* harmony export */   bigIntToUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUint8Array),\n/* harmony export */   bigIntToUnpaddedUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array),\n/* harmony export */   create: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.create),\n/* harmony export */   decrypt: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.decrypt),\n/* harmony export */   ecrecover: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.ecrecover),\n/* harmony export */   encrypt: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.encrypt),\n/* harmony export */   hashMessage: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.hashMessage),\n/* harmony export */   intToUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.intToUint8Array),\n/* harmony export */   isAccessList: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.isAccessList),\n/* harmony export */   isAccessListUint8Array: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.isAccessListUint8Array),\n/* harmony export */   keyStoreSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.keyStoreSchema),\n/* harmony export */   padToEven: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.padToEven),\n/* harmony export */   parseAndValidatePrivateKey: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.parseAndValidatePrivateKey),\n/* harmony export */   parseGethGenesis: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.parseGethGenesis),\n/* harmony export */   privateKeyToAccount: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.privateKeyToAccount),\n/* harmony export */   privateKeyToAddress: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.privateKeyToAddress),\n/* harmony export */   privateKeyToPublicKey: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.privateKeyToPublicKey),\n/* harmony export */   recover: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.recover),\n/* harmony export */   recoverTransaction: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.recoverTransaction),\n/* harmony export */   setLengthLeft: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.setLengthLeft),\n/* harmony export */   sign: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.sign),\n/* harmony export */   signMessageWithPrivateKey: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.signMessageWithPrivateKey),\n/* harmony export */   signRaw: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.signRaw),\n/* harmony export */   signTransaction: () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_1__.signTransaction),\n/* harmony export */   stripHexPrefix: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.stripHexPrefix),\n/* harmony export */   stripZeros: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.stripZeros),\n/* harmony export */   toType: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.toType),\n/* harmony export */   toUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array),\n/* harmony export */   txUtils: () => (/* reexport safe */ _tx_index_js__WEBPACK_IMPORTED_MODULE_5__.txUtils),\n/* harmony export */   uint8ArrayToBigInt: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToBigInt),\n/* harmony export */   unpadUint8Array: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.unpadUint8Array),\n/* harmony export */   zeros: () => (/* reexport safe */ _common_index_js__WEBPACK_IMPORTED_MODULE_4__.zeros)\n/* harmony export */ });\n/* harmony import */ var _wallet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wallet.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/wallet.js\");\n/* harmony import */ var _account_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./account.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/account.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/types.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./schemas.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/schemas.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/index.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/index.js\");\n/* harmony import */ var _tx_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tx/index.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * The web3.eth.accounts contains functions to generate Ethereum accounts and sign transactions and data.\n *\n * **_NOTE:_** This package has NOT been audited and might potentially be unsafe. Take precautions to clear memory properly, store the private keys safely, and test transaction receiving and sending functionality properly before using in production!\n *\n *\n * To use this package standalone and use its methods use:\n * ```ts\n * import { create, decrypt } from 'web3-eth-accounts'; // ....\n * ```\n *\n * To use this package within the web3 object use:\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n * // now you have access to the accounts class\n * web3.eth.accounts.create();\n * ```\n */\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0JBQWtCLDBCQUEwQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNEI7QUFDQztBQUNGO0FBQ0U7QUFDSztBQUNKO0FBQzlCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG4vKipcbiAqIFRoZSB3ZWIzLmV0aC5hY2NvdW50cyBjb250YWlucyBmdW5jdGlvbnMgdG8gZ2VuZXJhdGUgRXRoZXJldW0gYWNjb3VudHMgYW5kIHNpZ24gdHJhbnNhY3Rpb25zIGFuZCBkYXRhLlxuICpcbiAqICoqX05PVEU6XyoqIFRoaXMgcGFja2FnZSBoYXMgTk9UIGJlZW4gYXVkaXRlZCBhbmQgbWlnaHQgcG90ZW50aWFsbHkgYmUgdW5zYWZlLiBUYWtlIHByZWNhdXRpb25zIHRvIGNsZWFyIG1lbW9yeSBwcm9wZXJseSwgc3RvcmUgdGhlIHByaXZhdGUga2V5cyBzYWZlbHksIGFuZCB0ZXN0IHRyYW5zYWN0aW9uIHJlY2VpdmluZyBhbmQgc2VuZGluZyBmdW5jdGlvbmFsaXR5IHByb3Blcmx5IGJlZm9yZSB1c2luZyBpbiBwcm9kdWN0aW9uIVxuICpcbiAqXG4gKiBUbyB1c2UgdGhpcyBwYWNrYWdlIHN0YW5kYWxvbmUgYW5kIHVzZSBpdHMgbWV0aG9kcyB1c2U6XG4gKiBgYGB0c1xuICogaW1wb3J0IHsgY3JlYXRlLCBkZWNyeXB0IH0gZnJvbSAnd2ViMy1ldGgtYWNjb3VudHMnOyAvLyAuLi4uXG4gKiBgYGBcbiAqXG4gKiBUbyB1c2UgdGhpcyBwYWNrYWdlIHdpdGhpbiB0aGUgd2ViMyBvYmplY3QgdXNlOlxuICpcbiAqIGBgYHRzXG4gKiBpbXBvcnQgV2ViMyBmcm9tICd3ZWIzJztcbiAqXG4gKiBjb25zdCB3ZWIzID0gbmV3IFdlYjMoV2ViMy5naXZlblByb3ZpZGVyIHx8ICd3czovL3NvbWUubG9jYWwtb3ItcmVtb3RlLm5vZGU6ODU0NicpO1xuICogLy8gbm93IHlvdSBoYXZlIGFjY2VzcyB0byB0aGUgYWNjb3VudHMgY2xhc3NcbiAqIHdlYjMuZXRoLmFjY291bnRzLmNyZWF0ZSgpO1xuICogYGBgXG4gKi9cbmV4cG9ydCAqIGZyb20gJy4vd2FsbGV0LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYWNjb3VudC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3R5cGVzLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vc2NoZW1hcy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvbW1vbi9pbmRleC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3R4L2luZGV4LmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/schemas.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/schemas.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keyStoreSchema: () => (/* binding */ keyStoreSchema)\n/* harmony export */ });\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nconst keyStoreSchema = {\n    type: 'object',\n    required: ['crypto', 'id', 'version', 'address'],\n    properties: {\n        crypto: {\n            type: 'object',\n            required: ['cipher', 'ciphertext', 'cipherparams', 'kdf', 'kdfparams', 'mac'],\n            properties: {\n                cipher: { type: 'string' },\n                ciphertext: { type: 'string' },\n                cipherparams: { type: 'object' },\n                kdf: { type: 'string' },\n                kdfparams: { type: 'object' },\n                salt: { type: 'string' },\n                mac: { type: 'string' },\n            },\n        },\n        id: { type: 'string' },\n        version: { type: 'number' },\n        address: { type: 'string' },\n    },\n};\n//# sourceMappingURL=schemas.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS9zY2hlbWFzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixnQkFBZ0I7QUFDMUMsOEJBQThCLGdCQUFnQjtBQUM5QyxnQ0FBZ0MsZ0JBQWdCO0FBQ2hELHVCQUF1QixnQkFBZ0I7QUFDdkMsNkJBQTZCLGdCQUFnQjtBQUM3Qyx3QkFBd0IsZ0JBQWdCO0FBQ3hDLHVCQUF1QixnQkFBZ0I7QUFDdkMsYUFBYTtBQUNiLFNBQVM7QUFDVCxjQUFjLGdCQUFnQjtBQUM5QixtQkFBbUIsZ0JBQWdCO0FBQ25DLG1CQUFtQixnQkFBZ0I7QUFDbkMsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFxzY2hlbWFzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuZXhwb3J0IGNvbnN0IGtleVN0b3JlU2NoZW1hID0ge1xuICAgIHR5cGU6ICdvYmplY3QnLFxuICAgIHJlcXVpcmVkOiBbJ2NyeXB0bycsICdpZCcsICd2ZXJzaW9uJywgJ2FkZHJlc3MnXSxcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgIGNyeXB0bzoge1xuICAgICAgICAgICAgdHlwZTogJ29iamVjdCcsXG4gICAgICAgICAgICByZXF1aXJlZDogWydjaXBoZXInLCAnY2lwaGVydGV4dCcsICdjaXBoZXJwYXJhbXMnLCAna2RmJywgJ2tkZnBhcmFtcycsICdtYWMnXSxcbiAgICAgICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgICBjaXBoZXI6IHsgdHlwZTogJ3N0cmluZycgfSxcbiAgICAgICAgICAgICAgICBjaXBoZXJ0ZXh0OiB7IHR5cGU6ICdzdHJpbmcnIH0sXG4gICAgICAgICAgICAgICAgY2lwaGVycGFyYW1zOiB7IHR5cGU6ICdvYmplY3QnIH0sXG4gICAgICAgICAgICAgICAga2RmOiB7IHR5cGU6ICdzdHJpbmcnIH0sXG4gICAgICAgICAgICAgICAga2RmcGFyYW1zOiB7IHR5cGU6ICdvYmplY3QnIH0sXG4gICAgICAgICAgICAgICAgc2FsdDogeyB0eXBlOiAnc3RyaW5nJyB9LFxuICAgICAgICAgICAgICAgIG1hYzogeyB0eXBlOiAnc3RyaW5nJyB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgaWQ6IHsgdHlwZTogJ3N0cmluZycgfSxcbiAgICAgICAgdmVyc2lvbjogeyB0eXBlOiAnbnVtYmVyJyB9LFxuICAgICAgICBhZGRyZXNzOiB7IHR5cGU6ICdzdHJpbmcnIH0sXG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zY2hlbWFzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/schemas.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/address.js":
/*!**************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/address.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Address: () => (/* binding */ Address)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\nclass Address {\n    constructor(buf) {\n        if (buf.length !== 20) {\n            throw new Error('Invalid address length');\n        }\n        this.buf = buf;\n    }\n    /**\n     * Returns the zero address.\n     */\n    static zero() {\n        return new Address((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_3__.zeros)(20));\n    }\n    /**\n     * Is address equal to another.\n     */\n    equals(address) {\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayEquals)(this.buf, address.buf);\n    }\n    /**\n     * Is address zero.\n     */\n    isZero() {\n        return this.equals(Address.zero());\n    }\n    /**\n     * Returns hex encoding of address.\n     */\n    toString() {\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(this.buf);\n    }\n    /**\n     * Returns Uint8Array representation of address.\n     */\n    toArray() {\n        return this.buf;\n    }\n    /**\n     * Returns the ethereum address of a given public key.\n     * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n     * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n     * @param sanitize Accept public keys in other formats\n     */\n    static publicToAddress(_pubKey, sanitize = false) {\n        let pubKey = _pubKey;\n        (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_3__.assertIsUint8Array)(pubKey);\n        if (sanitize && pubKey.length !== 64) {\n            pubKey = _constants_js__WEBPACK_IMPORTED_MODULE_2__.secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1);\n        }\n        if (pubKey.length !== 64) {\n            throw new Error('Expected pubKey to be of length 64');\n        }\n        // Only take the lower 160bits of the hash\n        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(pubKey).slice(-20);\n    }\n}\n//# sourceMappingURL=address.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eC9hZGRyZXNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUM0RDtBQUNGO0FBQ2Y7QUFDb0I7QUFDeEQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix1REFBSztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw0REFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxvRUFBa0I7QUFDMUI7QUFDQSxxQkFBcUIsb0RBQVM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMEVBQVM7QUFDeEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcdHhcXGFkZHJlc3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBrZWNjYWsyNTYgfSBmcm9tICdldGhlcmV1bS1jcnlwdG9ncmFwaHkva2VjY2FrLmpzJztcbmltcG9ydCB7IGJ5dGVzVG9IZXgsIHVpbnQ4QXJyYXlFcXVhbHMgfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IHNlY3AyNTZrMSB9IGZyb20gJy4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IGFzc2VydElzVWludDhBcnJheSwgemVyb3MgfSBmcm9tICcuLi9jb21tb24vdXRpbHMuanMnO1xuZXhwb3J0IGNsYXNzIEFkZHJlc3Mge1xuICAgIGNvbnN0cnVjdG9yKGJ1Zikge1xuICAgICAgICBpZiAoYnVmLmxlbmd0aCAhPT0gMjApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBhZGRyZXNzIGxlbmd0aCcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYnVmID0gYnVmO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSB6ZXJvIGFkZHJlc3MuXG4gICAgICovXG4gICAgc3RhdGljIHplcm8oKSB7XG4gICAgICAgIHJldHVybiBuZXcgQWRkcmVzcyh6ZXJvcygyMCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJcyBhZGRyZXNzIGVxdWFsIHRvIGFub3RoZXIuXG4gICAgICovXG4gICAgZXF1YWxzKGFkZHJlc3MpIHtcbiAgICAgICAgcmV0dXJuIHVpbnQ4QXJyYXlFcXVhbHModGhpcy5idWYsIGFkZHJlc3MuYnVmKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSXMgYWRkcmVzcyB6ZXJvLlxuICAgICAqL1xuICAgIGlzWmVybygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXF1YWxzKEFkZHJlc3MuemVybygpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBoZXggZW5jb2Rpbmcgb2YgYWRkcmVzcy5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGJ5dGVzVG9IZXgodGhpcy5idWYpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIFVpbnQ4QXJyYXkgcmVwcmVzZW50YXRpb24gb2YgYWRkcmVzcy5cbiAgICAgKi9cbiAgICB0b0FycmF5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5idWY7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGV0aGVyZXVtIGFkZHJlc3Mgb2YgYSBnaXZlbiBwdWJsaWMga2V5LlxuICAgICAqIEFjY2VwdHMgXCJFdGhlcmV1bSBwdWJsaWMga2V5c1wiIGFuZCBTRUMxIGVuY29kZWQga2V5cy5cbiAgICAgKiBAcGFyYW0gcHViS2V5IFRoZSB0d28gcG9pbnRzIG9mIGFuIHVuY29tcHJlc3NlZCBrZXksIHVubGVzcyBzYW5pdGl6ZSBpcyBlbmFibGVkXG4gICAgICogQHBhcmFtIHNhbml0aXplIEFjY2VwdCBwdWJsaWMga2V5cyBpbiBvdGhlciBmb3JtYXRzXG4gICAgICovXG4gICAgc3RhdGljIHB1YmxpY1RvQWRkcmVzcyhfcHViS2V5LCBzYW5pdGl6ZSA9IGZhbHNlKSB7XG4gICAgICAgIGxldCBwdWJLZXkgPSBfcHViS2V5O1xuICAgICAgICBhc3NlcnRJc1VpbnQ4QXJyYXkocHViS2V5KTtcbiAgICAgICAgaWYgKHNhbml0aXplICYmIHB1YktleS5sZW5ndGggIT09IDY0KSB7XG4gICAgICAgICAgICBwdWJLZXkgPSBzZWNwMjU2azEuUHJvamVjdGl2ZVBvaW50LmZyb21IZXgocHViS2V5KS50b1Jhd0J5dGVzKGZhbHNlKS5zbGljZSgxKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHViS2V5Lmxlbmd0aCAhPT0gNjQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgcHViS2V5IHRvIGJlIG9mIGxlbmd0aCA2NCcpO1xuICAgICAgICB9XG4gICAgICAgIC8vIE9ubHkgdGFrZSB0aGUgbG93ZXIgMTYwYml0cyBvZiB0aGUgaGFzaFxuICAgICAgICByZXR1cm4ga2VjY2FrMjU2KHB1YktleSkuc2xpY2UoLTIwKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGRyZXNzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/address.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js":
/*!**********************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseTransaction: () => (/* binding */ BaseTransaction)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/* harmony import */ var _common_common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/common.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/common.js\");\n/* harmony import */ var _common_enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/enums.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/enums.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/types.js\");\n/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./address.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/address.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n\n\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nclass BaseTransaction {\n    constructor(txData, opts) {\n        var _a, _b;\n        this.cache = {\n            hash: undefined,\n            dataFee: undefined,\n        };\n        /**\n         * List of tx type defining EIPs,\n         * e.g. 1559 (fee market) and 2930 (access lists)\n         * for FeeMarketEIP1559Transaction objects\n         */\n        this.activeCapabilities = [];\n        /**\n         * The default chain the tx falls back to if no Common\n         * is provided and if the chain can't be derived from\n         * a passed in chainId (only EIP-2718 typed txs) or\n         * EIP-155 signature (legacy txs).\n         *\n         * @hidden\n         */\n        this.DEFAULT_CHAIN = _common_enums_js__WEBPACK_IMPORTED_MODULE_4__.Chain.Mainnet;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        this.DEFAULT_HARDFORK = _common_enums_js__WEBPACK_IMPORTED_MODULE_4__.Hardfork.Merge;\n        const { nonce, gasLimit, to, value, data, v, r, s, type } = txData;\n        this._type = Number((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(type)));\n        this.txOptions = opts;\n        const toB = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(to === '' ? '0x' : to);\n        const vB = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(v === '' ? '0x' : v);\n        const rB = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(r === '' ? '0x' : r);\n        const sB = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(s === '' ? '0x' : s);\n        this.nonce = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(nonce === '' ? '0x' : nonce));\n        this.gasLimit = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(gasLimit === '' ? '0x' : gasLimit));\n        this.to = toB.length > 0 ? new _address_js__WEBPACK_IMPORTED_MODULE_6__.Address(toB) : undefined;\n        this.value = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(value === '' ? '0x' : value));\n        this.data = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(data === '' ? '0x' : data);\n        this.v = vB.length > 0 ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)(vB) : undefined;\n        this.r = rB.length > 0 ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)(rB) : undefined;\n        this.s = sB.length > 0 ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)(sB) : undefined;\n        this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s });\n        // geth limits gasLimit to 2^64-1\n        this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64);\n        // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n        this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true);\n        // eslint-disable-next-line no-null/no-null\n        const createContract = this.to === undefined || this.to === null;\n        const allowUnlimitedInitCodeSize = (_a = opts.allowUnlimitedInitCodeSize) !== null && _a !== void 0 ? _a : false;\n        const common = (_b = opts.common) !== null && _b !== void 0 ? _b : this._getCommon();\n        if (createContract && common.isActivatedEIP(3860) && !allowUnlimitedInitCodeSize) {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.checkMaxInitCodeSize)(common, this.data.length);\n        }\n    }\n    /**\n     * Returns the transaction type.\n     *\n     * Note: legacy txs will return tx type `0`.\n     */\n    get type() {\n        return this._type;\n    }\n    /**\n     * Checks if a tx type defining capability is active\n     * on a tx, for example the EIP-1559 fee market mechanism\n     * or the EIP-2930 access list feature.\n     *\n     * Note that this is different from the tx type itself,\n     * so EIP-2930 access lists can very well be active\n     * on an EIP-1559 tx for example.\n     *\n     * This method can be useful for feature checks if the\n     * tx type is unknown (e.g. when instantiated with\n     * the tx factory).\n     *\n     * See `Capabilites` in the `types` module for a reference\n     * on all supported capabilities.\n     */\n    supports(capability) {\n        return this.activeCapabilities.includes(capability);\n    }\n    validate(stringError = false) {\n        const errors = [];\n        if (this.getBaseFee() > this.gasLimit) {\n            errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`);\n        }\n        if (this.isSigned() && !this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        return stringError ? errors : errors.length === 0;\n    }\n    _validateYParity() {\n        const { v } = this;\n        if (v !== undefined && v !== BigInt(0) && v !== BigInt(1)) {\n            const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n    }\n    /**\n     * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.\n     * Reasoning: https://ethereum.stackexchange.com/a/55728\n     */\n    _validateHighS() {\n        const { s } = this;\n        if (this.common.gteHardfork('homestead') && s !== undefined && s > _constants_js__WEBPACK_IMPORTED_MODULE_1__.SECP256K1_ORDER_DIV_2) {\n            const msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n    }\n    /**\n     * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    getBaseFee() {\n        const txFee = this.common.param('gasPrices', 'tx');\n        let fee = this.getDataFee();\n        if (txFee)\n            fee += txFee;\n        if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n            const txCreationFee = this.common.param('gasPrices', 'txCreation');\n            if (txCreationFee)\n                fee += txCreationFee;\n        }\n        return fee;\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    getDataFee() {\n        const txDataZero = this.common.param('gasPrices', 'txDataZero');\n        const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n        let cost = BigInt(0);\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < this.data.length; i += 1) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions, no-unused-expressions\n            this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero);\n        }\n        // eslint-disable-next-line no-null/no-null\n        if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n            const dataLength = BigInt(Math.ceil(this.data.length / 32));\n            const initCodeCost = this.common.param('gasPrices', 'initCodeWordCost') * dataLength;\n            cost += initCodeCost;\n        }\n        return cost;\n    }\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    toCreationAddress() {\n        return this.to === undefined || this.to.buf.length === 0;\n    }\n    isSigned() {\n        const { v, r, s } = this;\n        if (v === undefined || r === undefined || s === undefined) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Determines if the signature is valid\n     */\n    verifySignature() {\n        try {\n            // Main signature verification is done in `getSenderPublicKey()`\n            const publicKey = this.getSenderPublicKey();\n            return (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.unpadUint8Array)(publicKey).length !== 0;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Returns the sender's address\n     */\n    getSenderAddress() {\n        return new _address_js__WEBPACK_IMPORTED_MODULE_6__.Address(_address_js__WEBPACK_IMPORTED_MODULE_6__.Address.publicToAddress(this.getSenderPublicKey()));\n    }\n    /**\n     * Signs a transaction.\n     *\n     * Note that the signed tx is returned as a new object,\n     * use as follows:\n     * ```javascript\n     * const signedTx = tx.sign(privateKey)\n     * ```\n     */\n    sign(privateKey) {\n        if (privateKey.length !== 32) {\n            const msg = this._errorMsg('Private key must be 32 bytes in length.');\n            throw new Error(msg);\n        }\n        // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n        // and want to recreate a signature (where EIP155 should be applied)\n        // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n        // 2021-06-23\n        let hackApplied = false;\n        if (this.type === 0 &&\n            this.common.gteHardfork('spuriousDragon') &&\n            !this.supports(_types_js__WEBPACK_IMPORTED_MODULE_5__.Capability.EIP155ReplayProtection)) {\n            this.activeCapabilities.push(_types_js__WEBPACK_IMPORTED_MODULE_5__.Capability.EIP155ReplayProtection);\n            hackApplied = true;\n        }\n        const msgHash = this.getMessageToSign(true);\n        const { v, r, s } = this._ecsign(msgHash, privateKey);\n        const tx = this._processSignature(v, r, s);\n        // Hack part 2\n        if (hackApplied) {\n            const index = this.activeCapabilities.indexOf(_types_js__WEBPACK_IMPORTED_MODULE_5__.Capability.EIP155ReplayProtection);\n            if (index > -1) {\n                this.activeCapabilities.splice(index, 1);\n            }\n        }\n        return tx;\n    }\n    /**\n     * Does chain ID checks on common and returns a common\n     * to be used on instantiation\n     * @hidden\n     *\n     * @param common - {@link Common} instance from tx options\n     * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n     */\n    _getCommon(common, chainId) {\n        var _a, _b, _c, _d;\n        // TODO: this function needs to be reviewed and the code to be more clean\n        // check issue https://github.com/web3/web3.js/issues/6666\n        // Chain ID provided\n        if (chainId !== undefined) {\n            const chainIdBigInt = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_2__.toUint8Array)(chainId));\n            if (common) {\n                if (common.chainId() !== chainIdBigInt) {\n                    const msg = this._errorMsg('The chain ID does not match the chain ID of Common');\n                    throw new Error(msg);\n                }\n                // Common provided, chain ID does match\n                // -> Return provided Common\n                return common.copy();\n            }\n            if (_common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common.isSupportedChainId(chainIdBigInt)) {\n                // No Common, chain ID supported by Common\n                // -> Instantiate Common with chain ID\n                return new _common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common({ chain: chainIdBigInt, hardfork: this.DEFAULT_HARDFORK });\n            }\n            // No Common, chain ID not supported by Common\n            // -> Instantiate custom Common derived from DEFAULT_CHAIN\n            return _common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common.custom({\n                name: 'custom-chain',\n                networkId: chainIdBigInt,\n                chainId: chainIdBigInt,\n            }, { baseChain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK });\n        }\n        // No chain ID provided\n        // -> return Common provided or create new default Common\n        if ((common === null || common === void 0 ? void 0 : common.copy) && typeof (common === null || common === void 0 ? void 0 : common.copy) === 'function') {\n            return common.copy();\n        }\n        // TODO: Recheck this next block when working on https://github.com/web3/web3.js/issues/6666\n        // This block is to handle when `chainId` was not passed and the `common` object does not have `copy()`\n        // If it was meant to be unsupported to process `common` in this case, an exception should be thrown instead of the following block\n        if (common) {\n            const hardfork = typeof common.hardfork === 'function'\n                ? common.hardfork()\n                : // eslint-disable-next-line @typescript-eslint/unbound-method\n                    common.hardfork;\n            return _common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common.custom({\n                name: 'custom-chain',\n                networkId: common.networkId\n                    ? common.networkId()\n                    : (_b = BigInt((_a = common.customChain) === null || _a === void 0 ? void 0 : _a.networkId)) !== null && _b !== void 0 ? _b : undefined,\n                chainId: common.chainId\n                    ? common.chainId()\n                    : (_d = BigInt((_c = common.customChain) === null || _c === void 0 ? void 0 : _c.chainId)) !== null && _d !== void 0 ? _d : undefined,\n            }, {\n                baseChain: this.DEFAULT_CHAIN,\n                hardfork: hardfork || this.DEFAULT_HARDFORK,\n            });\n        }\n        return new _common_common_js__WEBPACK_IMPORTED_MODULE_3__.Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK });\n    }\n    /**\n     * Validates that an object with BigInt values cannot exceed the specified bit limit.\n     * @param values Object containing string keys and BigInt values\n     * @param bits Number of bits to check (64 or 256)\n     * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n     */\n    _validateCannotExceedMaxInteger(values, bits = 256, cannotEqual = false) {\n        for (const [key, value] of Object.entries(values)) {\n            switch (bits) {\n                case 64:\n                    if (cannotEqual) {\n                        if (value !== undefined && value >= _constants_js__WEBPACK_IMPORTED_MODULE_1__.MAX_UINT64) {\n                            const msg = this._errorMsg(`${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`);\n                            throw new Error(msg);\n                        }\n                    }\n                    else if (value !== undefined && value > _constants_js__WEBPACK_IMPORTED_MODULE_1__.MAX_UINT64) {\n                        const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`);\n                        throw new Error(msg);\n                    }\n                    break;\n                case 256:\n                    if (cannotEqual) {\n                        if (value !== undefined && value >= _constants_js__WEBPACK_IMPORTED_MODULE_1__.MAX_INTEGER) {\n                            const msg = this._errorMsg(`${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`);\n                            throw new Error(msg);\n                        }\n                    }\n                    else if (value !== undefined && value > _constants_js__WEBPACK_IMPORTED_MODULE_1__.MAX_INTEGER) {\n                        const msg = this._errorMsg(`${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`);\n                        throw new Error(msg);\n                    }\n                    break;\n                default: {\n                    const msg = this._errorMsg('unimplemented bits value');\n                    throw new Error(msg);\n                }\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static _validateNotArray(values) {\n        const txDataKeys = [\n            'nonce',\n            'gasPrice',\n            'gasLimit',\n            'to',\n            'value',\n            'data',\n            'v',\n            'r',\n            's',\n            'type',\n            'baseFee',\n            'maxFeePerGas',\n            'chainId',\n        ];\n        for (const [key, value] of Object.entries(values)) {\n            if (txDataKeys.includes(key)) {\n                if (Array.isArray(value)) {\n                    throw new Error(`${key} cannot be an array`);\n                }\n            }\n        }\n    }\n    /**\n     * Returns the shared error postfix part for _error() method\n     * tx type implementations.\n     */\n    _getSharedErrorPostfix() {\n        let hash = '';\n        try {\n            hash = this.isSigned() ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(this.hash()) : 'not available (unsigned)';\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        let isSigned = '';\n        try {\n            isSigned = this.isSigned().toString();\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        let hf = '';\n        try {\n            hf = this.common.hardfork();\n        }\n        catch (e) {\n            hf = 'error';\n        }\n        let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `;\n        postfix += `signed=${isSigned} hf=${hf}`;\n        return postfix;\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _ecsign(msgHash, privateKey, chainId) {\n        const signature = _constants_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1.sign(msgHash, privateKey);\n        const signatureBytes = signature.toCompactRawBytes();\n        const r = signatureBytes.subarray(0, 32);\n        const s = signatureBytes.subarray(32, 64);\n        const v = chainId === undefined\n            ? BigInt(signature.recovery + 27)\n            : BigInt(signature.recovery + 35) + BigInt(chainId) * BigInt(2);\n        return { r, s, v };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static fromSerializedTx(\n    // @ts-expect-error unused variable\n    serialized, \n    // @ts-expect-error unused variable\n    opts = {}) { }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static fromTxData(\n    // @ts-expect-error unused variable\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    txData, \n    // @ts-expect-error unused variable\n    opts = {}) { }\n}\n//# sourceMappingURL=baseTransaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/constants.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_INTEGER: () => (/* binding */ MAX_INTEGER),\n/* harmony export */   MAX_UINT64: () => (/* binding */ MAX_UINT64),\n/* harmony export */   SECP256K1_ORDER: () => (/* binding */ SECP256K1_ORDER),\n/* harmony export */   SECP256K1_ORDER_DIV_2: () => (/* binding */ SECP256K1_ORDER_DIV_2),\n/* harmony export */   secp256k1: () => (/* binding */ secp256k1)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_secp256k1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/secp256k1.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/secp256k1.js\");\nvar _a;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line import/extensions\n\nconst secp256k1 = (_a = ethereum_cryptography_secp256k1_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1) !== null && _a !== void 0 ? _a : ethereum_cryptography_secp256k1_js__WEBPACK_IMPORTED_MODULE_0__;\n/**\n * 2^64-1\n */\nconst MAX_UINT64 = BigInt('0xffffffffffffffff');\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nconst MAX_INTEGER = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst SECP256K1_ORDER = secp256k1.CURVE.n;\nconst SECP256K1_ORDER_DIV_2 = SECP256K1_ORDER / BigInt(2);\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eC9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDMkU7QUFDcEUsd0JBQXdCLHlFQUE4QixtQ0FBbUMsK0RBQW9CO0FBQ3BIO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNBO0FBQ1AiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFx0eFxcY29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfYTtcbi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9leHRlbnNpb25zXG5pbXBvcnQgKiBhcyBldGhlcmV1bUNyeXB0b2dyYXBoeSBmcm9tICdldGhlcmV1bS1jcnlwdG9ncmFwaHkvc2VjcDI1NmsxLmpzJztcbmV4cG9ydCBjb25zdCBzZWNwMjU2azEgPSAoX2EgPSBldGhlcmV1bUNyeXB0b2dyYXBoeS5zZWNwMjU2azEpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGV0aGVyZXVtQ3J5cHRvZ3JhcGh5O1xuLyoqXG4gKiAyXjY0LTFcbiAqL1xuZXhwb3J0IGNvbnN0IE1BWF9VSU5UNjQgPSBCaWdJbnQoJzB4ZmZmZmZmZmZmZmZmZmZmZicpO1xuLyoqXG4gKiBUaGUgbWF4IGludGVnZXIgdGhhdCB0aGUgZXZtIGNhbiBoYW5kbGUgKDJeMjU2LTEpXG4gKi9cbmV4cG9ydCBjb25zdCBNQVhfSU5URUdFUiA9IEJpZ0ludCgnMHhmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmJyk7XG5leHBvcnQgY29uc3QgU0VDUDI1NksxX09SREVSID0gc2VjcDI1NmsxLkNVUlZFLm47XG5leHBvcnQgY29uc3QgU0VDUDI1NksxX09SREVSX0RJVl8yID0gU0VDUDI1NksxX09SREVSIC8gQmlnSW50KDIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FeeMarketEIP1559Transaction: () => (/* binding */ FeeMarketEIP1559Transaction)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethereumjs/rlp */ \"(ssr)/./node_modules/@ethereumjs/rlp/dist/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _baseTransaction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./baseTransaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/utils.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n\n\n\nconst TRANSACTION_TYPE = 2;\nconst TRANSACTION_TYPE_UINT8ARRAY = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(TRANSACTION_TYPE.toString(16).padStart(2, '0'));\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\n// eslint-disable-next-line no-use-before-define\nclass FeeMarketEIP1559Transaction extends _baseTransaction_js__WEBPACK_IMPORTED_MODULE_5__.BaseTransaction {\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    static fromTxData(txData, opts = {}) {\n        return new FeeMarketEIP1559Transaction(txData, opts);\n    }\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     */\n    static fromSerializedTx(serialized, opts = {}) {\n        if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayEquals)(serialized.subarray(0, 1), TRANSACTION_TYPE_UINT8ARRAY)) {\n            throw new Error(`Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(serialized.subarray(0, 1))}`);\n        }\n        const values = _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.decode(serialized.subarray(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return FeeMarketEIP1559Transaction.fromValuesArray(values, opts);\n    }\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     */\n    static fromValuesArray(values, opts = {}) {\n        if (values.length !== 9 && values.length !== 12) {\n            throw new Error('Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).');\n        }\n        const [chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data, accessList, v, r, s,] = values;\n        this._validateNotArray({ chainId, v });\n        (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.validateNoLeadingZeroes)({\n            nonce,\n            maxPriorityFeePerGas,\n            maxFeePerGas,\n            gasLimit,\n            value,\n            v,\n            r,\n            s,\n        });\n        return new FeeMarketEIP1559Transaction({\n            chainId: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)(chainId),\n            nonce,\n            maxPriorityFeePerGas,\n            maxFeePerGas,\n            gasLimit,\n            to,\n            value,\n            data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : [],\n            v: v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n            r,\n            s,\n        }, opts);\n    }\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    constructor(txData, opts = {}) {\n        var _a;\n        super(Object.assign(Object.assign({}, txData), { type: TRANSACTION_TYPE }), opts);\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        this.DEFAULT_HARDFORK = 'london';\n        const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData;\n        this.common = this._getCommon(opts.common, chainId);\n        this.chainId = this.common.chainId();\n        if (!this.common.isActivatedEIP(1559)) {\n            throw new Error('EIP-1559 not enabled on Common');\n        }\n        this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930]);\n        // Populate the access list fields\n        const accessListData = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.getAccessListData)(accessList !== null && accessList !== void 0 ? accessList : []);\n        this.accessList = accessListData.accessList;\n        this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.verifyAccessList)(this.accessList);\n        this.maxFeePerGas = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.toUint8Array)(maxFeePerGas === '' ? '0x' : maxFeePerGas));\n        this.maxPriorityFeePerGas = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.toUint8Array)(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas));\n        this._validateCannotExceedMaxInteger({\n            maxFeePerGas: this.maxFeePerGas,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        });\n        _baseTransaction_js__WEBPACK_IMPORTED_MODULE_5__.BaseTransaction._validateNotArray(txData);\n        if (this.gasLimit * this.maxFeePerGas > _constants_js__WEBPACK_IMPORTED_MODULE_4__.MAX_INTEGER) {\n            const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n            const msg = this._errorMsg('maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)');\n            throw new Error(msg);\n        }\n        this._validateYParity();\n        this._validateHighS();\n        const freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    getDataFee() {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        let cost = super.getDataFee();\n        cost += BigInt((0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.getDataFeeEIP2930)(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    }\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     * @param baseFee The base fee of the block (will be set to 0 if not provided)\n     */\n    getUpfrontCost(baseFee = BigInt(0)) {\n        const prio = this.maxPriorityFeePerGas;\n        const maxBase = this.maxFeePerGas - baseFee;\n        const inclusionFeePerGas = prio < maxBase ? prio : maxBase;\n        const gasPrice = inclusionFeePerGas + baseFee;\n        return this.gasLimit * gasPrice + this.value;\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Uint8Arrays of the EIP-1559 transaction, in order.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     *\n     * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Uint8Array values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n     */\n    raw() {\n        return [\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.chainId),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.nonce),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.maxPriorityFeePerGas),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.maxFeePerGas),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Uint8Array.from([]),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.v) : Uint8Array.from([]),\n            this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.r) : Uint8Array.from([]),\n            this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(this.s) : Uint8Array.from([]),\n        ];\n    }\n    /**\n     * Returns the serialized encoding of the EIP-1559 transaction.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    serialize() {\n        const base = this.raw();\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayConcat)(TRANSACTION_TYPE_UINT8ARRAY, _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.encode(base));\n    }\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    getMessageToSign(hashMessage = true) {\n        const base = this.raw().slice(0, 9);\n        const message = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayConcat)(TRANSACTION_TYPE_UINT8ARRAY, _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.encode(base));\n        if (hashMessage) {\n            return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(message);\n        }\n        return message;\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    hash() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(this.serialize());\n    }\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    getMessageToVerifySignature() {\n        return this.getMessageToSign();\n    }\n    /**\n     * Returns the public key of the sender\n     */\n    getSenderPublicKey() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        const msgHash = this.getMessageToVerifySignature();\n        const { v, r, s } = this;\n        this._validateHighS();\n        try {\n            return (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.ecrecover)(msgHash, v + BigInt(27), // Recover the 27 which was stripped from ecsign\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(r), (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToUnpaddedUint8Array)(s));\n        }\n        catch (e) {\n            const msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    }\n    _processSignature(v, r, s) {\n        const opts = Object.assign(Object.assign({}, this.txOptions), { common: this.common });\n        return FeeMarketEIP1559Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: v - BigInt(27), // This looks extremely hacky: /util actually adds 27 to the value, the recovery bit is either 0 or 1.\n            r: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)(r),\n            s: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToBigInt)(s),\n        }, opts);\n    }\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    toJSON() {\n        const accessListJSON = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.getAccessListJSON)(this.accessList);\n        return {\n            chainId: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.chainId),\n            nonce: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.nonce),\n            maxPriorityFeePerGas: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.maxPriorityFeePerGas),\n            maxFeePerGas: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.maxFeePerGas),\n            gasLimit: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.value),\n            data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(this.data),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_7__.bigIntToHex)(this.s) : undefined,\n        };\n    }\n    /**\n     * Return a compact error string representation of the object\n     */\n    errorStr() {\n        let errorStr = this._getSharedErrorPostfix();\n        errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    _errorMsg(msg) {\n        return `${msg} (${this.errorStr()})`;\n    }\n}\n//# sourceMappingURL=eip1559Transaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessListEIP2930Transaction: () => (/* binding */ AccessListEIP2930Transaction)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethereumjs/rlp */ \"(ssr)/./node_modules/@ethereumjs/rlp/dist/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/utils.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/* harmony import */ var _baseTransaction_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./baseTransaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n\n\n\nconst TRANSACTION_TYPE = 1;\nconst TRANSACTION_TYPE_UINT8ARRAY = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(TRANSACTION_TYPE.toString(16).padStart(2, '0'));\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\n// eslint-disable-next-line no-use-before-define\nclass AccessListEIP2930Transaction extends _baseTransaction_js__WEBPACK_IMPORTED_MODULE_7__.BaseTransaction {\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    static fromTxData(txData, opts = {}) {\n        return new AccessListEIP2930Transaction(txData, opts);\n    }\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     */\n    static fromSerializedTx(serialized, opts = {}) {\n        if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayEquals)(serialized.subarray(0, 1), TRANSACTION_TYPE_UINT8ARRAY)) {\n            throw new Error(`Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(serialized.subarray(0, 1))}`);\n        }\n        const values = _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.decode(Uint8Array.from(serialized.subarray(1)));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return AccessListEIP2930Transaction.fromValuesArray(values, opts);\n    }\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     */\n    static fromValuesArray(values, opts = {}) {\n        if (values.length !== 8 && values.length !== 11) {\n            throw new Error('Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).');\n        }\n        const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values;\n        this._validateNotArray({ chainId, v });\n        (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.validateNoLeadingZeroes)({ nonce, gasPrice, gasLimit, value, v, r, s });\n        const emptyAccessList = [];\n        return new AccessListEIP2930Transaction({\n            chainId: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)(chainId),\n            nonce,\n            gasPrice,\n            gasLimit,\n            to,\n            value,\n            data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : emptyAccessList,\n            v: v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n            r,\n            s,\n        }, opts);\n    }\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    constructor(txData, opts = {}) {\n        var _a;\n        super(Object.assign(Object.assign({}, txData), { type: TRANSACTION_TYPE }), opts);\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        this.DEFAULT_HARDFORK = 'berlin';\n        const { chainId, accessList, gasPrice } = txData;\n        this.common = this._getCommon(opts.common, chainId);\n        this.chainId = this.common.chainId();\n        // EIP-2718 check is done in Common\n        if (!this.common.isActivatedEIP(2930)) {\n            throw new Error('EIP-2930 not enabled on Common');\n        }\n        this.activeCapabilities = this.activeCapabilities.concat([2718, 2930]);\n        // Populate the access list fields\n        const accessListData = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getAccessListData)(accessList !== null && accessList !== void 0 ? accessList : []);\n        this.accessList = accessListData.accessList;\n        this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.verifyAccessList)(this.accessList);\n        this.gasPrice = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.toUint8Array)(gasPrice === '' ? '0x' : gasPrice));\n        this._validateCannotExceedMaxInteger({\n            gasPrice: this.gasPrice,\n        });\n        _baseTransaction_js__WEBPACK_IMPORTED_MODULE_7__.BaseTransaction._validateNotArray(txData);\n        if (this.gasPrice * this.gasLimit > _constants_js__WEBPACK_IMPORTED_MODULE_4__.MAX_INTEGER) {\n            const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER');\n            throw new Error(msg);\n        }\n        this._validateYParity();\n        this._validateHighS();\n        const freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    getDataFee() {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        let cost = super.getDataFee();\n        cost += BigInt((0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getDataFeeEIP2930)(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    }\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    getUpfrontCost() {\n        return this.gasLimit * this.gasPrice + this.value;\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Uint8Arrays of the EIP-2930 transaction, in order.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     *\n     * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty UINT8ARRAY values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n     */\n    raw() {\n        return [\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.chainId),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.nonce),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.gasPrice),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Uint8Array.from([]),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.v) : Uint8Array.from([]),\n            this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.r) : Uint8Array.from([]),\n            this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(this.s) : Uint8Array.from([]),\n        ];\n    }\n    /**\n     * Returns the serialized encoding of the EIP-2930 transaction.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    serialize() {\n        const base = this.raw();\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayConcat)(TRANSACTION_TYPE_UINT8ARRAY, _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.encode(base));\n    }\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    getMessageToSign(hashMessage = true) {\n        const base = this.raw().slice(0, 8);\n        const message = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.uint8ArrayConcat)(TRANSACTION_TYPE_UINT8ARRAY, _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_2__.RLP.encode(base));\n        if (hashMessage) {\n            return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(message);\n        }\n        return message;\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    hash() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(this.serialize());\n    }\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    getMessageToVerifySignature() {\n        return this.getMessageToSign();\n    }\n    /**\n     * Returns the public key of the sender\n     */\n    getSenderPublicKey() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        const msgHash = this.getMessageToVerifySignature();\n        const { v, r, s } = this;\n        this._validateHighS();\n        try {\n            return (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.ecrecover)(msgHash, v + BigInt(27), // Recover the 27 which was stripped from ecsign\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(r), (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToUnpaddedUint8Array)(s));\n        }\n        catch (e) {\n            const msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    }\n    _processSignature(v, r, s) {\n        const opts = Object.assign(Object.assign({}, this.txOptions), { common: this.common });\n        return AccessListEIP2930Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: v - BigInt(27), // This looks extremely hacky: /util actually adds 27 to the value, the recovery bit is either 0 or 1.\n            r: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)(r),\n            s: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayToBigInt)(s),\n        }, opts);\n    }\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    toJSON() {\n        const accessListJSON = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getAccessListJSON)(this.accessList);\n        return {\n            chainId: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.chainId),\n            nonce: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.nonce),\n            gasPrice: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.gasPrice),\n            gasLimit: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.value),\n            data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)(this.data),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToHex)(this.s) : undefined,\n        };\n    }\n    /**\n     * Return a compact error string representation of the object\n     */\n    errorStr() {\n        var _a, _b;\n        let errorStr = this._getSharedErrorPostfix();\n        // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n        errorStr += ` gasPrice=${this.gasPrice} accessListCount=${(_b = (_a = this.accessList) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    _errorMsg(msg) {\n        return `${msg} (${this.errorStr()})`;\n    }\n}\n//# sourceMappingURL=eip2930Transaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eC9laXAyOTMwVHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUM0RDtBQUNIO0FBQ25CO0FBQ2tEO0FBQzNDO0FBQzJEO0FBQ21CO0FBQ3BFO0FBQ3ZEO0FBQ0Esb0NBQW9DLHNEQUFVO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMkNBQTJDLGdFQUFlO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRCxhQUFhLDREQUFnQjtBQUM3QixrSEFBa0gsaUJBQWlCLGNBQWMsc0RBQVUsNEJBQTRCO0FBQ3ZMO0FBQ0EsdUJBQXVCLGdEQUFHO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxZQUFZO0FBQzdDLFFBQVEsdUVBQXVCLEdBQUcsMkNBQTJDO0FBQzdFO0FBQ0E7QUFDQSxxQkFBcUIsb0VBQWtCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLG9FQUFrQjtBQUNuRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQSw0Q0FBNEMsYUFBYSx3QkFBd0I7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0NBQWdDO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsNERBQWlCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsMkRBQWdCO0FBQ3hCLHdCQUF3QixvRUFBa0IsQ0FBQyw4REFBWTtBQUN2RDtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVEsZ0VBQWU7QUFDdkIsNENBQTRDLHNEQUFXO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw0REFBaUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksOENBQThDO0FBQzFELGFBQWEsNEJBQTRCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxvREFBb0Q7QUFDcEc7QUFDQTtBQUNBO0FBQ0EsWUFBWSw0RUFBMEI7QUFDdEMsWUFBWSw0RUFBMEI7QUFDdEMsWUFBWSw0RUFBMEI7QUFDdEMsWUFBWSw0RUFBMEI7QUFDdEM7QUFDQSxZQUFZLDRFQUEwQjtBQUN0QztBQUNBO0FBQ0EsbUNBQW1DLDRFQUEwQjtBQUM3RCxtQ0FBbUMsNEVBQTBCO0FBQzdELG1DQUFtQyw0RUFBMEI7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNERBQWdCLDhCQUE4QixnREFBRztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw0REFBZ0IsOEJBQThCLGdEQUFHO0FBQ3pFO0FBQ0EsbUJBQW1CLDBFQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxxREFBcUQ7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywwRUFBUztBQUMzQztBQUNBO0FBQ0E7QUFDQSxlQUFlLDBFQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFVBQVU7QUFDMUI7QUFDQTtBQUNBLG1CQUFtQiwyREFBUztBQUM1QixZQUFZLDRFQUEwQixLQUFLLDRFQUEwQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxxQkFBcUIscUJBQXFCO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvRUFBa0I7QUFDakMsZUFBZSxvRUFBa0I7QUFDakMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsNERBQWlCO0FBQ2hEO0FBQ0EscUJBQXFCLDZEQUFXO0FBQ2hDLG1CQUFtQiw2REFBVztBQUM5QixzQkFBc0IsNkRBQVc7QUFDakMsc0JBQXNCLDZEQUFXO0FBQ2pDO0FBQ0EsbUJBQW1CLDZEQUFXO0FBQzlCLGtCQUFrQixzREFBVTtBQUM1QjtBQUNBLHNDQUFzQyw2REFBVztBQUNqRCxzQ0FBc0MsNkRBQVc7QUFDakQsc0NBQXNDLDZEQUFXO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxlQUFlLGtCQUFrQixnSEFBZ0g7QUFDbEw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLEtBQUssR0FBRyxnQkFBZ0I7QUFDMUM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGFsaXlhXFxEb3dubG9hZHNcXEVjb1hDaGFuZ2VcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLWFjY291bnRzXFxsaWJcXGVzbVxcdHhcXGVpcDI5MzBUcmFuc2FjdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IGtlY2NhazI1NiB9IGZyb20gJ2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9rZWNjYWsuanMnO1xuaW1wb3J0IHsgdmFsaWRhdGVOb0xlYWRpbmdaZXJvZXMgfSBmcm9tICd3ZWIzLXZhbGlkYXRvcic7XG5pbXBvcnQgeyBSTFAgfSBmcm9tICdAZXRoZXJldW1qcy9ybHAnO1xuaW1wb3J0IHsgYnl0ZXNUb0hleCwgaGV4VG9CeXRlcywgdWludDhBcnJheUNvbmNhdCwgdWludDhBcnJheUVxdWFscyB9IGZyb20gJ3dlYjMtdXRpbHMnO1xuaW1wb3J0IHsgTUFYX0lOVEVHRVIgfSBmcm9tICcuL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBnZXRBY2Nlc3NMaXN0RGF0YSwgdmVyaWZ5QWNjZXNzTGlzdCwgZ2V0QWNjZXNzTGlzdEpTT04sIGdldERhdGFGZWVFSVAyOTMwLCB9IGZyb20gJy4vdXRpbHMuanMnO1xuaW1wb3J0IHsgYmlnSW50VG9IZXgsIHRvVWludDhBcnJheSwgZWNyZWNvdmVyLCB1aW50OEFycmF5VG9CaWdJbnQsIGJpZ0ludFRvVW5wYWRkZWRVaW50OEFycmF5LCB9IGZyb20gJy4uL2NvbW1vbi91dGlscy5qcyc7XG5pbXBvcnQgeyBCYXNlVHJhbnNhY3Rpb24gfSBmcm9tICcuL2Jhc2VUcmFuc2FjdGlvbi5qcyc7XG5jb25zdCBUUkFOU0FDVElPTl9UWVBFID0gMTtcbmNvbnN0IFRSQU5TQUNUSU9OX1RZUEVfVUlOVDhBUlJBWSA9IGhleFRvQnl0ZXMoVFJBTlNBQ1RJT05fVFlQRS50b1N0cmluZygxNikucGFkU3RhcnQoMiwgJzAnKSk7XG4vKipcbiAqIFR5cGVkIHRyYW5zYWN0aW9uIHdpdGggb3B0aW9uYWwgYWNjZXNzIGxpc3RzXG4gKlxuICogLSBUcmFuc2FjdGlvblR5cGU6IDFcbiAqIC0gRUlQOiBbRUlQLTI5MzBdKGh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMjkzMClcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVzZS1iZWZvcmUtZGVmaW5lXG5leHBvcnQgY2xhc3MgQWNjZXNzTGlzdEVJUDI5MzBUcmFuc2FjdGlvbiBleHRlbmRzIEJhc2VUcmFuc2FjdGlvbiB7XG4gICAgLyoqXG4gICAgICogSW5zdGFudGlhdGUgYSB0cmFuc2FjdGlvbiBmcm9tIGEgZGF0YSBkaWN0aW9uYXJ5LlxuICAgICAqXG4gICAgICogRm9ybWF0OiB7IGNoYWluSWQsIG5vbmNlLCBnYXNQcmljZSwgZ2FzTGltaXQsIHRvLCB2YWx1ZSwgZGF0YSwgYWNjZXNzTGlzdCxcbiAgICAgKiB2LCByLCBzIH1cbiAgICAgKlxuICAgICAqIE5vdGVzOlxuICAgICAqIC0gYGNoYWluSWRgIHdpbGwgYmUgc2V0IGF1dG9tYXRpY2FsbHkgaWYgbm90IHByb3ZpZGVkXG4gICAgICogLSBBbGwgcGFyYW1ldGVycyBhcmUgb3B0aW9uYWwgYW5kIGhhdmUgc29tZSBiYXNpYyBkZWZhdWx0IHZhbHVlc1xuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tVHhEYXRhKHR4RGF0YSwgb3B0cyA9IHt9KSB7XG4gICAgICAgIHJldHVybiBuZXcgQWNjZXNzTGlzdEVJUDI5MzBUcmFuc2FjdGlvbih0eERhdGEsIG9wdHMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbnN0YW50aWF0ZSBhIHRyYW5zYWN0aW9uIGZyb20gdGhlIHNlcmlhbGl6ZWQgdHguXG4gICAgICpcbiAgICAgKiBGb3JtYXQ6IGAweDAxIHx8IHJscChbY2hhaW5JZCwgbm9uY2UsIGdhc1ByaWNlLCBnYXNMaW1pdCwgdG8sIHZhbHVlLCBkYXRhLCBhY2Nlc3NMaXN0LFxuICAgICAqIHNpZ25hdHVyZVlQYXJpdHkgKHYpLCBzaWduYXR1cmVSIChyKSwgc2lnbmF0dXJlUyAocyldKWBcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVNlcmlhbGl6ZWRUeChzZXJpYWxpemVkLCBvcHRzID0ge30pIHtcbiAgICAgICAgaWYgKCF1aW50OEFycmF5RXF1YWxzKHNlcmlhbGl6ZWQuc3ViYXJyYXkoMCwgMSksIFRSQU5TQUNUSU9OX1RZUEVfVUlOVDhBUlJBWSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBzZXJpYWxpemVkIHR4IGlucHV0OiBub3QgYW4gRUlQLTI5MzAgdHJhbnNhY3Rpb24gKHdyb25nIHR4IHR5cGUsIGV4cGVjdGVkOiAke1RSQU5TQUNUSU9OX1RZUEV9LCByZWNlaXZlZDogJHtieXRlc1RvSGV4KHNlcmlhbGl6ZWQuc3ViYXJyYXkoMCwgMSkpfWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHZhbHVlcyA9IFJMUC5kZWNvZGUoVWludDhBcnJheS5mcm9tKHNlcmlhbGl6ZWQuc3ViYXJyYXkoMSkpKTtcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlcykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzZXJpYWxpemVkIHR4IGlucHV0OiBtdXN0IGJlIGFycmF5Jyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtYXJndW1lbnRcbiAgICAgICAgcmV0dXJuIEFjY2Vzc0xpc3RFSVAyOTMwVHJhbnNhY3Rpb24uZnJvbVZhbHVlc0FycmF5KHZhbHVlcywgb3B0cyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIHRyYW5zYWN0aW9uIGZyb20gYSB2YWx1ZXMgYXJyYXkuXG4gICAgICpcbiAgICAgKiBGb3JtYXQ6IGBbY2hhaW5JZCwgbm9uY2UsIGdhc1ByaWNlLCBnYXNMaW1pdCwgdG8sIHZhbHVlLCBkYXRhLCBhY2Nlc3NMaXN0LFxuICAgICAqIHNpZ25hdHVyZVlQYXJpdHkgKHYpLCBzaWduYXR1cmVSIChyKSwgc2lnbmF0dXJlUyAocyldYFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tVmFsdWVzQXJyYXkodmFsdWVzLCBvcHRzID0ge30pIHtcbiAgICAgICAgaWYgKHZhbHVlcy5sZW5ndGggIT09IDggJiYgdmFsdWVzLmxlbmd0aCAhPT0gMTEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBFSVAtMjkzMCB0cmFuc2FjdGlvbi4gT25seSBleHBlY3RpbmcgOCB2YWx1ZXMgKGZvciB1bnNpZ25lZCB0eCkgb3IgMTEgdmFsdWVzIChmb3Igc2lnbmVkIHR4KS4nKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbY2hhaW5JZCwgbm9uY2UsIGdhc1ByaWNlLCBnYXNMaW1pdCwgdG8sIHZhbHVlLCBkYXRhLCBhY2Nlc3NMaXN0LCB2LCByLCBzXSA9IHZhbHVlcztcbiAgICAgICAgdGhpcy5fdmFsaWRhdGVOb3RBcnJheSh7IGNoYWluSWQsIHYgfSk7XG4gICAgICAgIHZhbGlkYXRlTm9MZWFkaW5nWmVyb2VzKHsgbm9uY2UsIGdhc1ByaWNlLCBnYXNMaW1pdCwgdmFsdWUsIHYsIHIsIHMgfSk7XG4gICAgICAgIGNvbnN0IGVtcHR5QWNjZXNzTGlzdCA9IFtdO1xuICAgICAgICByZXR1cm4gbmV3IEFjY2Vzc0xpc3RFSVAyOTMwVHJhbnNhY3Rpb24oe1xuICAgICAgICAgICAgY2hhaW5JZDogdWludDhBcnJheVRvQmlnSW50KGNoYWluSWQpLFxuICAgICAgICAgICAgbm9uY2UsXG4gICAgICAgICAgICBnYXNQcmljZSxcbiAgICAgICAgICAgIGdhc0xpbWl0LFxuICAgICAgICAgICAgdG8sXG4gICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgICBhY2Nlc3NMaXN0OiBhY2Nlc3NMaXN0ICE9PSBudWxsICYmIGFjY2Vzc0xpc3QgIT09IHZvaWQgMCA/IGFjY2Vzc0xpc3QgOiBlbXB0eUFjY2Vzc0xpc3QsXG4gICAgICAgICAgICB2OiB2ICE9PSB1bmRlZmluZWQgPyB1aW50OEFycmF5VG9CaWdJbnQodikgOiB1bmRlZmluZWQsIC8vIEVJUDI5MzAgc3VwcG9ydHMgdidzIHdpdGggdmFsdWUgMCAoZW1wdHkgVWludDhBcnJheSlcbiAgICAgICAgICAgIHIsXG4gICAgICAgICAgICBzLFxuICAgICAgICB9LCBvcHRzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhpcyBjb25zdHJ1Y3RvciB0YWtlcyB0aGUgdmFsdWVzLCB2YWxpZGF0ZXMgdGhlbSwgYXNzaWducyB0aGVtIGFuZCBmcmVlemVzIHRoZSBvYmplY3QuXG4gICAgICpcbiAgICAgKiBJdCBpcyBub3QgcmVjb21tZW5kZWQgdG8gdXNlIHRoaXMgY29uc3RydWN0b3IgZGlyZWN0bHkuIEluc3RlYWQgdXNlXG4gICAgICogdGhlIHN0YXRpYyBmYWN0b3J5IG1ldGhvZHMgdG8gYXNzaXN0IGluIGNyZWF0aW5nIGEgVHJhbnNhY3Rpb24gb2JqZWN0IGZyb21cbiAgICAgKiB2YXJ5aW5nIGRhdGEgdHlwZXMuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IodHhEYXRhLCBvcHRzID0ge30pIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBzdXBlcihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHR4RGF0YSksIHsgdHlwZTogVFJBTlNBQ1RJT05fVFlQRSB9KSwgb3B0cyk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgZGVmYXVsdCBIRiBpZiB0aGUgdHggdHlwZSBpcyBhY3RpdmUgb24gdGhhdCBIRlxuICAgICAgICAgKiBvciB0aGUgZmlyc3QgZ3JlYXRlciBIRiB3aGVyZSB0aGUgdHggaXMgYWN0aXZlLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAaGlkZGVuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLkRFRkFVTFRfSEFSREZPUksgPSAnYmVybGluJztcbiAgICAgICAgY29uc3QgeyBjaGFpbklkLCBhY2Nlc3NMaXN0LCBnYXNQcmljZSB9ID0gdHhEYXRhO1xuICAgICAgICB0aGlzLmNvbW1vbiA9IHRoaXMuX2dldENvbW1vbihvcHRzLmNvbW1vbiwgY2hhaW5JZCk7XG4gICAgICAgIHRoaXMuY2hhaW5JZCA9IHRoaXMuY29tbW9uLmNoYWluSWQoKTtcbiAgICAgICAgLy8gRUlQLTI3MTggY2hlY2sgaXMgZG9uZSBpbiBDb21tb25cbiAgICAgICAgaWYgKCF0aGlzLmNvbW1vbi5pc0FjdGl2YXRlZEVJUCgyOTMwKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFSVAtMjkzMCBub3QgZW5hYmxlZCBvbiBDb21tb24nKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmFjdGl2ZUNhcGFiaWxpdGllcyA9IHRoaXMuYWN0aXZlQ2FwYWJpbGl0aWVzLmNvbmNhdChbMjcxOCwgMjkzMF0pO1xuICAgICAgICAvLyBQb3B1bGF0ZSB0aGUgYWNjZXNzIGxpc3QgZmllbGRzXG4gICAgICAgIGNvbnN0IGFjY2Vzc0xpc3REYXRhID0gZ2V0QWNjZXNzTGlzdERhdGEoYWNjZXNzTGlzdCAhPT0gbnVsbCAmJiBhY2Nlc3NMaXN0ICE9PSB2b2lkIDAgPyBhY2Nlc3NMaXN0IDogW10pO1xuICAgICAgICB0aGlzLmFjY2Vzc0xpc3QgPSBhY2Nlc3NMaXN0RGF0YS5hY2Nlc3NMaXN0O1xuICAgICAgICB0aGlzLkFjY2Vzc0xpc3RKU09OID0gYWNjZXNzTGlzdERhdGEuQWNjZXNzTGlzdEpTT047XG4gICAgICAgIC8vIFZlcmlmeSB0aGUgYWNjZXNzIGxpc3QgZm9ybWF0LlxuICAgICAgICB2ZXJpZnlBY2Nlc3NMaXN0KHRoaXMuYWNjZXNzTGlzdCk7XG4gICAgICAgIHRoaXMuZ2FzUHJpY2UgPSB1aW50OEFycmF5VG9CaWdJbnQodG9VaW50OEFycmF5KGdhc1ByaWNlID09PSAnJyA/ICcweCcgOiBnYXNQcmljZSkpO1xuICAgICAgICB0aGlzLl92YWxpZGF0ZUNhbm5vdEV4Y2VlZE1heEludGVnZXIoe1xuICAgICAgICAgICAgZ2FzUHJpY2U6IHRoaXMuZ2FzUHJpY2UsXG4gICAgICAgIH0pO1xuICAgICAgICBCYXNlVHJhbnNhY3Rpb24uX3ZhbGlkYXRlTm90QXJyYXkodHhEYXRhKTtcbiAgICAgICAgaWYgKHRoaXMuZ2FzUHJpY2UgKiB0aGlzLmdhc0xpbWl0ID4gTUFYX0lOVEVHRVIpIHtcbiAgICAgICAgICAgIGNvbnN0IG1zZyA9IHRoaXMuX2Vycm9yTXNnKCdnYXNMaW1pdCAqIGdhc1ByaWNlIGNhbm5vdCBleGNlZWQgTUFYX0lOVEVHRVInKTtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3ZhbGlkYXRlWVBhcml0eSgpO1xuICAgICAgICB0aGlzLl92YWxpZGF0ZUhpZ2hTKCk7XG4gICAgICAgIGNvbnN0IGZyZWV6ZSA9IChfYSA9IG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0cy5mcmVlemUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHRydWU7XG4gICAgICAgIGlmIChmcmVlemUpIHtcbiAgICAgICAgICAgIE9iamVjdC5mcmVlemUodGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIGFtb3VudCBvZiBnYXMgcGFpZCBmb3IgdGhlIGRhdGEgaW4gdGhpcyB0eFxuICAgICAqL1xuICAgIGdldERhdGFGZWUoKSB7XG4gICAgICAgIGlmICh0aGlzLmNhY2hlLmRhdGFGZWUgJiYgdGhpcy5jYWNoZS5kYXRhRmVlLmhhcmRmb3JrID09PSB0aGlzLmNvbW1vbi5oYXJkZm9yaygpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jYWNoZS5kYXRhRmVlLnZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGxldCBjb3N0ID0gc3VwZXIuZ2V0RGF0YUZlZSgpO1xuICAgICAgICBjb3N0ICs9IEJpZ0ludChnZXREYXRhRmVlRUlQMjkzMCh0aGlzLmFjY2Vzc0xpc3QsIHRoaXMuY29tbW9uKSk7XG4gICAgICAgIGlmIChPYmplY3QuaXNGcm96ZW4odGhpcykpIHtcbiAgICAgICAgICAgIHRoaXMuY2FjaGUuZGF0YUZlZSA9IHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogY29zdCxcbiAgICAgICAgICAgICAgICBoYXJkZm9yazogdGhpcy5jb21tb24uaGFyZGZvcmsoKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNvc3Q7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSB1cCBmcm9udCBhbW91bnQgdGhhdCBhbiBhY2NvdW50IG11c3QgaGF2ZSBmb3IgdGhpcyB0cmFuc2FjdGlvbiB0byBiZSB2YWxpZFxuICAgICAqL1xuICAgIGdldFVwZnJvbnRDb3N0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nYXNMaW1pdCAqIHRoaXMuZ2FzUHJpY2UgKyB0aGlzLnZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgVWludDhBcnJheSBBcnJheSBvZiB0aGUgcmF3IFVpbnQ4QXJyYXlzIG9mIHRoZSBFSVAtMjkzMCB0cmFuc2FjdGlvbiwgaW4gb3JkZXIuXG4gICAgICpcbiAgICAgKiBGb3JtYXQ6IGBbY2hhaW5JZCwgbm9uY2UsIGdhc1ByaWNlLCBnYXNMaW1pdCwgdG8sIHZhbHVlLCBkYXRhLCBhY2Nlc3NMaXN0LFxuICAgICAqIHNpZ25hdHVyZVlQYXJpdHkgKHYpLCBzaWduYXR1cmVSIChyKSwgc2lnbmF0dXJlUyAocyldYFxuICAgICAqXG4gICAgICogVXNlIHtAbGluayBBY2Nlc3NMaXN0RUlQMjkzMFRyYW5zYWN0aW9uLnNlcmlhbGl6ZX0gdG8gYWRkIGEgdHJhbnNhY3Rpb24gdG8gYSBibG9ja1xuICAgICAqIHdpdGgge0BsaW5rIEJsb2NrLmZyb21WYWx1ZXNBcnJheX0uXG4gICAgICpcbiAgICAgKiBGb3IgYW4gdW5zaWduZWQgdHggdGhpcyBtZXRob2QgdXNlcyB0aGUgZW1wdHkgVUlOVDhBUlJBWSB2YWx1ZXMgZm9yIHRoZVxuICAgICAqIHNpZ25hdHVyZSBwYXJhbWV0ZXJzIGB2YCwgYHJgIGFuZCBgc2AgZm9yIGVuY29kaW5nLiBGb3IgYW4gRUlQLTE1NSBjb21wbGlhbnRcbiAgICAgKiByZXByZXNlbnRhdGlvbiBmb3IgZXh0ZXJuYWwgc2lnbmluZyB1c2Uge0BsaW5rIEFjY2Vzc0xpc3RFSVAyOTMwVHJhbnNhY3Rpb24uZ2V0TWVzc2FnZVRvU2lnbn0uXG4gICAgICovXG4gICAgcmF3KCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgYmlnSW50VG9VbnBhZGRlZFVpbnQ4QXJyYXkodGhpcy5jaGFpbklkKSxcbiAgICAgICAgICAgIGJpZ0ludFRvVW5wYWRkZWRVaW50OEFycmF5KHRoaXMubm9uY2UpLFxuICAgICAgICAgICAgYmlnSW50VG9VbnBhZGRlZFVpbnQ4QXJyYXkodGhpcy5nYXNQcmljZSksXG4gICAgICAgICAgICBiaWdJbnRUb1VucGFkZGVkVWludDhBcnJheSh0aGlzLmdhc0xpbWl0KSxcbiAgICAgICAgICAgIHRoaXMudG8gIT09IHVuZGVmaW5lZCA/IHRoaXMudG8uYnVmIDogVWludDhBcnJheS5mcm9tKFtdKSxcbiAgICAgICAgICAgIGJpZ0ludFRvVW5wYWRkZWRVaW50OEFycmF5KHRoaXMudmFsdWUpLFxuICAgICAgICAgICAgdGhpcy5kYXRhLFxuICAgICAgICAgICAgdGhpcy5hY2Nlc3NMaXN0LFxuICAgICAgICAgICAgdGhpcy52ICE9PSB1bmRlZmluZWQgPyBiaWdJbnRUb1VucGFkZGVkVWludDhBcnJheSh0aGlzLnYpIDogVWludDhBcnJheS5mcm9tKFtdKSxcbiAgICAgICAgICAgIHRoaXMuciAhPT0gdW5kZWZpbmVkID8gYmlnSW50VG9VbnBhZGRlZFVpbnQ4QXJyYXkodGhpcy5yKSA6IFVpbnQ4QXJyYXkuZnJvbShbXSksXG4gICAgICAgICAgICB0aGlzLnMgIT09IHVuZGVmaW5lZCA/IGJpZ0ludFRvVW5wYWRkZWRVaW50OEFycmF5KHRoaXMucykgOiBVaW50OEFycmF5LmZyb20oW10pLFxuICAgICAgICBdO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBzZXJpYWxpemVkIGVuY29kaW5nIG9mIHRoZSBFSVAtMjkzMCB0cmFuc2FjdGlvbi5cbiAgICAgKlxuICAgICAqIEZvcm1hdDogYDB4MDEgfHwgcmxwKFtjaGFpbklkLCBub25jZSwgZ2FzUHJpY2UsIGdhc0xpbWl0LCB0bywgdmFsdWUsIGRhdGEsIGFjY2Vzc0xpc3QsXG4gICAgICogc2lnbmF0dXJlWVBhcml0eSAodiksIHNpZ25hdHVyZVIgKHIpLCBzaWduYXR1cmVTIChzKV0pYFxuICAgICAqXG4gICAgICogTm90ZSB0aGF0IGluIGNvbnRyYXN0IHRvIHRoZSBsZWdhY3kgdHggc2VyaWFsaXphdGlvbiBmb3JtYXQgdGhpcyBpcyBub3RcbiAgICAgKiB2YWxpZCBSTFAgYW55IG1vcmUgZHVlIHRvIHRoZSByYXcgdHggdHlwZSBwcmVjZWRpbmcgYW5kIGNvbmNhdGVuYXRlZCB0b1xuICAgICAqIHRoZSBSTFAgZW5jb2Rpbmcgb2YgdGhlIHZhbHVlcy5cbiAgICAgKi9cbiAgICBzZXJpYWxpemUoKSB7XG4gICAgICAgIGNvbnN0IGJhc2UgPSB0aGlzLnJhdygpO1xuICAgICAgICByZXR1cm4gdWludDhBcnJheUNvbmNhdChUUkFOU0FDVElPTl9UWVBFX1VJTlQ4QVJSQVksIFJMUC5lbmNvZGUoYmFzZSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBzZXJpYWxpemVkIHVuc2lnbmVkIHR4IChoYXNoZWQgb3IgcmF3KSwgd2hpY2ggY2FuIGJlIHVzZWRcbiAgICAgKiB0byBzaWduIHRoZSB0cmFuc2FjdGlvbiAoZS5nLiBmb3Igc2VuZGluZyB0byBhIGhhcmR3YXJlIHdhbGxldCkuXG4gICAgICpcbiAgICAgKiBOb3RlOiBpbiBjb250cmFzdCB0byB0aGUgbGVnYWN5IHR4IHRoZSByYXcgbWVzc2FnZSBmb3JtYXQgaXMgYWxyZWFkeVxuICAgICAqIHNlcmlhbGl6ZWQgYW5kIGRvZXNuJ3QgbmVlZCB0byBiZSBSTFAgZW5jb2RlZCBhbnkgbW9yZS5cbiAgICAgKlxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBjb25zdCBzZXJpYWxpemVkTWVzc2FnZSA9IHR4LmdldE1lc3NhZ2VUb1NpZ24oZmFsc2UpIC8vIHVzZSB0aGlzIGZvciB0aGUgSFcgd2FsbGV0IGlucHV0XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaGFzaE1lc3NhZ2UgLSBSZXR1cm4gaGFzaGVkIG1lc3NhZ2UgaWYgc2V0IHRvIHRydWUgKGRlZmF1bHQ6IHRydWUpXG4gICAgICovXG4gICAgZ2V0TWVzc2FnZVRvU2lnbihoYXNoTWVzc2FnZSA9IHRydWUpIHtcbiAgICAgICAgY29uc3QgYmFzZSA9IHRoaXMucmF3KCkuc2xpY2UoMCwgOCk7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSB1aW50OEFycmF5Q29uY2F0KFRSQU5TQUNUSU9OX1RZUEVfVUlOVDhBUlJBWSwgUkxQLmVuY29kZShiYXNlKSk7XG4gICAgICAgIGlmIChoYXNoTWVzc2FnZSkge1xuICAgICAgICAgICAgcmV0dXJuIGtlY2NhazI1NihtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWVzc2FnZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29tcHV0ZXMgYSBzaGEzLTI1NiBoYXNoIG9mIHRoZSBzZXJpYWxpemVkIHR4LlxuICAgICAqXG4gICAgICogVGhpcyBtZXRob2QgY2FuIG9ubHkgYmUgdXNlZCBmb3Igc2lnbmVkIHR4cyAoaXQgdGhyb3dzIG90aGVyd2lzZSkuXG4gICAgICogVXNlIHtAbGluayBBY2Nlc3NMaXN0RUlQMjkzMFRyYW5zYWN0aW9uLmdldE1lc3NhZ2VUb1NpZ259IHRvIGdldCBhIHR4IGhhc2ggZm9yIHRoZSBwdXJwb3NlIG9mIHNpZ25pbmcuXG4gICAgICovXG4gICAgaGFzaCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzU2lnbmVkKCkpIHtcbiAgICAgICAgICAgIGNvbnN0IG1zZyA9IHRoaXMuX2Vycm9yTXNnKCdDYW5ub3QgY2FsbCBoYXNoIG1ldGhvZCBpZiB0cmFuc2FjdGlvbiBpcyBub3Qgc2lnbmVkJyk7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoT2JqZWN0LmlzRnJvemVuKHRoaXMpKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuY2FjaGUuaGFzaCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY2FjaGUuaGFzaCA9IGtlY2NhazI1Nih0aGlzLnNlcmlhbGl6ZSgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNhY2hlLmhhc2g7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGtlY2NhazI1Nih0aGlzLnNlcmlhbGl6ZSgpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29tcHV0ZXMgYSBzaGEzLTI1NiBoYXNoIHdoaWNoIGNhbiBiZSB1c2VkIHRvIHZlcmlmeSB0aGUgc2lnbmF0dXJlXG4gICAgICovXG4gICAgZ2V0TWVzc2FnZVRvVmVyaWZ5U2lnbmF0dXJlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRNZXNzYWdlVG9TaWduKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHB1YmxpYyBrZXkgb2YgdGhlIHNlbmRlclxuICAgICAqL1xuICAgIGdldFNlbmRlclB1YmxpY0tleSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzU2lnbmVkKCkpIHtcbiAgICAgICAgICAgIGNvbnN0IG1zZyA9IHRoaXMuX2Vycm9yTXNnKCdDYW5ub3QgY2FsbCB0aGlzIG1ldGhvZCBpZiB0cmFuc2FjdGlvbiBpcyBub3Qgc2lnbmVkJyk7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBtc2dIYXNoID0gdGhpcy5nZXRNZXNzYWdlVG9WZXJpZnlTaWduYXR1cmUoKTtcbiAgICAgICAgY29uc3QgeyB2LCByLCBzIH0gPSB0aGlzO1xuICAgICAgICB0aGlzLl92YWxpZGF0ZUhpZ2hTKCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gZWNyZWNvdmVyKG1zZ0hhc2gsIHYgKyBCaWdJbnQoMjcpLCAvLyBSZWNvdmVyIHRoZSAyNyB3aGljaCB3YXMgc3RyaXBwZWQgZnJvbSBlY3NpZ25cbiAgICAgICAgICAgIGJpZ0ludFRvVW5wYWRkZWRVaW50OEFycmF5KHIpLCBiaWdJbnRUb1VucGFkZGVkVWludDhBcnJheShzKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnN0IG1zZyA9IHRoaXMuX2Vycm9yTXNnKCdJbnZhbGlkIFNpZ25hdHVyZScpO1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgX3Byb2Nlc3NTaWduYXR1cmUodiwgciwgcykge1xuICAgICAgICBjb25zdCBvcHRzID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLnR4T3B0aW9ucyksIHsgY29tbW9uOiB0aGlzLmNvbW1vbiB9KTtcbiAgICAgICAgcmV0dXJuIEFjY2Vzc0xpc3RFSVAyOTMwVHJhbnNhY3Rpb24uZnJvbVR4RGF0YSh7XG4gICAgICAgICAgICBjaGFpbklkOiB0aGlzLmNoYWluSWQsXG4gICAgICAgICAgICBub25jZTogdGhpcy5ub25jZSxcbiAgICAgICAgICAgIGdhc1ByaWNlOiB0aGlzLmdhc1ByaWNlLFxuICAgICAgICAgICAgZ2FzTGltaXQ6IHRoaXMuZ2FzTGltaXQsXG4gICAgICAgICAgICB0bzogdGhpcy50byxcbiAgICAgICAgICAgIHZhbHVlOiB0aGlzLnZhbHVlLFxuICAgICAgICAgICAgZGF0YTogdGhpcy5kYXRhLFxuICAgICAgICAgICAgYWNjZXNzTGlzdDogdGhpcy5hY2Nlc3NMaXN0LFxuICAgICAgICAgICAgdjogdiAtIEJpZ0ludCgyNyksIC8vIFRoaXMgbG9va3MgZXh0cmVtZWx5IGhhY2t5OiAvdXRpbCBhY3R1YWxseSBhZGRzIDI3IHRvIHRoZSB2YWx1ZSwgdGhlIHJlY292ZXJ5IGJpdCBpcyBlaXRoZXIgMCBvciAxLlxuICAgICAgICAgICAgcjogdWludDhBcnJheVRvQmlnSW50KHIpLFxuICAgICAgICAgICAgczogdWludDhBcnJheVRvQmlnSW50KHMpLFxuICAgICAgICB9LCBvcHRzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBvYmplY3Qgd2l0aCB0aGUgSlNPTiByZXByZXNlbnRhdGlvbiBvZiB0aGUgdHJhbnNhY3Rpb25cbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIGNvbnN0IGFjY2Vzc0xpc3RKU09OID0gZ2V0QWNjZXNzTGlzdEpTT04odGhpcy5hY2Nlc3NMaXN0KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNoYWluSWQ6IGJpZ0ludFRvSGV4KHRoaXMuY2hhaW5JZCksXG4gICAgICAgICAgICBub25jZTogYmlnSW50VG9IZXgodGhpcy5ub25jZSksXG4gICAgICAgICAgICBnYXNQcmljZTogYmlnSW50VG9IZXgodGhpcy5nYXNQcmljZSksXG4gICAgICAgICAgICBnYXNMaW1pdDogYmlnSW50VG9IZXgodGhpcy5nYXNMaW1pdCksXG4gICAgICAgICAgICB0bzogdGhpcy50byAhPT0gdW5kZWZpbmVkID8gdGhpcy50by50b1N0cmluZygpIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgdmFsdWU6IGJpZ0ludFRvSGV4KHRoaXMudmFsdWUpLFxuICAgICAgICAgICAgZGF0YTogYnl0ZXNUb0hleCh0aGlzLmRhdGEpLFxuICAgICAgICAgICAgYWNjZXNzTGlzdDogYWNjZXNzTGlzdEpTT04sXG4gICAgICAgICAgICB2OiB0aGlzLnYgIT09IHVuZGVmaW5lZCA/IGJpZ0ludFRvSGV4KHRoaXMudikgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICByOiB0aGlzLnIgIT09IHVuZGVmaW5lZCA/IGJpZ0ludFRvSGV4KHRoaXMucikgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBzOiB0aGlzLnMgIT09IHVuZGVmaW5lZCA/IGJpZ0ludFRvSGV4KHRoaXMucykgOiB1bmRlZmluZWQsXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybiBhIGNvbXBhY3QgZXJyb3Igc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBvYmplY3RcbiAgICAgKi9cbiAgICBlcnJvclN0cigpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgbGV0IGVycm9yU3RyID0gdGhpcy5fZ2V0U2hhcmVkRXJyb3JQb3N0Zml4KCk7XG4gICAgICAgIC8vIEtlZXAgPyBmb3IgdGhpcy5hY2Nlc3NMaXN0IHNpbmNlIHRoaXMgb3RoZXJ3aXNlIGNhdXNlcyBIYXJkaGF0IEUyRSB0ZXN0cyB0byBmYWlsXG4gICAgICAgIGVycm9yU3RyICs9IGAgZ2FzUHJpY2U9JHt0aGlzLmdhc1ByaWNlfSBhY2Nlc3NMaXN0Q291bnQ9JHsoX2IgPSAoX2EgPSB0aGlzLmFjY2Vzc0xpc3QpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sZW5ndGgpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IDB9YDtcbiAgICAgICAgcmV0dXJuIGVycm9yU3RyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbnRlcm5hbCBoZWxwZXIgZnVuY3Rpb24gdG8gY3JlYXRlIGFuIGFubm90YXRlZCBlcnJvciBtZXNzYWdlXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbXNnIEJhc2UgZXJyb3IgbWVzc2FnZVxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBfZXJyb3JNc2cobXNnKSB7XG4gICAgICAgIHJldHVybiBgJHttc2d9ICgke3RoaXMuZXJyb3JTdHIoKX0pYDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1laXAyOTMwVHJhbnNhY3Rpb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/index.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessListEIP2930Transaction: () => (/* reexport safe */ _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_1__.AccessListEIP2930Transaction),\n/* harmony export */   BaseTransaction: () => (/* reexport safe */ _baseTransaction_js__WEBPACK_IMPORTED_MODULE_4__.BaseTransaction),\n/* harmony export */   Capability: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_6__.Capability),\n/* harmony export */   FeeMarketEIP1559Transaction: () => (/* reexport safe */ _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_0__.FeeMarketEIP1559Transaction),\n/* harmony export */   Transaction: () => (/* reexport safe */ _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction),\n/* harmony export */   TransactionFactory: () => (/* reexport safe */ _transactionFactory_js__WEBPACK_IMPORTED_MODULE_3__.TransactionFactory),\n/* harmony export */   isAccessList: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_6__.isAccessList),\n/* harmony export */   isAccessListUint8Array: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_6__.isAccessListUint8Array),\n/* harmony export */   txUtils: () => (/* reexport module object */ _utils_js__WEBPACK_IMPORTED_MODULE_5__)\n/* harmony export */ });\n/* harmony import */ var _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eip1559Transaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js\");\n/* harmony import */ var _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./eip2930Transaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js\");\n/* harmony import */ var _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./legacyTransaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js\");\n/* harmony import */ var _transactionFactory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transactionFactory.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js\");\n/* harmony import */ var _baseTransaction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./baseTransaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/utils.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/types.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// @ethereumjs/tx version 4.1.1\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ3NFO0FBQ0M7QUFDbEI7QUFDUTtBQUNOO0FBQ2pCO0FBQ1g7QUFDM0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFx0eFxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG4vLyBAZXRoZXJldW1qcy90eCB2ZXJzaW9uIDQuMS4xXG5leHBvcnQgeyBGZWVNYXJrZXRFSVAxNTU5VHJhbnNhY3Rpb24gfSBmcm9tICcuL2VpcDE1NTlUcmFuc2FjdGlvbi5qcyc7XG5leHBvcnQgeyBBY2Nlc3NMaXN0RUlQMjkzMFRyYW5zYWN0aW9uIH0gZnJvbSAnLi9laXAyOTMwVHJhbnNhY3Rpb24uanMnO1xuZXhwb3J0IHsgVHJhbnNhY3Rpb24gfSBmcm9tICcuL2xlZ2FjeVRyYW5zYWN0aW9uLmpzJztcbmV4cG9ydCB7IFRyYW5zYWN0aW9uRmFjdG9yeSB9IGZyb20gJy4vdHJhbnNhY3Rpb25GYWN0b3J5LmpzJztcbmV4cG9ydCB7IEJhc2VUcmFuc2FjdGlvbiB9IGZyb20gJy4vYmFzZVRyYW5zYWN0aW9uLmpzJztcbmV4cG9ydCAqIGFzIHR4VXRpbHMgZnJvbSAnLi91dGlscy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3R5cGVzLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transaction: () => (/* binding */ Transaction)\n/* harmony export */ });\n/* harmony import */ var _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethereumjs/rlp */ \"(ssr)/./node_modules/@ethereumjs/rlp/dist/index.js\");\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/constants.js\");\n/* harmony import */ var _baseTransaction_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./baseTransaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/baseTransaction.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/types.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n\n\n\nconst TRANSACTION_TYPE = 0;\nfunction meetsEIP155(_v, chainId) {\n    const v = Number(_v);\n    const chainIdDoubled = Number(chainId) * 2;\n    return v === chainIdDoubled + 35 || v === chainIdDoubled + 36;\n}\n/**\n * An Ethereum non-typed (legacy) transaction\n */\n// eslint-disable-next-line no-use-before-define\nclass Transaction extends _baseTransaction_js__WEBPACK_IMPORTED_MODULE_6__.BaseTransaction {\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n     *\n     * Notes:\n     * - All parameters are optional and have some basic default values\n     */\n    static fromTxData(txData, opts = {}) {\n        return new Transaction(txData, opts);\n    }\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     */\n    static fromSerializedTx(serialized, opts = {}) {\n        const values = _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input. Must be array');\n        }\n        return this.fromValuesArray(values, opts);\n    }\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     */\n    static fromValuesArray(values, opts = {}) {\n        // If length is not 6, it has length 9. If v/r/s are empty Uint8Array, it is still an unsigned transaction\n        // This happens if you get the RLP data from `raw()`\n        if (values.length !== 6 && values.length !== 9) {\n            throw new Error('Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).');\n        }\n        const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values;\n        (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.validateNoLeadingZeroes)({ nonce, gasPrice, gasLimit, value, v, r, s });\n        return new Transaction({\n            nonce,\n            gasPrice,\n            gasLimit,\n            to,\n            value,\n            data,\n            v,\n            r,\n            s,\n        }, opts);\n    }\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    constructor(txData, opts = {}) {\n        var _a;\n        super(Object.assign(Object.assign({}, txData), { type: TRANSACTION_TYPE }), opts);\n        this.common = this._validateTxV(this.v, opts.common);\n        this.gasPrice = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array)(txData.gasPrice === '' ? '0x' : txData.gasPrice));\n        if (this.gasPrice * this.gasLimit > _constants_js__WEBPACK_IMPORTED_MODULE_5__.MAX_INTEGER) {\n            const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice });\n        _baseTransaction_js__WEBPACK_IMPORTED_MODULE_6__.BaseTransaction._validateNotArray(txData);\n        if (this.common.gteHardfork('spuriousDragon')) {\n            if (!this.isSigned()) {\n                this.activeCapabilities.push(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection);\n            }\n            else {\n                // EIP155 spec:\n                // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n                // then when computing the hash of a transaction for purposes of signing or recovering\n                // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n                // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n                // v and chain ID meet EIP-155 conditions\n                // eslint-disable-next-line no-lonely-if\n                if (meetsEIP155(this.v, this.common.chainId())) {\n                    this.activeCapabilities.push(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection);\n                }\n            }\n        }\n        const freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(this);\n        }\n    }\n    /**\n     * Returns a Uint8Array Array of the raw Uint8Arrays of the legacy transaction, in order.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     *\n     * For legacy txs this is also the correct format to add transactions\n     * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n     * for typed txs).\n     *\n     * For an unsigned tx this method returns the empty Uint8Array values\n     * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n     * representation have a look at {@link Transaction.getMessageToSign}.\n     */\n    raw() {\n        return [\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.nonce),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.gasPrice),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Uint8Array.from([]),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.value),\n            this.data,\n            this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.v) : Uint8Array.from([]),\n            this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.r) : Uint8Array.from([]),\n            this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.s) : Uint8Array.from([]),\n        ];\n    }\n    /**\n     * Returns the serialized encoding of the legacy transaction.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     *\n     * For an unsigned tx this method uses the empty Uint8Array values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link Transaction.getMessageToSign}.\n     */\n    serialize() {\n        return _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(this.raw());\n    }\n    _getMessageToSign() {\n        const values = [\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.nonce),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.gasPrice),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Uint8Array.from([]),\n            (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(this.value),\n            this.data,\n        ];\n        if (this.supports(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection)) {\n            values.push((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array)(this.common.chainId()));\n            values.push((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.unpadUint8Array)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array)(0)));\n            values.push((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.unpadUint8Array)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.toUint8Array)(0)));\n        }\n        return values;\n    }\n    getMessageToSign(hashMessage = true) {\n        const message = this._getMessageToSign();\n        if (hashMessage) {\n            return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(_ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(message));\n        }\n        return message;\n    }\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    getDataFee() {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: super.getDataFee(),\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return super.getDataFee();\n    }\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    getUpfrontCost() {\n        return this.gasLimit * this.gasPrice + this.value;\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    hash() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(_ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(this.raw()));\n            }\n            return this.cache.hash;\n        }\n        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(_ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(this.raw()));\n    }\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    getMessageToVerifySignature() {\n        if (!this.isSigned()) {\n            const msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        const message = this._getMessageToSign();\n        return (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(_ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode(message));\n    }\n    /**\n     * Returns the public key of the sender\n     */\n    getSenderPublicKey() {\n        const msgHash = this.getMessageToVerifySignature();\n        const { v, r, s } = this;\n        this._validateHighS();\n        try {\n            return (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.ecrecover)(msgHash, v, (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(r), (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToUnpaddedUint8Array)(s), this.supports(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection)\n                ? this.common.chainId()\n                : undefined);\n        }\n        catch (e) {\n            const msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Process the v, r, s values from the `sign` method of the base transaction.\n     */\n    _processSignature(_v, r, s) {\n        let v = _v;\n        if (this.supports(_types_js__WEBPACK_IMPORTED_MODULE_7__.Capability.EIP155ReplayProtection)) {\n            v += this.common.chainId() * BigInt(2) + BigInt(8);\n        }\n        const opts = Object.assign(Object.assign({}, this.txOptions), { common: this.common });\n        return Transaction.fromTxData({\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            v,\n            r: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToBigInt)(r),\n            s: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToBigInt)(s),\n        }, opts);\n    }\n    /**\n     * Returns an object with the JSON representation of the transaction.\n     */\n    toJSON() {\n        return {\n            nonce: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.nonce),\n            gasPrice: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.gasPrice),\n            gasLimit: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.value),\n            data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(this.data),\n            v: this.v !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_4__.bigIntToHex)(this.s) : undefined,\n        };\n    }\n    /**\n     * Validates tx's `v` value\n     */\n    _validateTxV(_v, common) {\n        let chainIdBigInt;\n        const v = _v !== undefined ? Number(_v) : undefined;\n        // Check for valid v values in the scope of a signed legacy tx\n        if (v !== undefined) {\n            // v is 1. not matching the EIP-155 chainId included case and...\n            // v is 2. not matching the classic v=27 or v=28 case\n            if (v < 37 && v !== 27 && v !== 28) {\n                throw new Error(`Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`);\n            }\n        }\n        // No unsigned tx and EIP-155 activated and chain ID included\n        if (v !== undefined &&\n            v !== 0 &&\n            (!common || common.gteHardfork('spuriousDragon')) &&\n            v !== 27 &&\n            v !== 28) {\n            if (common) {\n                if (!meetsEIP155(BigInt(v), common.chainId())) {\n                    throw new Error(`Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`);\n                }\n            }\n            else {\n                // Derive the original chain ID\n                let numSub;\n                if ((v - 35) % 2 === 0) {\n                    numSub = 35;\n                }\n                else {\n                    numSub = 36;\n                }\n                // Use derived chain ID to create a proper Common\n                chainIdBigInt = BigInt(v - numSub) / BigInt(2);\n            }\n        }\n        return this._getCommon(common, chainIdBigInt);\n    }\n    /**\n     * Return a compact error string representation of the object\n     */\n    errorStr() {\n        let errorStr = this._getSharedErrorPostfix();\n        errorStr += ` gasPrice=${this.gasPrice}`;\n        return errorStr;\n    }\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    _errorMsg(msg) {\n        return `${msg} (${this.errorStr()})`;\n    }\n}\n//# sourceMappingURL=legacyTransaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TransactionFactory: () => (/* binding */ TransactionFactory)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/* harmony import */ var _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./eip1559Transaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip1559Transaction.js\");\n/* harmony import */ var _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eip2930Transaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/eip2930Transaction.js\");\n/* harmony import */ var _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./legacyTransaction.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/legacyTransaction.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\nconst extraTxTypes = new Map();\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nclass TransactionFactory {\n    // It is not possible to instantiate a TransactionFactory object.\n    // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n    constructor() { }\n    static typeToInt(txType) {\n        return Number((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayToBigInt)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.toUint8Array)(txType)));\n    }\n    static registerTransactionType(type, txClass) {\n        const txType = TransactionFactory.typeToInt(type);\n        extraTxTypes.set(txType, txClass);\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param txOptions - Options to pass on to the constructor of the transaction\n     */\n    static fromTxData(txData, txOptions = {}) {\n        if (!('type' in txData) || txData.type === undefined) {\n            // Assume legacy transaction\n            return _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_4__.Transaction.fromTxData(txData, txOptions);\n        }\n        const txType = TransactionFactory.typeToInt(txData.type);\n        if (txType === 0) {\n            return _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_4__.Transaction.fromTxData(txData, txOptions);\n        }\n        if (txType === 1) {\n            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n            return _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_3__.AccessListEIP2930Transaction.fromTxData(\n            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n            txData, txOptions);\n        }\n        if (txType === 2) {\n            return _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_2__.FeeMarketEIP1559Transaction.fromTxData(\n            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n            txData, txOptions);\n        }\n        const ExtraTransaction = extraTxTypes.get(txType);\n        if (ExtraTransaction === null || ExtraTransaction === void 0 ? void 0 : ExtraTransaction.fromTxData) {\n            return ExtraTransaction.fromTxData(txData, txOptions);\n        }\n        throw new Error(`Tx instantiation with type ${txType} not supported`);\n    }\n    /**\n     * This method tries to decode serialized data.\n     *\n     * @param data - The data Uint8Array\n     * @param txOptions - The transaction options\n     */\n    static fromSerializedData(data, txOptions = {}) {\n        if (data[0] <= 0x7f) {\n            // Determine the type.\n            switch (data[0]) {\n                case 1:\n                    return _eip2930Transaction_js__WEBPACK_IMPORTED_MODULE_3__.AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);\n                case 2:\n                    return _eip1559Transaction_js__WEBPACK_IMPORTED_MODULE_2__.FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);\n                default: {\n                    const ExtraTransaction = extraTxTypes.get(Number(data[0]));\n                    if (ExtraTransaction === null || ExtraTransaction === void 0 ? void 0 : ExtraTransaction.fromSerializedTx) {\n                        return ExtraTransaction.fromSerializedTx(data, txOptions);\n                    }\n                    throw new Error(`TypedTransaction with ID ${data[0]} unknown`);\n                }\n            }\n        }\n        else {\n            return _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_4__.Transaction.fromSerializedTx(data, txOptions);\n        }\n    }\n    /**\n     * When decoding a BlockBody, in the transactions field, a field is either:\n     * A Uint8Array (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n     * A Uint8Array[] (Legacy Transaction)\n     * This method returns the right transaction.\n     *\n     * @param data - A Uint8Array or Uint8Array[]\n     * @param txOptions - The transaction options\n     */\n    static fromBlockBodyData(data, txOptions = {}) {\n        if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.isUint8Array)(data)) {\n            return this.fromSerializedData(data, txOptions);\n        }\n        if (Array.isArray(data)) {\n            // It is a legacy transaction\n            return _legacyTransaction_js__WEBPACK_IMPORTED_MODULE_4__.Transaction.fromValuesArray(data, txOptions);\n        }\n        throw new Error('Cannot decode transaction: unknown type input');\n    }\n}\n//# sourceMappingURL=transactionFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/transactionFactory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/types.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/types.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Capability: () => (/* binding */ Capability),\n/* harmony export */   isAccessList: () => (/* binding */ isAccessList),\n/* harmony export */   isAccessListUint8Array: () => (/* binding */ isAccessListUint8Array)\n/* harmony export */ });\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nvar Capability;\n(function (Capability) {\n    /**\n     * Tx supports EIP-155 replay protection\n     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n     */\n    Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n    /**\n     * Tx supports EIP-1559 gas fee market mechanism\n     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n     */\n    Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n    /**\n     * Tx is a typed transaction as defined in EIP-2718\n     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n     */\n    Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n    /**\n     * Tx supports access list generation as defined in EIP-2930\n     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n     */\n    Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability || (Capability = {}));\nfunction isAccessListUint8Array(input) {\n    if (input.length === 0) {\n        return true;\n    }\n    const firstItem = input[0];\n    if (Array.isArray(firstItem)) {\n        return true;\n    }\n    return false;\n}\nfunction isAccessList(input) {\n    return !isAccessListUint8Array(input); // This is exactly the same method, except the output is negated.\n}\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQztBQUMxQjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsMkNBQTJDO0FBQzNDO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFx0eFxcdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDYW4gYmUgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIHtAbGluayBUcmFuc2FjdGlvbi5zdXBwb3J0c31cbiAqIHRvIHF1ZXJ5IG9uIHR4IGNhcGFiaWxpdGllc1xuICovXG5leHBvcnQgdmFyIENhcGFiaWxpdHk7XG4oZnVuY3Rpb24gKENhcGFiaWxpdHkpIHtcbiAgICAvKipcbiAgICAgKiBUeCBzdXBwb3J0cyBFSVAtMTU1IHJlcGxheSBwcm90ZWN0aW9uXG4gICAgICogU2VlOiBbMTU1XShodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTE1NSkgUmVwbGF5IEF0dGFjayBQcm90ZWN0aW9uIEVJUFxuICAgICAqL1xuICAgIENhcGFiaWxpdHlbQ2FwYWJpbGl0eVtcIkVJUDE1NVJlcGxheVByb3RlY3Rpb25cIl0gPSAxNTVdID0gXCJFSVAxNTVSZXBsYXlQcm90ZWN0aW9uXCI7XG4gICAgLyoqXG4gICAgICogVHggc3VwcG9ydHMgRUlQLTE1NTkgZ2FzIGZlZSBtYXJrZXQgbWVjaGFuaXNtXG4gICAgICogU2VlOiBbMTU1OV0oaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0xNTU5KSBGZWUgTWFya2V0IEVJUFxuICAgICAqL1xuICAgIENhcGFiaWxpdHlbQ2FwYWJpbGl0eVtcIkVJUDE1NTlGZWVNYXJrZXRcIl0gPSAxNTU5XSA9IFwiRUlQMTU1OUZlZU1hcmtldFwiO1xuICAgIC8qKlxuICAgICAqIFR4IGlzIGEgdHlwZWQgdHJhbnNhY3Rpb24gYXMgZGVmaW5lZCBpbiBFSVAtMjcxOFxuICAgICAqIFNlZTogWzI3MThdKGh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMjcxOCkgVHJhbnNhY3Rpb24gVHlwZSBFSVBcbiAgICAgKi9cbiAgICBDYXBhYmlsaXR5W0NhcGFiaWxpdHlbXCJFSVAyNzE4VHlwZWRUcmFuc2FjdGlvblwiXSA9IDI3MThdID0gXCJFSVAyNzE4VHlwZWRUcmFuc2FjdGlvblwiO1xuICAgIC8qKlxuICAgICAqIFR4IHN1cHBvcnRzIGFjY2VzcyBsaXN0IGdlbmVyYXRpb24gYXMgZGVmaW5lZCBpbiBFSVAtMjkzMFxuICAgICAqIFNlZTogWzI5MzBdKGh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMjkzMCkgQWNjZXNzIExpc3RzIEVJUFxuICAgICAqL1xuICAgIENhcGFiaWxpdHlbQ2FwYWJpbGl0eVtcIkVJUDI5MzBBY2Nlc3NMaXN0c1wiXSA9IDI5MzBdID0gXCJFSVAyOTMwQWNjZXNzTGlzdHNcIjtcbn0pKENhcGFiaWxpdHkgfHwgKENhcGFiaWxpdHkgPSB7fSkpO1xuZXhwb3J0IGZ1bmN0aW9uIGlzQWNjZXNzTGlzdFVpbnQ4QXJyYXkoaW5wdXQpIHtcbiAgICBpZiAoaW5wdXQubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjb25zdCBmaXJzdEl0ZW0gPSBpbnB1dFswXTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShmaXJzdEl0ZW0pKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNBY2Nlc3NMaXN0KGlucHV0KSB7XG4gICAgcmV0dXJuICFpc0FjY2Vzc0xpc3RVaW50OEFycmF5KGlucHV0KTsgLy8gVGhpcyBpcyBleGFjdGx5IHRoZSBzYW1lIG1ldGhvZCwgZXhjZXB0IHRoZSBvdXRwdXQgaXMgbmVnYXRlZC5cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/tx/utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkMaxInitCodeSize: () => (/* binding */ checkMaxInitCodeSize),\n/* harmony export */   getAccessListData: () => (/* binding */ getAccessListData),\n/* harmony export */   getAccessListJSON: () => (/* binding */ getAccessListJSON),\n/* harmony export */   getDataFeeEIP2930: () => (/* binding */ getDataFeeEIP2930),\n/* harmony export */   verifyAccessList: () => (/* binding */ verifyAccessList)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/common/utils.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/types.js\");\n\n\n\nconst checkMaxInitCodeSize = (common, length) => {\n    const maxInitCodeSize = common.param('vm', 'maxInitCodeSize');\n    if (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n        throw new Error(`the initcode size of this transaction is too large: it is ${length} while the max is ${common.param('vm', 'maxInitCodeSize')}`);\n    }\n};\nconst getAccessListData = (accessList) => {\n    let AccessListJSON;\n    let uint8arrayAccessList;\n    if ((0,_types_js__WEBPACK_IMPORTED_MODULE_2__.isAccessList)(accessList)) {\n        AccessListJSON = accessList;\n        const newAccessList = [];\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < accessList.length; i += 1) {\n            const item = accessList[i];\n            const addressBytes = (0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.toUint8Array)(item.address);\n            const storageItems = [];\n            // eslint-disable-next-line @typescript-eslint/prefer-for-of\n            for (let index = 0; index < item.storageKeys.length; index += 1) {\n                storageItems.push((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.toUint8Array)(item.storageKeys[index]));\n            }\n            newAccessList.push([addressBytes, storageItems]);\n        }\n        uint8arrayAccessList = newAccessList;\n    }\n    else {\n        uint8arrayAccessList = accessList !== null && accessList !== void 0 ? accessList : [];\n        // build the JSON\n        const json = [];\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < uint8arrayAccessList.length; i += 1) {\n            const data = uint8arrayAccessList[i];\n            const address = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(data[0]);\n            const storageKeys = [];\n            // eslint-disable-next-line @typescript-eslint/prefer-for-of\n            for (let item = 0; item < data[1].length; item += 1) {\n                storageKeys.push((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(data[1][item]));\n            }\n            const jsonItem = {\n                address,\n                storageKeys,\n            };\n            json.push(jsonItem);\n        }\n        AccessListJSON = json;\n    }\n    return {\n        AccessListJSON,\n        accessList: uint8arrayAccessList,\n    };\n};\nconst verifyAccessList = (accessList) => {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let key = 0; key < accessList.length; key += 1) {\n        const accessListItem = accessList[key];\n        const address = accessListItem[0];\n        const storageSlots = accessListItem[1];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/consistent-type-assertions\n        if (accessListItem[2] !== undefined) {\n            throw new Error('Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.');\n        }\n        if (address.length !== 20) {\n            throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot += 1) {\n            if (storageSlots[storageSlot].length !== 32) {\n                throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes');\n            }\n        }\n    }\n};\nconst getAccessListJSON = (accessList) => {\n    const accessListJSON = [];\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let index = 0; index < accessList.length; index += 1) {\n        const item = accessList[index];\n        const JSONItem = {\n            address: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.setLengthLeft)(item[0], 20)),\n            storageKeys: [],\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n        const storageSlots = item && item[1];\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let slot = 0; slot < storageSlots.length; slot += 1) {\n            const storageSlot = storageSlots[slot];\n            JSONItem.storageKeys.push((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)((0,_common_utils_js__WEBPACK_IMPORTED_MODULE_1__.setLengthLeft)(storageSlot, 32)));\n        }\n        accessListJSON.push(JSONItem);\n    }\n    return accessListJSON;\n};\nconst getDataFeeEIP2930 = (accessList, common) => {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n    let slots = 0;\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let index = 0; index < accessList.length; index += 1) {\n        const item = accessList[index];\n        const storageSlots = item[1];\n        slots += storageSlots.length;\n    }\n    const addresses = accessList.length;\n    return addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost);\n};\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/tx/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/types.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/types.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWNjb3VudHMvbGliL2VzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNVO0FBQ1YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWxpeWFcXERvd25sb2Fkc1xcRWNvWENoYW5nZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtYWNjb3VudHNcXGxpYlxcZXNtXFx0eXBlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-accounts/lib/esm/wallet.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-eth-accounts/lib/esm/wallet.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Wallet: () => (/* binding */ Wallet)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n * Wallet is an in memory `wallet` that can hold multiple accounts.\n * These accounts can be used when using web3.eth.sendTransaction() or web3.eth.contract.methods.contractfunction().send();\n *\n * For using Wallet functionality, install Web3 package using `npm i web3` or `yarn add web3`.\n * After that, Wallet functionality will be available as mentioned below.\n *\n * ```ts\n * import { Web3 } from 'web3';\n * const web3 = new Web3('http://127.0.0.1:7545');\n *\n * const wallet = await web3.eth.accounts.wallet.create(2);\n *\n * const signature = wallet.at(0).sign(\"Test Data\"); // use wallet\n *\n * // fund account before sending following transaction ...\n *\n * const receipt = await web3.eth.sendTransaction({ // internally sign transaction using wallet\n *    from: wallet.at(0).address,\n *    to: \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n *    value: 1\n *    //....\n * });\n * ```\n */\nclass Wallet extends web3_types__WEBPACK_IMPORTED_MODULE_0__.Web3BaseWallet {\n    constructor() {\n        super(...arguments);\n        this._addressMap = new Map();\n        this._defaultKeyName = 'web3js_wallet';\n    }\n    /**\n     * Get the storage object of the browser\n     *\n     * @returns the storage\n     */\n    static getStorage() {\n        let storage;\n        try {\n            storage = window.localStorage;\n            const x = '__storage_test__';\n            storage.setItem(x, x);\n            storage.removeItem(x);\n            return storage;\n        }\n        catch (e) {\n            return e &&\n                // everything except Firefox\n                (e.code === 22 ||\n                    // Firefox\n                    e.code === 1014 ||\n                    // test name field too, because code might not be present\n                    // everything except Firefox\n                    e.name === 'QuotaExceededError' ||\n                    // Firefox\n                    e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n                // acknowledge QuotaExceededError only if there's something already stored\n                !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(storage) &&\n                storage.length !== 0\n                ? storage\n                : undefined;\n        }\n    }\n    /**\n     * Generates one or more accounts in the wallet. If wallets already exist they will not be overridden.\n     *\n     * @param numberOfAccounts - Number of accounts to create. Leave empty to create an empty wallet.\n     * @returns The wallet\n     * ```ts\n     * web3.eth.accounts.wallet.create(2)\n     * > Wallet(2) [\n     *   {\n     *     address: '0xde38310a42B751AE57d30cFFF4a0A3c52A442fCE',\n     *     privateKey: '0x6422c9d28efdcbee93c1d32a5fc6fd6fa081b985487885296cf8c9bbb5872600',\n     *     signTransaction: [Function: signTransaction],\n     *     sign: [Function: sign],\n     *     encrypt: [Function: encrypt]\n     *   },\n     *   {\n     *     address: '0x766BF755246d924B1d017Fdb5390f38a60166691',\n     *     privateKey: '0x756530f13c0eb636ebdda655335f5dea9921e3362e2e588b0ad59e556f7751f0',\n     *     signTransaction: [Function: signTransaction],\n     *     sign: [Function: sign],\n     *     encrypt: [Function: encrypt]\n     *   },\n     *   _accountProvider: {\n     *     create: [Function: create],\n     *     privateKeyToAccount: [Function: privateKeyToAccount],\n     *     decrypt: [Function: decrypt]\n     *   },\n     *   _addressMap: Map(2) {\n     *     '0xde38310a42b751ae57d30cfff4a0a3c52a442fce' => 0,\n     *     '0x766bf755246d924b1d017fdb5390f38a60166691' => 1\n     *   },\n     *   _defaultKeyName: 'web3js_wallet'\n     * ]\n     *\n     * ```\n     */\n    create(numberOfAccounts) {\n        for (let i = 0; i < numberOfAccounts; i += 1) {\n            this.add(this._accountProvider.create());\n        }\n        return this;\n    }\n    /**\n     * Adds an account using a private key or account object to the wallet.\n     *\n     * @param account - A private key or account object\n     * @returns The wallet\n     *\n     * ```ts\n     * web3.eth.accounts.wallet.add('0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387');\n     * > Wallet(1) [\n     *   {\n     *     address: '0x85D70633b90e03e0276B98880286D0D055685ed7',\n     *     privateKey: '0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387',\n     *     signTransaction: [Function: signTransaction],\n     *     sign: [Function: sign],\n     *     encrypt: [Function: encrypt]\n     *   },\n     *   _accountProvider: {\n     *     create: [Function: create],\n     *     privateKeyToAccount: [Function: privateKeyToAccount],\n     *     decrypt: [Function: decrypt]\n     *   },\n     *   _addressMap: Map(1) { '0x85d70633b90e03e0276b98880286d0d055685ed7' => 0 },\n     *   _defaultKeyName: 'web3js_wallet'\n     * ]\n     * ```\n     */\n    add(account) {\n        var _a;\n        if (typeof account === 'string') {\n            return this.add(this._accountProvider.privateKeyToAccount(account));\n        }\n        let index = this.length;\n        const existAccount = this.get(account.address);\n        if (existAccount) {\n            console.warn(`Account ${account.address.toLowerCase()} already exists.`);\n            index = (_a = this._addressMap.get(account.address.toLowerCase())) !== null && _a !== void 0 ? _a : index;\n        }\n        this._addressMap.set(account.address.toLowerCase(), index);\n        this[index] = account;\n        return this;\n    }\n    /**\n     * Get the account of the wallet with either the index or public address.\n     *\n     * @param addressOrIndex - A string of the address or number index within the wallet.\n     * @returns The account object or undefined if the account doesn't exist\n     */\n    get(addressOrIndex) {\n        if (typeof addressOrIndex === 'string') {\n            const index = this._addressMap.get(addressOrIndex.toLowerCase());\n            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(index)) {\n                return this[index];\n            }\n            return undefined;\n        }\n        return this[addressOrIndex];\n    }\n    /**\n     * Removes an account from the wallet.\n     *\n     * @param addressOrIndex - The account address, or index in the wallet.\n     * @returns true if the wallet was removed. false if it couldn't be found.\n     * ```ts\n     * web3.eth.accounts.wallet.add('0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387');\n     *\n     * web3.eth.accounts.wallet.remove('0x85D70633b90e03e0276B98880286D0D055685ed7');\n     * > true\n     * web3.eth.accounts.wallet\n     * > Wallet(0) [\n     * _accountProvider: {\n     *   create: [Function: create],\n     *   privateKeyToAccount: [Function: privateKeyToAccount],\n     *   decrypt: [Function: decrypt]\n     * },\n     * _addressMap: Map(0) {},\n     * _defaultKeyName: 'web3js_wallet'\n     * ]\n     * ```\n     */\n    remove(addressOrIndex) {\n        if (typeof addressOrIndex === 'string') {\n            const index = this._addressMap.get(addressOrIndex.toLowerCase());\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(index)) {\n                return false;\n            }\n            this._addressMap.delete(addressOrIndex.toLowerCase());\n            this.splice(index, 1);\n            return true;\n        }\n        if (this[addressOrIndex]) {\n            this.splice(addressOrIndex, 1);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Securely empties the wallet and removes all its accounts.\n     * Use this with *caution as it will remove all accounts stored in local wallet.\n     *\n     * @returns The wallet object\n     * ```ts\n     *\n     * web3.eth.accounts.wallet.clear();\n     * > Wallet(0) [\n     * _accountProvider: {\n     *   create: [Function: create],\n     *   privateKeyToAccount: [Function: privateKeyToAccount],\n     *   decrypt: [Function: decrypt]\n     * },\n     * _addressMap: Map(0) {},\n     * _defaultKeyName: 'web3js_wallet'\n     * ]\n     * ```\n     */\n    clear() {\n        this._addressMap.clear();\n        // Setting length clears the Array in JS.\n        this.length = 0;\n        return this;\n    }\n    /**\n     * Encrypts all wallet accounts to an array of encrypted keystore v3 objects.\n     *\n     * @param password - The password which will be used for encryption\n     * @param options - encryption options\n     * @returns An array of the encrypted keystore v3.\n     *\n     * ```ts\n     * web3.eth.accounts.wallet.create(1)\n     * web3.eth.accounts.wallet.encrypt(\"abc\").then(console.log);\n     * > [\n     * '{\"version\":3,\"id\":\"fa46e213-a7c3-4844-b903-dd14d39cc7db\",\n     * \"address\":\"fa3e41a401609103c241431cbdee8623ae2a321a\",\"crypto\":\n     * {\"ciphertext\":\"8d179a911d6146ad2924e86bf493ed89b8ff3596ffec0816e761c542016ab13c\",\n     * \"cipherparams\":{\"iv\":\"acc888c6cf4a19b86846cef0185a7164\"},\"cipher\":\"aes-128-ctr\",\n     * \"kdf\":\"scrypt\",\"kdfparams\":{\"n\":8192,\"r\":8,\"p\":1,\"dklen\":32,\"salt\":\"6a743c9b367d15f4758e4f3f3378ff0fd443708d1c64854e07588ea5331823ae\"},\n     * \"mac\":\"410544c8307e3691fda305eb3722d82c3431f212a87daa119a21587d96698b57\"}}'\n     * ]\n     * ```\n     */\n    encrypt(password, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.all(this.map((account) => __awaiter(this, void 0, void 0, function* () { return account.encrypt(password, options); })));\n        });\n    }\n    /**\n     * Decrypts keystore v3 objects.\n     *\n     * @param encryptedWallets - An array of encrypted keystore v3 objects to decrypt\n     * @param password - The password to encrypt with\n     * @param options - decrypt options for the wallets\n     * @returns The decrypted wallet object\n     *\n     * ```ts\n     * web3.eth.accounts.wallet.decrypt([\n     * { version: 3,\n     * id: '83191a81-aaca-451f-b63d-0c5f3b849289',\n     * address: '06f702337909c06c82b09b7a22f0a2f0855d1f68',\n     * crypto:\n     * { ciphertext: '7d34deae112841fba86e3e6cf08f5398dda323a8e4d29332621534e2c4069e8d',\n     *   cipherparams: { iv: '497f4d26997a84d570778eae874b2333' },\n     *   cipher: 'aes-128-ctr',\n     *   kdf: 'scrypt',\n     *   kdfparams:\n     *    { dklen: 32,\n     *      salt: '208dd732a27aa4803bb760228dff18515d5313fd085bbce60594a3919ae2d88d',\n     *      n: 262144,\n     *      r: 8,\n     *      p: 1 },\n     *   mac: '0062a853de302513c57bfe3108ab493733034bf3cb313326f42cf26ea2619cf9' } },\n     * { version: 3,\n     * id: '7d6b91fa-3611-407b-b16b-396efb28f97e',\n     * address: 'b5d89661b59a9af0b34f58d19138baa2de48baaf',\n     * crypto:\n     * { ciphertext: 'cb9712d1982ff89f571fa5dbef447f14b7e5f142232bd2a913aac833730eeb43',\n     *   cipherparams: { iv: '8cccb91cb84e435437f7282ec2ffd2db' },\n     *   cipher: 'aes-128-ctr',\n     *   kdf: 'scrypt',\n     *   kdfparams:\n     *    { dklen: 32,\n     *      salt: '08ba6736363c5586434cd5b895e6fe41ea7db4785bd9b901dedce77a1514e8b8',\n     *      n: 262144,\n     *      r: 8,\n     *      p: 1 },\n     *   mac: 'd2eb068b37e2df55f56fa97a2bf4f55e072bef0dd703bfd917717d9dc54510f0' } }\n     * ], 'test').then(console.log)\n     * > Wallet {\n     *   _accountProvider: {\n     *     create: [Function: create],\n     *     privateKeyToAccount: [Function: privateKeyToAccount],\n     *     decrypt: [Function: decrypt]\n     *   },\n     *   _defaultKeyName: 'web3js_wallet',\n     *   _accounts: {\n     *     '0x85d70633b90e03e0276b98880286d0d055685ed7': {\n     *       address: '0x85D70633b90e03e0276B98880286D0D055685ed7',\n     *       privateKey: '0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387',\n     *       signTransaction: [Function: signTransaction],\n     *       sign: [Function: sign],\n     *       encrypt: [Function: encrypt]\n     *     },\n     *     '0x06f702337909c06c82b09b7a22f0a2f0855d1f68': {\n     *       address: '0x06F702337909C06C82B09B7A22F0a2f0855d1F68',\n     *       privateKey: '87a51da18900da7398b3bab03996833138f269f8f66dd1237b98df6b9ce14573',\n     *       signTransaction: [Function: signTransaction],\n     *       sign: [Function: sign],\n     *       encrypt: [Function: encrypt]\n     *     },\n     *     '0xb5d89661b59a9af0b34f58d19138baa2de48baaf': {\n     *       address: '0xB5d89661B59a9aF0b34f58D19138bAa2de48BAaf',\n     *       privateKey: '7ee61c5282979aae9dd795bb6a54e8bdc2bfe009acb64eb9a67322eec3b3da6e',\n     *       signTransaction: [Function: signTransaction],\n     *       sign: [Function: sign],\n     *       encrypt: [Function: encrypt]\n     *     }\n     *   }\n     * }\n     * ```\n     */\n    decrypt(encryptedWallets, password, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const results = yield Promise.all(encryptedWallets.map((wallet) => __awaiter(this, void 0, void 0, function* () { return this._accountProvider.decrypt(wallet, password, options); })));\n            for (const res of results) {\n                this.add(res);\n            }\n            return this;\n        });\n    }\n    /**\n     * Stores the wallet encrypted and as string in local storage.\n     * **__NOTE:__** Browser only\n     *\n     * @param password - The password to encrypt the wallet\n     * @param keyName - (optional) The key used for the local storage position, defaults to `\"web3js_wallet\"`.\n     * @returns Will return boolean value true if saved properly\n     * ```ts\n     * web3.eth.accounts.wallet.save('test#!$');\n     * >true\n     * ```\n     */\n    save(password, keyName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const storage = Wallet.getStorage();\n            if (!storage) {\n                throw new Error('Local storage not available.');\n            }\n            storage.setItem(keyName !== null && keyName !== void 0 ? keyName : this._defaultKeyName, JSON.stringify(yield this.encrypt(password)));\n            return true;\n        });\n    }\n    /**\n     * Loads a wallet from local storage and decrypts it.\n     * **__NOTE:__** Browser only\n     *\n     * @param password - The password to decrypt the wallet.\n     * @param keyName - (optional)The key used for local storage position, defaults to `web3js_wallet\"`\n     * @returns Returns the wallet object\n     *\n     * ```ts\n     * web3.eth.accounts.wallet.save('test#!$');\n     * > true\n     * web3.eth.accounts.wallet.load('test#!$');\n     * { defaultKeyName: \"web3js_wallet\",\n     *   length: 0,\n     *   _accounts: Accounts {_requestManager: RequestManager, givenProvider: Proxy, providers: {…}, _provider: WebsocketProvider, …},\n     *   [[Prototype]]: Object\n     * }\n     * ```\n     */\n    load(password, keyName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const storage = Wallet.getStorage();\n            if (!storage) {\n                throw new Error('Local storage not available.');\n            }\n            const keystore = storage.getItem(keyName !== null && keyName !== void 0 ? keyName : this._defaultKeyName);\n            if (keystore) {\n                yield this.decrypt(JSON.parse(keystore) || [], password);\n            }\n            return this;\n        });\n    }\n}\n//# sourceMappingURL=wallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-accounts/lib/esm/wallet.js\n");

/***/ })

};
;